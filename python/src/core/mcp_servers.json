{
  "version": "1.0",
  "description": "This file defines the MCP server configuration for GitHub, including available toolsets and their tools. It is used to dynamically enable and manage tools for the MCP server.",
  "last_updated": "2023-10-01",
  "servers": [{
      "server": "GitHub",
      "toolsets": [
        {
          "name": "repos",
          "description": "GitHub Repository related tools",
          "tools": [
            {
              "name": "SearchRepositories",
              "description": "Search repositories by name and metadata using GitHub’s REST API.",
              "keywords": ["search", "repositories", "repo discovery", "metadata"],
              "examples": ["Find repositories related to 'machine learning'", "Show all public repos for Microsoft", "What repos mention 'LangChain'?"]
            },
            {
              "name": "GetFileContents",
              "description": "Retrieve the contents of a specific file within a GitHub repository.",
              "keywords": ["files", "read", "contents", "repo file"],
              "examples": ["Show README file in azure/azure-sdk", "Fetch main.py from my repo", "What does Dockerfile contain?"]
            },
            {
              "name": "ListCommits",
              "description": "List recent commits in a GitHub repository.",
              "keywords": ["commits", "version history", "repo"],
              "examples": ["Show commit history for Copilot repo", "List last 10 commits on main branch", "Who committed yesterday?"]
            },
            {
              "name": "SearchCode",
              "description": "Search code across repositories for specific keywords or patterns.",
              "keywords": ["search", "code", "grep", "regex"],
              "examples": ["Find code snippets that use Pinecone", "Search for functions named PushFiles", "Where is 'LangChain.run' used?"]
            },
            {
              "name": "GetCommit",
              "description": "Retrieve details of a specific commit by SHA.",
              "keywords": ["commit", "details", "diff", "metadata"],
              "examples": ["Show commit 7a4e3df", "Get commit message for latest push", "What files changed in this commit?"]
            },
            {
              "name": "ListBranches",
              "description": "List all branches for a repository.",
              "keywords": ["branches", "repo", "versions", "git"],
              "examples": ["List all branches in repo", "What branches are active for MCP server?", "Show protected branches"]
            },
            {
              "name": "ListTags",
              "description": "List all Git tags associated with a repository.",
              "keywords": ["tags", "versions", "releases", "repo"],
              "examples": ["List all tags for Copilot repo", "What’s the latest tag?", "Show semantic version tags"]
            },
            {
              "name": "GetTag",
              "description": "Retrieve details about a specific tag.",
              "keywords": ["tags", "versioning", "metadata"],
              "examples": ["What does tag v1.2.3 represent?", "Show commit behind this tag", "What branch is tag linked to?"]
            },
            {
              "name": "CreateOrUpdateFile",
              "description": "Create or modify a file in a repository.",
              "keywords": ["write", "file", "commit", "update"],
              "examples": ["Add README.md to repo", "Update config.yaml in main branch", "Create new CONTRIBUTING file"]
            },
            {
              "name": "CreateRepository",
              "description": "Initialize a new GitHub repository.",
              "keywords": ["create", "repo", "init", "git"],
              "examples": ["Create new repo named AI-Governance", "Make a private repo for MCP tools", "Initialize repo with README"]
            },
            { 
              "name": "ForkRepository",
              "description": "Fork a repository to your GitHub account.",
              "keywords": ["fork", "copy", "clone", "mirror"],
              "examples": ["Fork Microsoft/Copilot repo", "Create fork of azure-sdk", "Can I fork a private repo?"]
            },
            {
              "name": "CreateBranch",
              "description": "Create a new branch from an existing one.",
              "keywords": ["branch", "create", "feature", "dev"],
              "examples": ["Create feature branch from main", "Add dev-mark branch", "Start a hotfix branch"]
            },
            {
              "name": "PushFiles",
              "description": "Push local file changes to a GitHub repository.",
              "keywords": ["push", "files", "upload", "version control"],
              "examples": ["Push local changes to dev branch", "Sync new files with repo", "How do I commit files with a message?"]
            },
            {
              "name": "DeleteFile",
              "description": "Delete a file from the repository via GitHub API.",
              "keywords": ["delete", "remove", "file", "cleanup"],
              "examples": ["Remove obsolete script.py", "Delete old README", "Can I delete config.json?"]
            }
          ]
        },
        {
          "name": "issues",
          "description": "GitHub Issues related tools",
          "tools": [
            {
              "name": "GetIssue",
              "description": "Retrieve a specific issue by number.",
              "keywords": ["issue", "fetch", "details"],
              "examples": ["Show issue #24", "Get bug report for login problem"]
            },
            {
              "name": "SearchIssues",
              "description": "Search issues across repositories using filters and keywords.",
              "keywords": ["search", "issues", "keywords", "filters"],
              "examples": ["Find issues with label 'bug'", "Search issues mentioning MCP"]
            },
            {
              "name": "ListIssues",
              "description": "List issues for a repository with optional filters.",
              "keywords": ["issues", "list", "repository"],
              "examples": ["List open issues in Copilot repo", "Show closed issues from last week"]
            },
            {
              "name": "GetIssueComments",
              "description": "Retrieve all comments on a specific issue.",
              "keywords": ["comments", "issue", "discussion"],
              "examples": ["Show comments on issue #13", "What feedback is on bug report #9"]
            },
            {
              "name": "CreateIssue",
              "description": "Create a new issue in the repository.",
              "keywords": ["create", "issue", "bug", "request"],
              "examples": ["Open feature request for MCP export", "Report a token overflow bug"]
            },
            {
              "name": "AddIssueComment",
              "description": "Add a comment to an existing issue.",
              "keywords": ["comment", "issue", "discussion"],
              "examples": ["Comment 'this is helpful' on issue #5", "Add reproduction steps to bug #7"]
            },
            {
              "name": "UpdateIssue",
              "description": "Update an issue’s title, body, or labels.",
              "keywords": ["update", "edit", "issue"],
              "examples": ["Change title of issue #18", "Add label 'wontfix' to issue #31"]
            },
            {
              "name": "AssignCopilotToIssue",
              "description": "Assign Copilot agent to a GitHub issue for assistance.",
              "keywords": ["assign", "copilot", "issue"],
              "examples": ["Assign Copilot to triage issue #44", "Can Copilot prioritize bugs?"]
            }
          ]
        },
        {
          "name": "users",
          "description": "GitHub User related tools",
          "tools": [
            {
              "name": "SearchUsers",
              "description": "Search GitHub users by name or keywords.",
              "keywords": ["search", "users", "profiles"],
              "examples": ["Find users with 'AI' in bio", "Search for user 'mark3labs'"]
            }
          ]
        },
        {
          "name": "orgs",
          "description": "GitHub Organization related tools",
          "tools": [
            {
              "name": "SearchOrgs",
              "description": "Search for GitHub organizations by name or keywords.",
              "keywords": ["search", "organizations", "org"],
              "examples": ["Find orgs working on Copilot", "Search for 'LangChain Labs' organization"]
            }
          ]
        },
        {
          "name": "pull_requests",
          "description": "GitHub Pull Request related tools",
          "tools": [
            {
              "name": "GetPullRequest",
              "description": "Retrieve a pull request by number.",
              "keywords": ["pull request", "fetch", "details"],
              "examples": ["Get PR #89", "Show status of pull request 102"]
            },
            {
              "name": "ListPullRequests",
              "description": "List pull requests in a repository.",
              "keywords": ["list", "pull requests", "repository"],
              "examples": ["List open PRs in repo", "Show closed pull requests"]
            },
            {
              "name": "GetPullRequestFiles",
              "description": "Fetch files changed in a pull request.",
              "keywords": ["files", "diff", "pull request"],
              "examples": ["What files changed in PR #45", "List updated files in recent PR"]
            },
            {
              "name": "SearchPullRequests",
              "description": "Search pull requests across repositories.",
              "keywords": ["search", "pull request", "keywords"],
              "examples": ["Search PRs mentioning Pinecone", "Find PRs with label 'enhancement'"]
            },
            {
              "name": "GetPullRequestStatus",
              "description": "Get the status of a pull request including mergeability.",
              "keywords": ["status", "pull request", "merge"],
              "examples": ["Can PR #77 be merged?", "Show PR conflict status"]
            },
            {
              "name": "GetPullRequestComments",
              "description": "Retrieve all comments on a pull request.",
              "keywords": ["comments", "pull request", "feedback"],
              "examples": ["Show feedback on PR #19", "List reviewer comments"]
            },
            {
              "name": "GetPullRequestReviews",
              "description": "List reviews submitted to a pull request.",
              "keywords": ["reviews", "pull request", "reviewers"],
              "examples": ["List reviews for PR #92", "Who approved this change?"]
            },
            {
              "name": "GetPullRequestDiff",
              "description": "Retrieve the diff view of a pull request.",
              "keywords": ["diff", "changes", "pull request"],
              "examples": ["Show code diff in PR #108", "What lines were added in this PR?"]
            },
            {
              "name": "MergePullRequest",
              "description": "Merge a pull request into the target branch.",
              "keywords": ["merge", "pull request", "branch"],
              "examples": ["Merge PR #60 into main", "Squash commits when merging"]
            },
            {
              "name": "UpdatePullRequestBranch",
              "description": "Sync the PR branch with its base branch.",
              "keywords": ["update", "sync", "branch"],
              "examples": ["Update branch for PR #88", "Fix merge conflicts in open PR"]
            },
            {
              "name": "CreatePullRequest",
              "description": "Create a new pull request.",
              "keywords": ["create", "pull request", "merge"],
              "examples": ["Open PR from dev to main", "Create draft PR for review"]
            },
            {
              "name": "UpdatePullRequest",
              "description": "Update metadata of a pull request.",
              "keywords": ["update", "edit", "pull request"],
              "examples": ["Change PR title", "Add reviewer to PR"]
            },
            {
              "name": "RequestCopilotReview",
              "description": "Request an agentic Copilot review on the PR.",
              "keywords": ["request", "review", "copilot"],
              "examples": ["Have Copilot review PR #101", "Ask Copilot to comment on security changes"]
            },
            {
              "name": "CreateAndSubmitPullRequestReview",
              "description": "Create and submit a complete PR review.",
              "keywords": ["review", "submit", "feedback"],
              "examples": ["Submit review for PR #22", "Approve pull request"]
            },
            {
              "name": "CreatePendingPullRequestReview",
              "description": "Create a pending review for a pull request.",
              "keywords": ["pending review", "draft", "feedback"],
              "examples": ["Start review on PR #41", "Draft comments before submission"]
            },
            {
              "name": "AddPullRequestReviewCommentToPendingReview",
              "description": "Add inline comments to a pending PR review.",
              "keywords": ["comment", "pending review", "pull request"],
              "examples": ["Add comment to file change in PR", "Note issue in new code block"]
            },
            {
              "name": "SubmitPendingPullRequestReview",
              "description": "Submit a pending review once complete.",
              "keywords": ["submit", "review", "pull request"],
              "examples": ["Finalize review for PR #55", "Submit reviewer feedback"]
            },
            {
              "name": "DeletePendingPullRequestReview",
              "description": "Delete a pending review before submission.",
              "keywords": ["delete", "review", "pull request"],
              "examples": ["Discard draft review on PR #33", "Remove unsubmitted feedback"]
            }
          ]
        },
        {
          "name": "actions",
          "description": "GitHub Actions workflows and CI/CD operations",
          "tools": [
            {
              "name": "ListWorkflows",
              "description": "List workflows configured in a GitHub repository.",
              "keywords": ["actions", "workflows", "CI/CD", "list"],
              "examples": ["List all workflows for repo", "What CI jobs are defined?"]
            },
            {
              "name": "ListWorkflowRuns",
              "description": "List all runs for a specific workflow.",
              "keywords": ["workflow", "runs", "jobs", "history"],
              "examples": ["Show recent workflow runs", "List failed runs"]
            },
            {
              "name": "GetWorkflowRun",
              "description": "Fetch details for a specific workflow run.",
              "keywords": ["workflow run", "status", "details"],
              "examples": ["Get info on workflow run #32", "Was the run successful?"]
            },
            {
              "name": "GetWorkflowRunLogs",
              "description": "Retrieve the log output for a workflow run.",
              "keywords": ["logs", "workflow run", "debug"],
              "examples": ["Download logs for run #17", "What failed in last deployment?"]
            },
            {
              "name": "ListWorkflowJobs",
              "description": "List jobs executed during a workflow run.",
              "keywords": ["jobs", "workflow", "details"],
              "examples": ["What jobs were run during CI?", "List all build steps"]
            },
            {
              "name": "GetJobLogs",
              "description": "Get detailed logs for a specific job in a workflow.",
              "keywords": ["job logs", "debug", "CI"],
              "examples": ["Show logs for 'build-app' job", "Where did linting fail?"]
            },
            {
              "name": "ListWorkflowRunArtifacts",
              "description": "List artifacts generated during a workflow run.",
              "keywords": ["artifacts", "run", "workflow", "output"],
              "examples": ["What artifacts were generated?", "Get test results archive"]
            },
            {
              "name": "DownloadWorkflowRunArtifact",
              "description": "Download specific workflow run artifact.",
              "keywords": ["download", "artifact", "workflow run"],
              "examples": ["Download build.zip from run #20", "Fetch generated logs"]
            },
            {
              "name": "GetWorkflowRunUsage",
              "description": "Get resource usage statistics for a workflow run.",
              "keywords": ["usage", "time", "minutes", "cost"],
              "examples": ["How long did build take?", "Estimate minutes used"]
            },
            {
              "name": "RunWorkflow",
              "description": "Trigger a GitHub Actions workflow manually.",
              "keywords": ["trigger", "workflow", "run"],
              "examples": ["Run 'deploy' workflow", "Start backup job now"]
            },
            {
              "name": "RerunWorkflowRun",
              "description": "Rerun a completed workflow.",
              "keywords": ["rerun", "workflow", "retry"],
              "examples": ["Retry failed workflow run", "Run tests again"]
            },
            {
              "name": "RerunFailedJobs",
              "description": "Rerun only failed jobs in a workflow run.",
              "keywords": ["rerun", "failed jobs", "retry"],
              "examples": ["Rerun failed CI tests", "Retry broken build steps"]
            },
            {
              "name": "CancelWorkflowRun",
              "description": "Cancel a currently running workflow.",
              "keywords": ["cancel", "workflow", "abort"],
              "examples": ["Cancel deploy workflow", "Stop stuck CI job"]
            },
            {
              "name": "DeleteWorkflowRunLogs",
              "description": "Delete logs associated with a workflow run.",
              "keywords": ["delete", "logs", "workflow run"],
              "examples": ["Delete logs from failed run", "Clean up history"]
            }
          ]
        },
        {
          "name": "code_security",
          "description": "Code security related tools, such as GitHub Code Scanning",
          "tools": [
            {
              "name": "GetCodeScanningAlert",
              "description": "Retrieve details of a specific code scanning alert.",
              "keywords": ["security", "alert", "code scanning", "risk"],
              "examples": ["Show alert #12 from code scanning", "Get info on buffer overflow finding"]
            },
            {
              "name": "ListCodeScanningAlerts",
              "description": "List all code scanning alerts in a repository.",
              "keywords": ["code scanning", "alerts", "security"],
              "examples": ["List security issues in repo", "How many code alerts exist?"]
            }
          ]
        },
        {
          "name": "secret_protection",
          "description": "Secret protection related tools, such as GitHub Secret Scanning",
          "tools": [
            {
              "name": "GetSecretScanningAlert",
              "description": "Retrieve details of a specific secret scanning alert.",
              "keywords": ["secret", "security", "alert", "token"],
              "examples": ["Get secret alert #99", "Was an API key exposed?"]
            },
            {
              "name": "ListSecretScanningAlerts",
              "description": "List all secret scanning alerts in a repository.",
              "keywords": ["secret scanning", "alerts", "leak"],
              "examples": ["List all secret scan alerts", "Any exposed credentials?"]
            }
          ]
        },
        {
          "name": "notifications",
          "description": "GitHub Notifications related tools",
          "tools": [
            {
              "name": "ListNotifications",
              "description": "List GitHub notifications for the current user.",
              "keywords": ["notifications", "inbox", "updates"],
              "examples": ["Show my GitHub alerts", "What pull requests need my attention?"]
            },
            {
              "name": "GetNotificationDetails",
              "description": "Retrieve metadata about a specific notification.",
              "keywords": ["notification", "details", "context"],
              "examples": ["Get info about notification #5", "Why did this alert appear?"]
            },
            {
              "name": "DismissNotification",
              "description": "Dismiss a GitHub notification.",
              "keywords": ["dismiss", "hide", "notification"],
              "examples": ["Clear notification for PR #32", "Dismiss alert about new issue"]
            },
            {
              "name": "MarkAllNotificationsRead",
              "description": "Mark all GitHub notifications as read.",
              "keywords": ["notifications", "mark read", "clear"],
              "examples": ["Mark all alerts as read", "Reset my GitHub inbox"]
            },
            {
              "name": "ManageNotificationSubscription",
              "description": "Manage subscriptions for notifications on specific threads.",
              "keywords": ["subscription", "notifications", "thread"],
              "examples": ["Subscribe to updates on issue #14", "Unfollow comments on PR #23"]
            },
            {
              "name": "ManageRepositoryNotificationSubscription",
              "description": "Subscribe or unsubscribe to repository-wide notifications.",
              "keywords": ["repository", "notifications", "subscribe"],
              "examples": ["Unsubscribe from alerts in langchain repo", "Follow changes in MCP tools"]
            }
          ]
        },
        {
          "name": "context",
          "description": "Tools that provide context about the current user and GitHub context you are operating in",
          "tools": [
            {
              "name": "GetMe",
              "description": "Retrieve information about the current authenticated user.",
              "keywords": ["user", "identity", "context"],
              "examples": ["Who am I logged in as?", "Get my GitHub profile"]
            }
          ]
        },
        {
          "name": "experiments",
          "description": "Experimental features that are not considered stable yet",
          "tools": []
        },
        {
          "name": "dynamic",
          "description": "Discover GitHub MCP tools that can help achieve tasks by enabling additional sets of tools",
          "tools": [
            {
              "name": "ListAvailableToolsets",
              "description": "List all toolsets that could be enabled dynamically.",
              "keywords": ["discover", "toolsets", "available"],
              "examples": ["What toolsets are available?", "List dynamic tool groups"]
            },
            {
              "name": "GetToolsetsTools",
              "description": "Retrieve all tools grouped by toolset.",
              "keywords": ["tools", "toolsets", "grouped"],
              "examples": ["Show tools in 'repos' toolset", "What’s included in 'actions'?"]
            },
            {
              "name": "EnableToolset",
              "description": "Dynamically enable a toolset for runtime access.",
              "keywords": ["enable", "toolset", "runtime"],
              "examples": ["Enable 'experiments' toolset", "Activate 'notifications'"]
            }
          ]
        }
      ]
    },
    {
      "server": "Azure",
      "toolsets": [
        {
          "name": "appconfig",
          "description": "Azure App Configuration key-value management tools",
          "tools": [
            {
              "name": "azmcp-appconfig-account-list",
              "description": "List available App Configuration accounts",
              "keywords": ["account", "appconfig", "list"],
              "examples": ["List App Configuration accounts"]
            },
            {
              "name": "azmcp-appconfig-kv-list",
              "description": "List key-values in App Configuration",
              "keywords": ["keys", "values", "configuration"],
              "examples": ["Show all App Configuration entries"]
            },
            {
              "name": "azmcp-appconfig-kv-show",
              "description": "Retrieve value of a specific key",
              "keywords": ["key", "value", "lookup"],
              "examples": ["Show value of 'AppTheme' key"]
            },
            {
              "name": "azmcp-appconfig-kv-set",
              "description": "Set or update a key-value entry",
              "keywords": ["set", "update", "config"],
              "examples": ["Update 'LogLevel' to 'Verbose'"]
            },
            {
              "name": "azmcp-appconfig-kv-delete",
              "description": "Delete a key-value from configuration",
              "keywords": ["delete", "remove", "key"],
              "examples": ["Remove 'DeprecatedSetting'"]
            },
            {
              "name": "azmcp-appconfig-kv-lock",
              "description": "Lock a key to prevent editing",
              "keywords": ["lock", "protect", "freeze"],
              "examples": ["Lock 'EnvironmentMode'"]
            },
            {
              "name": "azmcp-appconfig-kv-unlock",
              "description": "Unlock a previously locked key",
              "keywords": ["unlock", "edit", "enable"],
              "examples": ["Unlock 'MaintenanceFlag'"]
            }
          ]
        },
        {
          "name": "cosmos",
          "description": "Azure Cosmos DB account, database, and container operations",
          "tools": [
            {
              "name": "azmcp-cosmos-account-list",
              "description": "List available Cosmos DB accounts",
              "keywords": ["cosmos", "accounts", "database"],
              "examples": ["Show Cosmos DB accounts"]
            },
            {
              "name": "azmcp-cosmos-database-list",
              "description": "List databases under a Cosmos account",
              "keywords": ["databases", "cosmos", "storage"],
              "examples": ["List databases in 'prod-cosmos'"]
            },
            {
              "name": "azmcp-cosmos-container-list",
              "description": "List containers within a database",
              "keywords": ["containers", "collections", "cosmos"],
              "examples": ["Show containers in 'analytics-db'"]
            },
            {
              "name": "azmcp-cosmos-database-container-item-query",
              "description": "Query items from a Cosmos container",
              "keywords": ["query", "read", "items"],
              "examples": ["Query user profiles from container"]
            },
            {
              "name": "azmcp-cosmos-database-container-item-insert",
              "description": "Insert a document into a container",
              "keywords": ["insert", "write", "document"],
              "examples": ["Add new telemetry record"]
            },
            {
              "name": "azmcp-cosmos-database-container-item-delete",
              "description": "Delete a document from container",
              "keywords": ["delete", "document", "remove"],
              "examples": ["Delete expired token item"]
            }
          ]
        },
        {
          "name": "storage",
          "description": "Azure Blob Storage account and container operations",
          "tools": [
            {
              "name": "azmcp-storage-account-list",
              "description": "List Azure Storage accounts",
              "keywords": ["storage", "accounts", "blob"],
              "examples": ["Show all blob storage accounts"]
            },
            {
              "name": "azmcp-storage-container-list",
              "description": "List containers within a storage account",
              "keywords": ["containers", "blob", "files"],
              "examples": ["List backup containers"]
            },
            {
              "name": "azmcp-storage-blob-list",
              "description": "List blobs within a container",
              "keywords": ["blobs", "files", "objects"],
              "examples": ["Show files in 'archive-container'"]
            },
            {
              "name": "azmcp-storage-blob-download",
              "description": "Download a blob from storage",
              "keywords": ["download", "blob", "get"],
              "examples": ["Download 'app.log' from storage"]
            },
            {
              "name": "azmcp-storage-blob-upload",
              "description": "Upload a blob to a container",
              "keywords": ["upload", "blob", "write"],
              "examples": ["Upload 'report.pdf' to container"]
            },
            {
              "name": "azmcp-storage-blob-delete",
              "description": "Delete a blob",
              "keywords": ["delete", "blob", "remove"],
              "examples": ["Remove 'debug.log'"]
            }
          ]
        },
        {
          "name": "monitor",
          "description": "Azure Monitor query tools for logs and metrics",
          "tools": [
            {
              "name": "azmcp-monitor-query-logs",
              "description": "Run KQL-based log queries in Azure Monitor",
              "keywords": ["logs", "monitoring", "KQL", "analytics"],
              "examples": ["Query error logs from yesterday", "Find login failures in past 24h"]
            },
            {
              "name": "azmcp-monitor-query-metrics",
              "description": "Query real-time performance metrics",
              "keywords": ["metrics", "performance", "monitor"],
              "examples": ["CPU usage of AppService", "Memory metrics for storage account"]
            }
          ]
        },
        {
          "name": "keyvault",
          "description": "Azure Key Vault tools for managing secrets and keys",
          "tools": [
            {
              "name": "azmcp-keyvault-key-list",
              "description": "List all keys stored in Key Vault",
              "keywords": ["keys", "vault", "encryption"],
              "examples": ["List encryption keys for tenant", "Show available vault keys"]
            },
            {
              "name": "azmcp-keyvault-key-get",
              "description": "Retrieve specific key metadata or value",
              "keywords": ["get", "retrieve", "key"],
              "examples": ["Fetch 'SignKey' from vault", "Get metadata for RSA key"]
            },
            {
              "name": "azmcp-keyvault-key-create",
              "description": "Create a new cryptographic key in vault",
              "keywords": ["create", "key", "generate"],
              "examples": ["Generate new RSA key", "Create AES key for encryption"]
            },
            {
              "name": "azmcp-keyvault-key-delete",
              "description": "Delete a key from Key Vault",
              "keywords": ["delete", "remove", "key"],
              "examples": ["Delete 'DeprecatedKey'", "Remove expired signing key"]
            }
          ]
        },
        {
          "name": "search",
          "description": "Azure AI Search index and service management",
          "tools": [
            {
              "name": "azmcp-search-service-list",
              "description": "List available AI Search services",
              "keywords": ["search", "services", "indexing"],
              "examples": ["Show AI Search services in West US", "List all search tenants"]
            },
            {
              "name": "azmcp-search-index-list",
              "description": "List indexes within a search service",
              "keywords": ["indexes", "search", "metadata"],
              "examples": ["Show indexes in 'LegalSearch'", "What indexes are used for eDiscovery?"]
            },
            {
              "name": "azmcp-search-index-query",
              "description": "Run search queries on an Azure index",
              "keywords": ["query", "index", "search"],
              "examples": ["Search for contracts tagged NDA", "Find policies labeled '2024-HIPAA'"]
            },
            {
              "name": "azmcp-search-index-create",
              "description": "Create a new search index",
              "keywords": ["create", "index", "mapping"],
              "examples": ["Create index for product catalog", "Build new index for resume search"]
            },
            {
              "name": "azmcp-search-index-delete",
              "description": "Delete a search index",
              "keywords": ["delete", "index", "clean"],
              "examples": ["Remove dev-test index", "Delete legacy index from AI Search"]
            }
          ]
        },
        {
          "name": "kusto",
          "description": "Azure Data Explorer (Kusto) query tools",
          "tools": [
            {
              "name": "azmcp-kusto-cluster-list",
              "description": "List all Kusto clusters in a subscription",
              "keywords": ["kusto", "clusters", "analytics"],
              "examples": ["Show clusters for telemetry analytics", "List Kusto clusters by region"]
            },
            {
              "name": "azmcp-kusto-database-list",
              "description": "List databases within a Kusto cluster",
              "keywords": ["database", "kusto", "data explorer"],
              "examples": ["Show databases in 'prod-cluster'", "List telemetry databases"]
            },
            {
              "name": "azmcp-kusto-query",
              "description": "Run Kusto query in a selected database",
              "keywords": ["query", "KQL", "analytics"],
              "examples": ["Find errors from last deployment", "Count failed requests by region"]
            }
          ]
        },
        {
          "name": "postgres",
          "description": "Azure DB for PostgreSQL operations",
          "tools": [
            {
              "name": "azmcp-postgres-server-list",
              "description": "List PostgreSQL servers in your Azure subscription",
              "keywords": ["postgres", "servers", "databases"],
              "examples": ["List DB servers for finance app", "Show PostgreSQL clusters"]
            },
            {
              "name": "azmcp-postgres-database-list",
              "description": "List databases within a PostgreSQL server",
              "keywords": ["databases", "list", "postgres"],
              "examples": ["List databases on server 'pg-core'", "Show all schemas in finance-postgres"]
            },
            {
              "name": "azmcp-postgres-table-query",
              "description": "Run SQL queries on PostgreSQL tables",
              "keywords": ["SQL", "query", "tables"],
              "examples": ["SELECT * FROM users WHERE active=true", "Get top 10 customers by revenue"]
            }
          ]
        },
        {
          "name": "servicebus",
          "description": "Azure Service Bus namespace and messaging tools",
          "tools": [
            {
              "name": "azmcp-servicebus-namespace-list",
              "description": "List all Service Bus namespaces",
              "keywords": ["servicebus", "namespaces", "messaging"],
              "examples": ["List Service Bus namespaces", "Show all messaging domains"]
            },
            {
              "name": "azmcp-servicebus-queue-list",
              "description": "List queues inside a namespace",
              "keywords": ["queues", "servicebus", "list"],
              "examples": ["Show queues in 'prod-sb'", "List queues in finance namespace"]
            },
            {
              "name": "azmcp-servicebus-message-send",
              "description": "Send message to a Service Bus queue",
              "keywords": ["send", "queue", "message"],
              "examples": ["Send 'Hello World' to queue", "Publish alert to SB topic"]
            },
            {
              "name": "azmcp-servicebus-message-receive",
              "description": "Receive messages from a queue",
              "keywords": ["receive", "message", "consume"],
              "examples": ["Read from message queue", "Show next 5 messages from alert-queue"]
            }
          ]
        },
        {
          "name": "resource_management",
          "description": "Azure subscription and resource group utilities",
          "tools": [
            {
              "name": "azmcp-resourcegroup-list",
              "description": "List resource groups in current subscription",
              "keywords": ["resource group", "list", "infrastructure"],
              "examples": ["List all resource groups", "Show RGs in West US"]
            },
            {
              "name": "azmcp-subscription-list",
              "description": "List available Azure subscriptions",
              "keywords": ["subscription", "list", "account"],
              "examples": ["Show my Azure subscriptions", "What tenant am I using?"]
            }
          ]
        },
        {
          "name": "cli",
          "description": "Run native Azure CLI commands",
          "tools": [
            {
              "name": "azmcp-cli-command-run",
              "description": "Execute any valid Azure CLI command",
              "keywords": ["cli", "az", "command"],
              "examples": ["az vm list", "Run az deployment group create"]
            }
          ]
        }
      ]
    },
    {
      "server": "VSCode",
      "toolsets": [
        {
          "name": "filesystem_editor",
          "description": "Tools for reading, writing, deleting, and formatting files in VSCode editor",
          "tools": [
            {
              "name": "vscode-fs-read-file",
              "description": "Read the contents of a file from the workspace",
              "keywords": ["read", "file", "open"],
              "examples": ["Show contents of main.py", "Open README.md"]
            },
            {
              "name": "vscode-fs-write-file",
              "description": "Write new contents to an existing file",
              "keywords": ["write", "edit", "file"],
              "examples": ["Overwrite text in config.yaml", "Update settings.json"]
            },
            {
              "name": "vscode-fs-delete-file",
              "description": "Delete a file from the workspace",
              "keywords": ["delete", "remove", "file"],
              "examples": ["Remove obsolete script.js", "Delete temp.log"]
            },
            {
              "name": "vscode-fs-list-directory",
              "description": "List files and folders in a directory",
              "keywords": ["list", "directory", "folder"],
              "examples": ["Show files in src/", "List contents of root folder"]
            },
            {
              "name": "vscode-editor-get-selection",
              "description": "Get selected text in active editor",
              "keywords": ["selection", "highlight", "cursor"],
              "examples": ["Get current selection", "Which code is highlighted?"]
            },
            {
              "name": "vscode-editor-insert-text",
              "description": "Insert text at the current cursor location",
              "keywords": ["insert", "text", "cursor"],
              "examples": ["Insert 'Hello World'", "Add TODO below function"]
            },
            {
              "name": "vscode-editor-replace-selection",
              "description": "Replace the selected text with new content",
              "keywords": ["replace", "selection", "text"],
              "examples": ["Replace selection with 'return True'", "Overwrite highlighted code"]
            },
            {
              "name": "vscode-editor-format-document",
              "description": "Apply formatting rules to the entire open document",
              "keywords": ["format", "document", "prettify"],
              "examples": ["Format current file", "Beautify code layout"]
            }
          ]
        },
        {
          "name": "git",
          "description": "Version control utilities for Git integration in VSCode",
          "tools": [
            {
              "name": "vscode-git-status",
              "description": "Show changes in working directory and staging area",
              "keywords": ["git", "status", "diff"],
              "examples": ["What's changed in this repo?", "List modified files"]
            },
            {
              "name": "vscode-git-commit",
              "description": "Commit staged changes with a message",
              "keywords": ["commit", "git", "save"],
              "examples": ["Commit changes with 'initial setup'", "Save latest work"]
            },
            {
              "name": "vscode-git-push",
              "description": "Push local commits to remote repository",
              "keywords": ["push", "remote", "sync"],
              "examples": ["Push new branch to origin", "Sync local changes"]
            },
            {
              "name": "vscode-git-pull",
              "description": "Pull remote updates into local workspace",
              "keywords": ["pull", "fetch", "update"],
              "examples": ["Pull latest changes", "Update repo from remote"]
            },
            {
              "name": "vscode-git-branch-list",
              "description": "List all local and remote branches",
              "keywords": ["branch", "list", "git"],
              "examples": ["Show all repo branches", "List remote branches"]
            },
            {
              "name": "vscode-git-create-branch",
              "description": "Create a new branch in Git",
              "keywords": ["create", "branch", "git"],
              "examples": ["Make branch 'feature/login'", "Start hotfix branch"]
            },
            {
              "name": "vscode-git-diff",
              "description": "Show code differences between commits or branches",
              "keywords": ["diff", "changes", "comparison"],
              "examples": ["What changed since last commit?", "Compare dev with main"]
            },
            {
              "name": "vscode-git-log",
              "description": "View commit history of the repository",
              "keywords": ["log", "history", "commits"],
              "examples": ["Show last 5 commits", "Who authored recent change?"]
            }
          ]
        },
        {
          "name": "terminal",
          "description": "Terminal and shell command tools within VSCode",
          "tools": [
            {
              "name": "vscode-terminal-run-command",
              "description": "Execute a shell command in VSCode terminal",
              "keywords": ["run", "command", "shell"],
              "examples": ["Run 'npm start'", "Execute 'git status'"]
            },
            {
              "name": "vscode-terminal-create",
              "description": "Create a new terminal instance",
              "keywords": ["terminal", "create", "shell"],
              "examples": ["Create bash terminal", "Open terminal for Python"]
            },
            {
              "name": "vscode-terminal-list",
              "description": "List active terminals",
              "keywords": ["list", "terminal", "sessions"],
              "examples": ["What terminals are open?", "List running terminals"]
            },
            {
              "name": "vscode-terminal-close",
              "description": "Close an active terminal session",
              "keywords": ["close", "terminal", "exit"],
              "examples": ["Close bash terminal", "Shutdown current terminal"]
            }
          ]
        },
        {
          "name": "extensions_settings",
          "description": "Tools for managing extensions and updating VSCode settings",
          "tools": [
            {
              "name": "vscode-extension-list",
              "description": "List installed extensions in VSCode",
              "keywords": ["extensions", "list", "installed"],
              "examples": ["What extensions are active?", "List installed plugins"]
            },
            {
              "name": "vscode-extension-install",
              "description": "Install a new VSCode extension",
              "keywords": ["install", "extension", "marketplace"],
              "examples": ["Install Python extension", "Add Prettier plugin"]
            },
            {
              "name": "vscode-extension-uninstall",
              "description": "Uninstall an existing extension",
              "keywords": ["uninstall", "extension", "remove"],
              "examples": ["Remove ESLint extension", "Delete theme pack"]
            },
            {
              "name": "vscode-settings-get",
              "description": "Retrieve a VSCode configuration setting",
              "keywords": ["settings", "get", "config"],
              "examples": ["Get setting 'editor.fontSize'", "What theme is currently active?"]
            },
            {
              "name": "vscode-settings-update",
              "description": "Update a configuration setting in VSCode",
              "keywords": ["settings", "update", "change"],
              "examples": ["Set 'editor.tabSize' to 4", "Change default terminal shell"]
            }
          ]
        },
        {
          "name": "workspace_projects",
          "description": "Tools for navigating and managing project folders and files",
          "tools": [
            {
              "name": "vscode-workspace-list-folders",
              "description": "List all workspace folders currently open",
              "keywords": ["workspace", "folders", "projects"],
              "examples": ["List all open folders", "What directories are in the workspace?"]
            },
            {
              "name": "vscode-workspace-open-folder",
              "description": "Open a folder into the workspace",
              "keywords": ["open", "folder", "workspace"],
              "examples": ["Open 'src' folder", "Load 'myproject/' into workspace"]
            },
            {
              "name": "vscode-workspace-close-folder",
              "description": "Close a folder from the workspace",
              "keywords": ["close", "folder", "workspace"],
              "examples": ["Close folder 'tests'", "Remove 'drafts/' from workspace"]
            },
            {
              "name": "vscode-workspace-get-active-file",
              "description": "Get the currently active file in editor",
              "keywords": ["active file", "current", "editor"],
              "examples": ["Which file is open?", "Get name of active tab"]
            }
          ]
        },
        {
          "name": "debug_tasks",
          "description": "Tools to control debugging sessions and task execution",
          "tools": [
            {
              "name": "vscode-debug-start",
              "description": "Start a debugging session",
              "keywords": ["debug", "start", "launch"],
              "examples": ["Begin debugging 'app.py'", "Start node debugger"]
            },
            {
              "name": "vscode-debug-stop",
              "description": "Stop an active debugging session",
              "keywords": ["debug", "stop", "end"],
              "examples": ["Stop current debugger", "End debugging task"]
            },
            {
              "name": "vscode-task-run",
              "description": "Run a named VSCode task",
              "keywords": ["task", "run", "execute"],
              "examples": ["Run build task", "Execute lint workflow"]
            },
            {
              "name": "vscode-task-list",
              "description": "List available configured tasks",
              "keywords": ["tasks", "list", "configuration"],
              "examples": ["What tasks are defined?", "Show npm tasks"]
            }
          ]
        },
        {
          "name": "copilot_agent",
          "description": "Tools for interacting with Copilot Chat and agent capabilities in VSCode",
          "tools": [
            {
              "name": "vscode-copilot-chat-send",
              "description": "Send a message to Copilot Chat panel",
              "keywords": ["copilot", "chat", "send"],
              "examples": ["Ask Copilot to refactor code", "Send question about syntax"]
            },
            {
              "name": "vscode-copilot-chat-get-history",
              "description": "Retrieve chat history from Copilot panel",
              "keywords": ["history", "chat", "copilot"],
              "examples": ["Show last 5 chat messages", "Get Copilot session transcript"]
            },
            {
              "name": "vscode-copilot-agent-plan",
              "description": "Generate agentic action plan based on user intent",
              "keywords": ["plan", "copilot", "agent", "intent"],
              "examples": ["What steps should Copilot take?", "Generate plan for setting up test suite"]
            },
            {
              "name": "vscode-copilot-agent-execute",
              "description": "Execute planned actions from Copilot agent",
              "keywords": ["execute", "agent", "copilot"],
              "examples": ["Run Copilot’s plan for file migration", "Start auto-refactor workflow"]
            }
          ]
        }
      ]
    }
  ]
}