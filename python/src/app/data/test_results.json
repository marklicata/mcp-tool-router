[
    {
        "expected_tools": [
            "CodeLogic.Application_Modeler"
        ],
        "matching_tools": [
            "CodeLogic.Application_Modeler"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "CodeLogic.Scanner",
            "CodeLogic.Reporting_Engine",
            "CodeLogic.Graph_Generator",
            "CodeLogic.Dataflow_Analyzer",
            "CodeLogic.Dependency_Resolver",
            "Memgraph.Memgraph_Data_Retriever",
            "GitHub.SearchRepositories",
            "Linear.Schemas",
            "OpenSearch.index_document"
        ],
        "returned_tools": [
            "CodeLogic.Application_Modeler",
            "CodeLogic.Scanner",
            "CodeLogic.Reporting_Engine",
            "CodeLogic.Graph_Generator",
            "CodeLogic.Dataflow_Analyzer",
            "CodeLogic.Dependency_Resolver",
            "Memgraph.Memgraph_Data_Retriever",
            "GitHub.SearchRepositories",
            "Linear.Schemas",
            "OpenSearch.index_document"
        ],
        "query": "Generate an abstract model of the current application architecture using the latest scanned metadata for architectural analysis.",
        "response_time": 617.7806854248047,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "NanoVMs.Create_Deployment"
        ],
        "matching_tools": [
            "NanoVMs.Create_Deployment"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "NanoVMs.MCP_Image_Management",
            "NanoVMs.Describe_Deployment",
            "NanoVMs.SSH_Management",
            "NanoVMs.List_Deployments",
            "Nutrient.GRPC_API",
            "Nutrient.DWS_MCP_Server",
            "NanoVMs.Delete_Deployment",
            "Azure.azmcp_search_index_create",
            "GitHub.CreateRepository"
        ],
        "returned_tools": [
            "NanoVMs.Create_Deployment",
            "NanoVMs.MCP_Image_Management",
            "NanoVMs.Describe_Deployment",
            "NanoVMs.SSH_Management",
            "NanoVMs.List_Deployments",
            "Nutrient.GRPC_API",
            "Nutrient.DWS_MCP_Server",
            "NanoVMs.Delete_Deployment",
            "Azure.azmcp_search_index_create",
            "GitHub.CreateRepository"
        ],
        "query": "Create a new MCP deployment using the following configuration: 2 CPU cores, 4GB RAM, Ubuntu 22.04 image, and attach a 20GB persistent volume.",
        "response_time": 328.4106254577637,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.GetFileContents"
        ],
        "matching_tools": [
            "GitHub.GetFileContents"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetCommit",
            "GitHub.MergePullRequest",
            "GitHub.GetTag",
            "GitHub.GetWorkflowRunLogs",
            "VSCode.vscode_fs_read_file",
            "GitHub.UpdatePullRequestBranch",
            "GitHub.GetMe",
            "GitHub.GetPullRequestFiles",
            "OpsLevel.docs/readme"
        ],
        "returned_tools": [
            "GitHub.GetFileContents",
            "GitHub.GetCommit",
            "GitHub.MergePullRequest",
            "GitHub.GetTag",
            "GitHub.GetWorkflowRunLogs",
            "VSCode.vscode_fs_read_file",
            "GitHub.UpdatePullRequestBranch",
            "GitHub.GetMe",
            "GitHub.GetPullRequestFiles",
            "OpsLevel.docs/readme"
        ],
        "query": "Get the contents of the README.md file from the main branch of the octocat/Hello-World repository.",
        "response_time": 301.2816905975342,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.MergePullRequest"
        ],
        "matching_tools": [
            "GitHub.MergePullRequest"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.UpdatePullRequestBranch",
            "GitHub.ListPullRequests",
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.CreatePullRequest",
            "GitHub.GetPullRequest",
            "GitHub.GetPullRequestReviews",
            "GitHub.GetPullRequestStatus",
            "GitHub.GetPullRequestFiles",
            "GitHub.UpdatePullRequest"
        ],
        "returned_tools": [
            "GitHub.MergePullRequest",
            "GitHub.UpdatePullRequestBranch",
            "GitHub.ListPullRequests",
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.CreatePullRequest",
            "GitHub.GetPullRequest",
            "GitHub.GetPullRequestReviews",
            "GitHub.GetPullRequestStatus",
            "GitHub.GetPullRequestFiles",
            "GitHub.UpdatePullRequest"
        ],
        "query": "Merge pull request #42 into the main branch of the repository 'octocat/Hello-World'.",
        "response_time": 355.94677925109863,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "klusterai.Profiling"
        ],
        "matching_tools": [
            "klusterai.Profiling"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "klusterai.Grouping",
            "klusterai.Ordering",
            "klusterai.Filters",
            "klusterai.Metrics",
            "klusterai.Joins",
            "klusterai.Limit",
            "Memgraph.Import_Data_Tool",
            "Milvus.Schema_Management",
            "Azure.azmcp_kusto_cluster_list"
        ],
        "returned_tools": [
            "klusterai.Profiling",
            "klusterai.Grouping",
            "klusterai.Ordering",
            "klusterai.Filters",
            "klusterai.Metrics",
            "klusterai.Joins",
            "klusterai.Limit",
            "Memgraph.Import_Data_Tool",
            "Milvus.Schema_Management",
            "Azure.azmcp_kusto_cluster_list"
        ],
        "query": "List all columns in the employee_details table.",
        "response_time": 330.2946090698242,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 2.0
    },
    {
        "expected_tools": [
            "Globalping.http"
        ],
        "matching_tools": [
            "Globalping.http"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Globalping.dns",
            "WaveSpeed.Ping",
            "Globalping.ping",
            "Globalping.tcp",
            "Globalping.mtr",
            "Globalping.trace",
            "Hyperbrowser.web_browser",
            "Nutrient.REST_API",
            "Hunter.Ping"
        ],
        "returned_tools": [
            "Globalping.http",
            "Globalping.dns",
            "WaveSpeed.Ping",
            "Globalping.ping",
            "Globalping.tcp",
            "Globalping.mtr",
            "Globalping.trace",
            "Hyperbrowser.web_browser",
            "Nutrient.REST_API",
            "Hunter.Ping"
        ],
        "query": "Check the HTTP status code, response time, and headers for https://www.wikipedia.org from multiple global locations to assess its uptime and accessibility.",
        "response_time": 310.1613521575928,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.CreatePullRequest"
        ],
        "matching_tools": [
            "GitHub.CreatePullRequest"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.MergePullRequest",
            "GitHub.RequestCopilotReview",
            "GitHub.UpdatePullRequestBranch",
            "GitHub.ListPullRequests",
            "GitHub.GetPullRequestFiles",
            "GitHub.CreatePendingPullRequestReview",
            "GitHub.CreateBranch",
            "GitHub.AddPullRequestReviewCommentToPendingReview"
        ],
        "returned_tools": [
            "GitHub.CreatePullRequest",
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.MergePullRequest",
            "GitHub.RequestCopilotReview",
            "GitHub.UpdatePullRequestBranch",
            "GitHub.ListPullRequests",
            "GitHub.GetPullRequestFiles",
            "GitHub.CreatePendingPullRequestReview",
            "GitHub.CreateBranch",
            "GitHub.AddPullRequestReviewCommentToPendingReview"
        ],
        "query": "Create a new pull request from the 'feature/login' branch to the 'main' branch in the repository 'my-org/my-app' with the title 'Add user login functionality' and description 'Implements user authentication and login page.'",
        "response_time": 329.5459747314453,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.29
    },
    {
        "expected_tools": [
            "OpenSearch.update_mapping"
        ],
        "matching_tools": [
            "OpenSearch.update_mapping"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpenSearch.index_document",
            "OpenSearch.get_mapping",
            "OpenSearch.bulk",
            "OpenSearch.search",
            "OpenSearch.get_aliases",
            "OpenSearch.get_cluster_state",
            "Milvus.Schema_Management",
            "Azure.azmcp_search_index_create",
            "Zapier.Data_Formatter"
        ],
        "returned_tools": [
            "OpenSearch.update_mapping",
            "OpenSearch.index_document",
            "OpenSearch.get_mapping",
            "OpenSearch.bulk",
            "OpenSearch.search",
            "OpenSearch.get_aliases",
            "OpenSearch.get_cluster_state",
            "Milvus.Schema_Management",
            "Azure.azmcp_search_index_create",
            "Zapier.Data_Formatter"
        ],
        "query": "Update the mapping of the 'products' index to add a new field called 'release_date' of type 'date'.",
        "response_time": 324.6464729309082,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_extension_uninstall"
        ],
        "matching_tools": [
            "VSCode.vscode_extension_uninstall"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_terminal_close",
            "VSCode.vscode_debug_stop",
            "VSCode.vscode_fs_delete_file",
            "VSCode.vscode_extension_list",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_terminal_list",
            "VSCode.vscode_extension_install",
            "VSCode.vscode_workspace_close_folder",
            "Logfire.list_python_packages"
        ],
        "returned_tools": [
            "VSCode.vscode_extension_uninstall",
            "VSCode.vscode_terminal_close",
            "VSCode.vscode_debug_stop",
            "VSCode.vscode_fs_delete_file",
            "VSCode.vscode_extension_list",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_terminal_list",
            "VSCode.vscode_extension_install",
            "VSCode.vscode_workspace_close_folder",
            "Logfire.list_python_packages"
        ],
        "query": "Uninstall the Python extension from VSCode.",
        "response_time": 285.7341766357422,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.ForkRepository"
        ],
        "matching_tools": [
            "GitHub.ForkRepository"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.SearchCode",
            "GitHub.MergePullRequest",
            "GitHub.PushFiles",
            "GitHub.CreateBranch",
            "GitHub.ListTags",
            "GitHub.CreateOrUpdateFile",
            "GitHub.ListBranches",
            "GitHub.SearchOrgs",
            "VSCode.vscode_git_push"
        ],
        "returned_tools": [
            "GitHub.ForkRepository",
            "GitHub.SearchCode",
            "GitHub.MergePullRequest",
            "GitHub.PushFiles",
            "GitHub.CreateBranch",
            "GitHub.ListTags",
            "GitHub.CreateOrUpdateFile",
            "GitHub.ListBranches",
            "GitHub.SearchOrgs",
            "VSCode.vscode_git_push"
        ],
        "query": "Fork the repository 'octocat/Hello-World' to my GitHub account.",
        "response_time": 302.22344398498535,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_monitor_query_logs"
        ],
        "matching_tools": [
            "Azure.azmcp_monitor_query_logs"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Netdata.log_tail",
            "Azure.azmcp_monitor_query_metrics",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_appconfig_kv_show",
            "GitHub.GetWorkflowRunLogs",
            "Azure.azmcp_search_index_query",
            "Azure.azmcp_keyvault_key_get",
            "Azure.azmcp_search_service_list",
            "Azure.azmcp_kusto_cluster_list"
        ],
        "returned_tools": [
            "Azure.azmcp_monitor_query_logs",
            "Netdata.log_tail",
            "Azure.azmcp_monitor_query_metrics",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_appconfig_kv_show",
            "GitHub.GetWorkflowRunLogs",
            "Azure.azmcp_search_index_query",
            "Azure.azmcp_keyvault_key_get",
            "Azure.azmcp_search_service_list",
            "Azure.azmcp_kusto_cluster_list"
        ],
        "query": "Retrieve all error logs from the last 24 hours for the 'AppService' resource group in Azure Monitor using KQL.",
        "response_time": 508.5794925689697,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "PlayCanvas.entity"
        ],
        "matching_tools": [
            "PlayCanvas.entity"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "PlayCanvas.asset",
            "PlayCanvas.branch",
            "PlayCanvas.snapshot",
            "PlayCanvas.project",
            "Hyperbrowser.code_editor",
            "PlayCanvas.user",
            "PlayCanvas.session",
            "Shortcut.Update",
            "Upstash.Keys"
        ],
        "returned_tools": [
            "PlayCanvas.entity",
            "PlayCanvas.asset",
            "PlayCanvas.branch",
            "PlayCanvas.snapshot",
            "PlayCanvas.project",
            "Hyperbrowser.code_editor",
            "PlayCanvas.user",
            "PlayCanvas.session",
            "Shortcut.Update",
            "Upstash.Keys"
        ],
        "query": "Rename the entity named 'PlayerCharacter' to 'HeroAvatar' in my project.",
        "response_time": 291.8870449066162,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.57
    },
    {
        "expected_tools": [
            "YepCode.smtp"
        ],
        "matching_tools": [
            "YepCode.smtp"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "YepCode.rabbitmq",
            "Liveblocks.send_user_message",
            "Tianji.notification",
            "YepCode.webhook",
            "LINE.Confirm",
            "Sophtron.VerifyAccount",
            "Upstash.PubSub",
            "LaunchDarkly.account",
            "Azure.azmcp_servicebus_message_send"
        ],
        "returned_tools": [
            "YepCode.smtp",
            "YepCode.rabbitmq",
            "Liveblocks.send_user_message",
            "Tianji.notification",
            "YepCode.webhook",
            "LINE.Confirm",
            "Sophtron.VerifyAccount",
            "Upstash.PubSub",
            "LaunchDarkly.account",
            "Azure.azmcp_servicebus_message_send"
        ],
        "query": "Send an email notification to user@example.com with the subject 'Account Activation' and the message 'Your account has been successfully activated.' using the configured SMTP server.",
        "response_time": 300.9974956512451,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Yunxin.Room_Management"
        ],
        "matching_tools": [
            "Yunxin.Room_Management"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Yunxin.Media_Control",
            "Yunxin.Permission_-_Role_Management",
            "Yunxin.Notification_-_Callback",
            "Yunxin.User_Management",
            "Yunxin.Recording_-_Playback",
            "Notion.create_page",
            "Yunxin.Statistics_-_Monitoring",
            "GitHub.CreateRepository",
            "VSCode.vscode_terminal_create"
        ],
        "returned_tools": [
            "Yunxin.Room_Management",
            "Yunxin.Media_Control",
            "Yunxin.Permission_-_Role_Management",
            "Yunxin.Notification_-_Callback",
            "Yunxin.User_Management",
            "Yunxin.Recording_-_Playback",
            "Notion.create_page",
            "Yunxin.Statistics_-_Monitoring",
            "GitHub.CreateRepository",
            "VSCode.vscode_terminal_create"
        ],
        "query": "Create a new virtual meeting room for a team conference scheduled at 3 PM tomorrow.",
        "response_time": 322.246789932251,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_keyvault_key_get"
        ],
        "matching_tools": [
            "Azure.azmcp_keyvault_key_get"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_search_index_query",
            "Azure.azmcp_appconfig_kv_show",
            "Azure.azmcp_keyvault_key_list",
            "Netdata.data_query",
            "GitHub.GetNotificationDetails",
            "GitHub.GetFileContents",
            "Cloudinary.mcp_metadata",
            "Azure.azmcp_keyvault_key_create",
            "Netdata.log_tail"
        ],
        "returned_tools": [
            "Azure.azmcp_keyvault_key_get",
            "Azure.azmcp_search_index_query",
            "Azure.azmcp_appconfig_kv_show",
            "Azure.azmcp_keyvault_key_list",
            "Netdata.data_query",
            "GitHub.GetNotificationDetails",
            "GitHub.GetFileContents",
            "Cloudinary.mcp_metadata",
            "Azure.azmcp_keyvault_key_create",
            "Netdata.log_tail"
        ],
        "query": "Retrieve the metadata for the key named 'encryptionKey1' from the Azure Key Vault named 'ProductionVault'.",
        "response_time": 294.9345111846924,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_keyvault_key_create"
        ],
        "matching_tools": [
            "Azure.azmcp_keyvault_key_create"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_keyvault_key_list",
            "Azure.azmcp_appconfig_kv_set",
            "Azure.azmcp_keyvault_key_get",
            "Azure.azmcp_appconfig_kv_show",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_search_index_create",
            "Shortcut.Create",
            "Azure.azmcp_cli_command_run",
            "Azure.azmcp_search_index_list"
        ],
        "returned_tools": [
            "Azure.azmcp_keyvault_key_create",
            "Azure.azmcp_keyvault_key_list",
            "Azure.azmcp_appconfig_kv_set",
            "Azure.azmcp_keyvault_key_get",
            "Azure.azmcp_appconfig_kv_show",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_search_index_create",
            "Shortcut.Create",
            "Azure.azmcp_cli_command_run",
            "Azure.azmcp_search_index_list"
        ],
        "query": "Create a new RSA cryptographic key named 'myEncryptionKey' in the Azure Key Vault called 'FinanceVault' with a key size of 2048 bits.",
        "response_time": 362.7181053161621,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Sophtron.InitiateTransfer"
        ],
        "matching_tools": [
            "Sophtron.InitiateTransfer"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Sophtron.GetTransactions",
            "Sophtron.GetAccounts",
            "Sophtron.GetStatements",
            "Sophtron.VerifyAccount",
            "Sophtron.GetHoldings",
            "Sophtron.GetCreditScore",
            "GitHub.CreateBranch",
            "LaunchDarkly.account",
            "Zapier.Code_by_Zapier"
        ],
        "returned_tools": [
            "Sophtron.InitiateTransfer",
            "Sophtron.GetTransactions",
            "Sophtron.GetAccounts",
            "Sophtron.GetStatements",
            "Sophtron.VerifyAccount",
            "Sophtron.GetHoldings",
            "Sophtron.GetCreditScore",
            "GitHub.CreateBranch",
            "LaunchDarkly.account",
            "Zapier.Code_by_Zapier"
        ],
        "query": "Initiate a transfer of $500 from my checking account at Bank A to my savings account at Bank B.",
        "response_time": 311.0027313232422,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "CodeLogic.Dependency_Resolver"
        ],
        "matching_tools": [
            "CodeLogic.Dependency_Resolver"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "CodeLogic.Scanner",
            "CodeLogic.Graph_Generator",
            "CodeLogic.Application_Modeler",
            "CodeLogic.Dataflow_Analyzer",
            "CodeLogic.Reporting_Engine",
            "Logfire.list_python_packages",
            "JFrog.secrets_scan",
            "Yunxin.User_Management",
            "Cloudinary.mcp_authentication"
        ],
        "returned_tools": [
            "CodeLogic.Dependency_Resolver",
            "CodeLogic.Scanner",
            "CodeLogic.Graph_Generator",
            "CodeLogic.Application_Modeler",
            "CodeLogic.Dataflow_Analyzer",
            "CodeLogic.Reporting_Engine",
            "Logfire.list_python_packages",
            "JFrog.secrets_scan",
            "Yunxin.User_Management",
            "Cloudinary.mcp_authentication"
        ],
        "query": "Show the full dependency tree for the 'UserAuthentication' module in the application.",
        "response_time": 309.05699729919434,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_workspace_get_active_file"
        ],
        "matching_tools": [
            "VSCode.vscode_workspace_get_active_file"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_workspace_list_folders",
            "VSCode.vscode_editor_format_document",
            "VSCode.vscode_editor_get_selection",
            "VSCode.vscode_fs_write_file",
            "VSCode.vscode_workspace_open_folder",
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_editor_insert_text",
            "Hyperbrowser.code_editor"
        ],
        "returned_tools": [
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_workspace_list_folders",
            "VSCode.vscode_editor_format_document",
            "VSCode.vscode_editor_get_selection",
            "VSCode.vscode_fs_write_file",
            "VSCode.vscode_workspace_open_folder",
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_editor_insert_text",
            "Hyperbrowser.code_editor"
        ],
        "query": "What is the currently active file open in the VSCode editor?",
        "response_time": 1385.7171535491943,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 10.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_fs_list_directory"
        ],
        "matching_tools": [
            "VSCode.vscode_fs_list_directory"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_workspace_list_folders",
            "VSCode.vscode_git_branch_list",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_workspace_open_folder",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_terminal_list",
            "VSCode.vscode_task_list",
            "VSCode.vscode_git_status",
            "VSCode.vscode_settings_get"
        ],
        "returned_tools": [
            "VSCode.vscode_workspace_list_folders",
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_git_branch_list",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_workspace_open_folder",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_terminal_list",
            "VSCode.vscode_task_list",
            "VSCode.vscode_git_status",
            "VSCode.vscode_settings_get"
        ],
        "query": "List all files and folders in the 'src' directory of my project.",
        "response_time": 299.6549606323242,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "TextIn.table_recognition"
        ],
        "matching_tools": [
            "TextIn.table_recognition"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "TextIn.ocr",
            "TextIn.invoice_ocr",
            "TextIn.printer_paper_recognition",
            "TextIn.id_ocr",
            "TextIn.formula_recognition",
            "Octagon.extract",
            "Rember.extract",
            "CodeLogic.Application_Modeler",
            "CodeLogic.Scanner"
        ],
        "returned_tools": [
            "TextIn.table_recognition",
            "TextIn.ocr",
            "TextIn.invoice_ocr",
            "TextIn.printer_paper_recognition",
            "TextIn.id_ocr",
            "TextIn.formula_recognition",
            "Octagon.extract",
            "Rember.extract",
            "CodeLogic.Application_Modeler",
            "CodeLogic.Scanner"
        ],
        "query": "Extract all tables from a scanned PDF of a financial report and convert them into an Excel spreadsheet.",
        "response_time": 305.7971000671387,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_editor_format_document"
        ],
        "matching_tools": [
            "VSCode.vscode_editor_format_document"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_workspace_get_active_file",
            "Logfire.search_python_docs",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_fs_write_file",
            "VSCode.vscode_workspace_open_folder",
            "Hyperbrowser.python",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_workspace_list_folders",
            "CodeLogic.Dependency_Resolver"
        ],
        "returned_tools": [
            "VSCode.vscode_editor_format_document",
            "VSCode.vscode_workspace_get_active_file",
            "Logfire.search_python_docs",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_fs_write_file",
            "VSCode.vscode_workspace_open_folder",
            "Hyperbrowser.python",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_workspace_list_folders",
            "CodeLogic.Dependency_Resolver"
        ],
        "query": "Format the currently open Python file according to PEP8 standards.",
        "response_time": 345.3249931335449,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Zapier.Data_Formatter"
        ],
        "matching_tools": [
            "Zapier.Data_Formatter"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Rember.transform",
            "Zapier.Code_by_Zapier",
            "Zapier.Webhooks",
            "Sophtron.GetStatements",
            "Hyperbrowser.web_browser",
            "Milvus.Data_Import_Export",
            "VSCode.vscode_fs_read_file",
            "Zapier.Schedule",
            "Hyperbolic.web_search"
        ],
        "returned_tools": [
            "Zapier.Data_Formatter",
            "Rember.transform",
            "Zapier.Code_by_Zapier",
            "Zapier.Webhooks",
            "Sophtron.GetStatements",
            "Hyperbrowser.web_browser",
            "Milvus.Data_Import_Export",
            "VSCode.vscode_fs_read_file",
            "Zapier.Schedule",
            "Hyperbolic.web_search"
        ],
        "query": "How can I convert the date '06/24/2024' from MM/DD/YYYY format to DD-MM-YYYY format?",
        "response_time": 308.53748321533203,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Tako.PSTH_Peri_Stimulus_Time_Histogram"
        ],
        "matching_tools": [
            "Tako.PSTH_Peri_Stimulus_Time_Histogram"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Tako.Raster",
            "Tako.Tuning",
            "Tako.Behavior",
            "Tako.Cross_correlation",
            "GitHub.GetFileContents",
            "Tako.Trajectory",
            "Hyperbolic.python",
            "OpenSearch.get_cluster_state",
            "CodeLogic.Scanner"
        ],
        "returned_tools": [
            "Tako.PSTH_Peri_Stimulus_Time_Histogram",
            "Tako.Raster",
            "Tako.Tuning",
            "Tako.Behavior",
            "Tako.Cross_correlation",
            "GitHub.GetFileContents",
            "Tako.Trajectory",
            "Hyperbolic.python",
            "OpenSearch.get_cluster_state",
            "CodeLogic.Scanner"
        ],
        "query": "Plot the Peri-Stimulus Time Histogram (PSTH) of neuronal spikes aligned to the onset of the auditory stimulus.",
        "response_time": 426.6178607940674,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.14
    },
    {
        "expected_tools": [
            "DevRev.translation"
        ],
        "matching_tools": [
            "DevRev.translation"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "AllVoiceLab.Voice_Translation",
            "OctoEverywhere.Knowledge",
            "DevRev.summarization",
            "UnifAI.SpeechRecognition",
            "DevRev.sentiment_analysis",
            "DevRev.entity_extraction",
            "DevRev.ticket_categorization",
            "AllVoiceLab.Speech_to_Text_STT",
            "DevRev.priority_detection"
        ],
        "returned_tools": [
            "DevRev.translation",
            "AllVoiceLab.Voice_Translation",
            "OctoEverywhere.Knowledge",
            "DevRev.summarization",
            "UnifAI.SpeechRecognition",
            "DevRev.sentiment_analysis",
            "DevRev.entity_extraction",
            "DevRev.ticket_categorization",
            "AllVoiceLab.Speech_to_Text_STT",
            "DevRev.priority_detection"
        ],
        "query": "Translate the following English text into Spanish: 'Welcome to our customer support portal. How can we assist you today?'",
        "response_time": 379.11272048950195,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 3.43
    },
    {
        "expected_tools": [
            "klusterai.Grouping"
        ],
        "matching_tools": [
            "klusterai.Grouping"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "klusterai.Metrics",
            "klusterai.Filters",
            "klusterai.Profiling",
            "klusterai.Ordering",
            "klusterai.Joins",
            "Klaviyo.Catalogs",
            "klusterai.Limit",
            "Memgraph.Graph_Schema_Viewer",
            "GitHub.GetToolsetsTools"
        ],
        "returned_tools": [
            "klusterai.Grouping",
            "klusterai.Metrics",
            "klusterai.Filters",
            "klusterai.Profiling",
            "klusterai.Ordering",
            "klusterai.Joins",
            "Klaviyo.Catalogs",
            "klusterai.Limit",
            "Memgraph.Graph_Schema_Viewer",
            "GitHub.GetToolsetsTools"
        ],
        "query": "Show the total revenue grouped by product category.",
        "response_time": 303.9441108703613,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "SonarQube.Show_Quality_Gate_Details"
        ],
        "matching_tools": [
            "SonarQube.Show_Quality_Gate_Details"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "SonarQube.List_Quality_Gates",
            "SonarQube.Check_Quality_Gate",
            "SonarQube.Trigger_Project_Analysis",
            "SonarQube.Show_Issue_Details",
            "SonarQube.Get_Project_Metrics",
            "SonarQube.List_Projects",
            "SonarQube.List_Issues",
            "OpsLevel.code/license",
            "Linear.Schemas"
        ],
        "returned_tools": [
            "SonarQube.Show_Quality_Gate_Details",
            "SonarQube.List_Quality_Gates",
            "SonarQube.Check_Quality_Gate",
            "SonarQube.Trigger_Project_Analysis",
            "SonarQube.Show_Issue_Details",
            "SonarQube.Get_Project_Metrics",
            "SonarQube.List_Projects",
            "SonarQube.List_Issues",
            "OpsLevel.code/license",
            "Linear.Schemas"
        ],
        "query": "Show me the criteria and conditions for the 'Default' quality gate in SonarQube.",
        "response_time": 314.01538848876953,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.57
    },
    {
        "expected_tools": [
            "fetchSERP.Google_Shopping"
        ],
        "matching_tools": [
            "fetchSERP.Google_Shopping"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "fetchSERP.Google_Search",
            "fetchSERP.Google_Images",
            "fetchSERP.Google_Videos",
            "fetchSERP.Google_Maps",
            "fetchSERP.Google_Scholar",
            "fetchSERP.Google_News",
            "HubSpot.CRM_Search",
            "Hyperbolic.web_search",
            "Azure.azmcp_resourcegroup_list"
        ],
        "returned_tools": [
            "fetchSERP.Google_Search",
            "fetchSERP.Google_Shopping",
            "fetchSERP.Google_Images",
            "fetchSERP.Google_Videos",
            "fetchSERP.Google_Maps",
            "fetchSERP.Google_Scholar",
            "fetchSERP.Google_News",
            "HubSpot.CRM_Search",
            "Hyperbolic.web_search",
            "Azure.azmcp_resourcegroup_list"
        ],
        "query": "Help me shop for the best wireless headphones under $100",
        "response_time": 311.7382526397705,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "YepCode.mongodb"
        ],
        "matching_tools": [
            "YepCode.mongodb"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "YepCode.rest",
            "VSCode.vscode_workspace_get_active_file",
            "Upstash.Set",
            "PlayCanvas.user",
            "Liveblocks.admin_get_user_roles",
            "Notion.search_users",
            "Netdata.alarms_list",
            "SonarQube.List_Projects",
            "Hyperbrowser.code_editor"
        ],
        "returned_tools": [
            "YepCode.mongodb",
            "YepCode.rest",
            "VSCode.vscode_workspace_get_active_file",
            "Upstash.Set",
            "PlayCanvas.user",
            "Liveblocks.admin_get_user_roles",
            "Notion.search_users",
            "Netdata.alarms_list",
            "SonarQube.List_Projects",
            "Hyperbrowser.code_editor"
        ],
        "query": "Find all documents in the 'users' collection where the 'status' field is 'active'.",
        "response_time": 326.10464096069336,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "Shortcut.Comment"
        ],
        "matching_tools": [
            "Shortcut.Comment"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Tianji.comment",
            "GitHub.AddIssueComment",
            "Notion.create_comment",
            "Shortcut.Create",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "Shortcut.Update",
            "Linear.Actions",
            "Shortcut.List",
            "Shortcut.Summarize"
        ],
        "returned_tools": [
            "Shortcut.Comment",
            "Tianji.comment",
            "GitHub.AddIssueComment",
            "Notion.create_comment",
            "Shortcut.Create",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "Shortcut.Update",
            "Linear.Actions",
            "Shortcut.List",
            "Shortcut.Summarize"
        ],
        "query": "Add comment to epic 1234: Please update the acceptance criteria.",
        "response_time": 298.4881401062012,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.ListCodeScanningAlerts"
        ],
        "matching_tools": [
            "GitHub.ListCodeScanningAlerts"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetCodeScanningAlert",
            "GitHub.ListSecretScanningAlerts",
            "GitHub.GetSecretScanningAlert",
            "GitHub.ListNotifications",
            "GitHub.MarkAllNotificationsRead",
            "GitHub.SearchCode",
            "GitHub.SearchOrgs",
            "CodeLogic.Scanner",
            "OpsLevel.security/codeql"
        ],
        "returned_tools": [
            "GitHub.ListCodeScanningAlerts",
            "GitHub.GetCodeScanningAlert",
            "GitHub.ListSecretScanningAlerts",
            "GitHub.GetSecretScanningAlert",
            "GitHub.ListNotifications",
            "GitHub.MarkAllNotificationsRead",
            "GitHub.SearchCode",
            "GitHub.SearchOrgs",
            "CodeLogic.Scanner",
            "OpsLevel.security/codeql"
        ],
        "query": "List all code scanning alerts for the repository 'octocat/Hello-World'.",
        "response_time": 315.27233123779297,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "AllVoiceLab.Text_to_Speech_TTS"
        ],
        "matching_tools": [
            "AllVoiceLab.Text_to_Speech_TTS"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "AllVoiceLab.Speech_to_Text_STT",
            "AllVoiceLab.Voice_Translation",
            "AllVoiceLab.Document_Analyzer",
            "UnifAI.SpeechRecognition",
            "TextIn.speech_recognition",
            "AllVoiceLab.QA",
            "AllVoiceLab.Summarizer",
            "OctoEverywhere.Knowledge",
            "VSCode.vscode_fs_read_file"
        ],
        "returned_tools": [
            "AllVoiceLab.Text_to_Speech_TTS",
            "AllVoiceLab.Speech_to_Text_STT",
            "AllVoiceLab.Voice_Translation",
            "AllVoiceLab.Document_Analyzer",
            "UnifAI.SpeechRecognition",
            "TextIn.speech_recognition",
            "AllVoiceLab.QA",
            "AllVoiceLab.Summarizer",
            "OctoEverywhere.Knowledge",
            "VSCode.vscode_fs_read_file"
        ],
        "query": "Convert the following paragraph into spoken audio: 'Welcome to our online course. In this lesson, we will explore the basics of programming.'",
        "response_time": 331.3148021697998,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.57
    },
    {
        "expected_tools": [
            "Hyperbolic.terminal"
        ],
        "matching_tools": [
            "Hyperbolic.terminal"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hyperbolic.book_search",
            "Hyperbolic.python",
            "VSCode.vscode_fs_list_directory",
            "Hyperbolic.site_search",
            "Hyperbrowser.file_manager",
            "Hyperbolic.web_search",
            "VSCode.vscode_workspace_list_folders",
            "VSCode.vscode_git_status",
            "GitHub.ListBranches"
        ],
        "returned_tools": [
            "Hyperbolic.terminal",
            "Hyperbolic.book_search",
            "Hyperbolic.python",
            "VSCode.vscode_fs_list_directory",
            "Hyperbolic.site_search",
            "Hyperbrowser.file_manager",
            "Hyperbolic.web_search",
            "VSCode.vscode_workspace_list_folders",
            "VSCode.vscode_git_status",
            "GitHub.ListBranches"
        ],
        "query": "List all files and directories in the current working directory.",
        "response_time": 349.76696968078613,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.86
    },
    {
        "expected_tools": [
            "Zapier.Delay"
        ],
        "matching_tools": [
            "Zapier.Delay"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Zapier.Schedule",
            "Tianji.notification",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "LINE.Confirm",
            "Zapier.Webhooks",
            "Linear.Webhooks",
            "Zapier.Email_Parser",
            "Liveblocks.send_user_message",
            "Zapier.Code_by_Zapier"
        ],
        "returned_tools": [
            "Zapier.Delay",
            "Zapier.Schedule",
            "Tianji.notification",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "LINE.Confirm",
            "Zapier.Webhooks",
            "Linear.Webhooks",
            "Zapier.Email_Parser",
            "Liveblocks.send_user_message",
            "Zapier.Code_by_Zapier"
        ],
        "query": "How can I set up a workflow to wait 30 minutes before sending a reminder notification to a user after they submit a form?",
        "response_time": 308.40587615966797,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "YepCode.webhook"
        ],
        "matching_tools": [
            "YepCode.webhook"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "YepCode.rest",
            "YepCode.rabbitmq",
            "Nutrient.REST_API",
            "Zapier.Webhooks",
            "YepCode.smtp",
            "Linear.Webhooks",
            "Globalping.http",
            "GitHub.CreateBranch",
            "Upstash.PubSub"
        ],
        "returned_tools": [
            "YepCode.webhook",
            "YepCode.rest",
            "YepCode.rabbitmq",
            "Nutrient.REST_API",
            "Zapier.Webhooks",
            "YepCode.smtp",
            "Linear.Webhooks",
            "Globalping.http",
            "GitHub.CreateBranch",
            "Upstash.PubSub"
        ],
        "query": "Create an HTTP endpoint to receive order status updates from an external e-commerce platform via POST requests.",
        "response_time": 322.65758514404297,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Linear.Audit_Logs"
        ],
        "matching_tools": [
            "Linear.Audit_Logs"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Linear.Permissions",
            "Linear.Actions",
            "Auth0.Policies",
            "Yunxin.Permission_-_Role_Management",
            "Drata.Access_Reviews",
            "Linear.API",
            "Liveblocks.admin_set_user_roles",
            "Hiveflow.User_-_Access_Management",
            "LaunchDarkly.user"
        ],
        "returned_tools": [
            "Linear.Permissions",
            "Linear.Audit_Logs",
            "Linear.Actions",
            "Auth0.Policies",
            "Yunxin.Permission_-_Role_Management",
            "Drata.Access_Reviews",
            "Linear.API",
            "Liveblocks.admin_set_user_roles",
            "Hiveflow.User_-_Access_Management",
            "LaunchDarkly.user"
        ],
        "query": "Show all changes made to user permissions in the last 30 days.",
        "response_time": 296.97108268737793,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Tako.Cross_correlation"
        ],
        "matching_tools": [
            "Tako.Cross_correlation"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Tako.PSTH_Peri_Stimulus_Time_Histogram",
            "Tako.Behavior",
            "Tako.Raster",
            "Tako.Tuning",
            "Tako.Trajectory",
            "CodeLogic.Application_Modeler",
            "Memgraph.Graph_Schema_Viewer",
            "CodeLogic.Scanner",
            "CodeLogic.Graph_Generator"
        ],
        "returned_tools": [
            "Tako.Cross_correlation",
            "Tako.PSTH_Peri_Stimulus_Time_Histogram",
            "Tako.Behavior",
            "Tako.Raster",
            "Tako.Tuning",
            "Tako.Trajectory",
            "CodeLogic.Application_Modeler",
            "Memgraph.Graph_Schema_Viewer",
            "CodeLogic.Scanner",
            "CodeLogic.Graph_Generator"
        ],
        "query": "Calculate and visualize the cross-correlation between neural spike trains recorded from two different brain regions during a behavioral task.",
        "response_time": 325.366735458374,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Twilio.config_management"
        ],
        "matching_tools": [
            "Twilio.config_management"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "LaunchDarkly.environment",
            "Twilio.toolbelt",
            "Twilio.project_templates",
            "Twilio.reporting",
            "Twilio.plugin_management",
            "ZIZAI Recruitment.settings",
            "Twilio.access_management",
            "Hyperbrowser.text_comparison",
            "Netdata.netdata_config"
        ],
        "returned_tools": [
            "Twilio.config_management",
            "LaunchDarkly.environment",
            "Twilio.toolbelt",
            "Twilio.project_templates",
            "Twilio.reporting",
            "Twilio.plugin_management",
            "ZIZAI Recruitment.settings",
            "Twilio.access_management",
            "Hyperbrowser.text_comparison",
            "Netdata.netdata_config"
        ],
        "query": "Show the differences between the current production and staging environment configuration files for the messaging service.",
        "response_time": 367.89727210998535,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "Hyperbrowser.code_editor"
        ],
        "matching_tools": [
            "Hyperbrowser.code_editor"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hyperbrowser.python",
            "Hyperbolic.python",
            "Hyperbrowser.web_browser",
            "Logfire.search_python_docs",
            "Hyperbrowser.file_manager",
            "GitHub.CreateOrUpdateFile",
            "Hyperbrowser.text_comparison",
            "VSCode.vscode_fs_read_file",
            "GitHub.GetFileContents"
        ],
        "returned_tools": [
            "Hyperbrowser.python",
            "Hyperbrowser.code_editor",
            "Hyperbolic.python",
            "Hyperbrowser.web_browser",
            "Logfire.search_python_docs",
            "Hyperbrowser.file_manager",
            "GitHub.CreateOrUpdateFile",
            "Hyperbrowser.text_comparison",
            "VSCode.vscode_fs_read_file",
            "GitHub.GetFileContents"
        ],
        "query": "Create a new Python script named 'data_analysis.py' in the project directory and add a function that reads a CSV file and prints the first five rows.",
        "response_time": 304.9776554107666,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "AllVoiceLab.Speech_to_Text_STT"
        ],
        "matching_tools": [
            "AllVoiceLab.Speech_to_Text_STT"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "AllVoiceLab.Voice_Translation",
            "UnifAI.SpeechRecognition",
            "TextIn.speech_recognition",
            "AllVoiceLab.Text_to_Speech_TTS",
            "AllVoiceLab.QA",
            "AllVoiceLab.Document_Analyzer",
            "DevRev.translation",
            "AllVoiceLab.Summarizer",
            "TextIn.ocr"
        ],
        "returned_tools": [
            "AllVoiceLab.Speech_to_Text_STT",
            "AllVoiceLab.Voice_Translation",
            "UnifAI.SpeechRecognition",
            "TextIn.speech_recognition",
            "AllVoiceLab.Text_to_Speech_TTS",
            "AllVoiceLab.QA",
            "AllVoiceLab.Document_Analyzer",
            "DevRev.translation",
            "AllVoiceLab.Summarizer",
            "TextIn.ocr"
        ],
        "query": "Transcribe this audio file into written text.",
        "response_time": 309.1244697570801,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_terminal_list"
        ],
        "matching_tools": [
            "VSCode.vscode_terminal_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_workspace_list_folders",
            "VSCode.vscode_terminal_run_command",
            "VSCode.vscode_terminal_close",
            "VSCode.vscode_git_branch_list",
            "VSCode.vscode_terminal_create",
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_extension_list"
        ],
        "returned_tools": [
            "VSCode.vscode_terminal_list",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_workspace_list_folders",
            "VSCode.vscode_terminal_run_command",
            "VSCode.vscode_terminal_close",
            "VSCode.vscode_git_branch_list",
            "VSCode.vscode_terminal_create",
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_extension_list"
        ],
        "query": "List all currently active terminals in VSCode.",
        "response_time": 411.482572555542,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.29
    },
    {
        "expected_tools": [
            "Notion.create_comment"
        ],
        "matching_tools": [
            "Notion.create_comment"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Tianji.comment",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.AddIssueComment",
            "Shortcut.Comment",
            "Notion.create_page",
            "Tianji.search",
            "Notion.search_databases",
            "Rember.choices",
            "VSCode.vscode_editor_insert_text"
        ],
        "returned_tools": [
            "Notion.create_comment",
            "Tianji.comment",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.AddIssueComment",
            "Shortcut.Comment",
            "Notion.create_page",
            "Tianji.search",
            "Notion.search_databases",
            "Rember.choices",
            "VSCode.vscode_editor_insert_text"
        ],
        "query": "Add a comment to the meeting notes page stating 'Please review the action items before our next meeting.'",
        "response_time": 291.99981689453125,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.86
    },
    {
        "expected_tools": [
            "Azure.azmcp_servicebus_message_send"
        ],
        "matching_tools": [
            "Azure.azmcp_servicebus_message_send"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_servicebus_message_receive",
            "Azure.azmcp_servicebus_namespace_list",
            "Azure.azmcp_servicebus_queue_list",
            "YepCode.rabbitmq",
            "Liveblocks.send_user_message",
            "LINE.Confirm",
            "Azure.azmcp_appconfig_kv_set",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_search_index_query"
        ],
        "returned_tools": [
            "Azure.azmcp_servicebus_message_send",
            "Azure.azmcp_servicebus_message_receive",
            "Azure.azmcp_servicebus_namespace_list",
            "Azure.azmcp_servicebus_queue_list",
            "YepCode.rabbitmq",
            "Liveblocks.send_user_message",
            "LINE.Confirm",
            "Azure.azmcp_appconfig_kv_set",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_search_index_query"
        ],
        "query": "Send a message to the 'orders-queue' in Azure Service Bus with the content: 'New order received: OrderID 12345, Customer John Doe, Total $250.00'.",
        "response_time": 344.8672294616699,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "Azure.azmcp_resourcegroup_list"
        ],
        "matching_tools": [
            "Azure.azmcp_resourcegroup_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_subscription_list",
            "Azure.azmcp_kusto_cluster_list",
            "Azure.azmcp_postgres_server_list",
            "Azure.azmcp_storage_container_list",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_cosmos_container_list",
            "Azure.azmcp_cosmos_database_list",
            "Azure.azmcp_search_index_query",
            "Azure.azmcp_kusto_database_list"
        ],
        "returned_tools": [
            "Azure.azmcp_resourcegroup_list",
            "Azure.azmcp_subscription_list",
            "Azure.azmcp_kusto_cluster_list",
            "Azure.azmcp_postgres_server_list",
            "Azure.azmcp_storage_container_list",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_cosmos_container_list",
            "Azure.azmcp_cosmos_database_list",
            "Azure.azmcp_search_index_query",
            "Azure.azmcp_kusto_database_list"
        ],
        "query": "List all resource groups in the current Azure subscription.",
        "response_time": 309.7846508026123,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.ListWorkflowJobs"
        ],
        "matching_tools": [
            "GitHub.ListWorkflowJobs"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.GetWorkflowRun",
            "GitHub.ListWorkflowRuns",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.ListWorkflowRunArtifacts",
            "GitHub.ListCommits",
            "GitHub.GetJobLogs",
            "GitHub.RunWorkflow",
            "GitHub.SearchOrgs"
        ],
        "returned_tools": [
            "GitHub.ListWorkflowJobs",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.GetWorkflowRun",
            "GitHub.ListWorkflowRuns",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.ListWorkflowRunArtifacts",
            "GitHub.ListCommits",
            "GitHub.GetJobLogs",
            "GitHub.RunWorkflow",
            "GitHub.SearchOrgs"
        ],
        "query": "List all jobs executed during the latest workflow run for the repository 'octocat/Hello-World'.",
        "response_time": 301.0835647583008,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.71
    },
    {
        "expected_tools": [
            "VSCode.vscode_debug_start"
        ],
        "matching_tools": [
            "VSCode.vscode_debug_start"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_task_run",
            "VSCode.vscode_task_list",
            "VSCode.vscode_terminal_run_command",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_editor_get_selection",
            "VSCode.vscode_git_push",
            "VSCode.vscode_workspace_get_active_file",
            "Hyperbrowser.python",
            "VSCode.vscode_git_commit"
        ],
        "returned_tools": [
            "VSCode.vscode_debug_start",
            "VSCode.vscode_task_run",
            "VSCode.vscode_task_list",
            "VSCode.vscode_terminal_run_command",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_editor_get_selection",
            "VSCode.vscode_git_push",
            "VSCode.vscode_workspace_get_active_file",
            "Hyperbrowser.python",
            "VSCode.vscode_git_commit"
        ],
        "query": "Start a debugging session for the current Python project in VSCode.",
        "response_time": 307.1403503417969,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.29
    },
    {
        "expected_tools": [
            "Azure.azmcp_cli_command_run"
        ],
        "matching_tools": [
            "Azure.azmcp_cli_command_run"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_appconfig_kv_list",
            "Hyperbolic.terminal",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_resourcegroup_list",
            "Azure.azmcp_servicebus_queue_list",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_servicebus_namespace_list",
            "Azure.azmcp_postgres_database_list",
            "VSCode.vscode_terminal_list"
        ],
        "returned_tools": [
            "Azure.azmcp_appconfig_kv_list",
            "Hyperbolic.terminal",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_resourcegroup_list",
            "Azure.azmcp_servicebus_queue_list",
            "Azure.azmcp_cli_command_run",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_servicebus_namespace_list",
            "Azure.azmcp_postgres_database_list",
            "VSCode.vscode_terminal_list"
        ],
        "query": "CLI command: az vm list --output table",
        "response_time": 495.36895751953125,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "TextIn.printer_paper_recognition"
        ],
        "matching_tools": [
            "TextIn.printer_paper_recognition"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "TextIn.ocr",
            "TextIn.table_recognition",
            "TextIn.invoice_ocr",
            "TextIn.id_ocr",
            "UnifAI.OCR",
            "TextIn.speech_recognition",
            "TextIn.formula_recognition",
            "Riza.classification",
            "CodeLogic.Application_Modeler"
        ],
        "returned_tools": [
            "TextIn.printer_paper_recognition",
            "TextIn.ocr",
            "TextIn.table_recognition",
            "TextIn.invoice_ocr",
            "TextIn.id_ocr",
            "UnifAI.OCR",
            "TextIn.speech_recognition",
            "TextIn.formula_recognition",
            "Riza.classification",
            "CodeLogic.Application_Modeler"
        ],
        "query": "Detect and normalize the layout of a scanned tax form image to prepare it for OCR processing.",
        "response_time": 319.06962394714355,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 6.0
    },
    {
        "expected_tools": [
            "GitHub.AssignCopilotToIssue"
        ],
        "matching_tools": [
            "GitHub.AssignCopilotToIssue"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetIssue",
            "GitHub.RequestCopilotReview",
            "GitHub.SearchIssues",
            "GitHub.ListTags",
            "VSCode.vscode_copilot_agent_plan",
            "GitHub.CreateIssue",
            "VSCode.vscode_copilot_agent_execute",
            "GitHub.ListBranches",
            "GitHub.GetIssueComments"
        ],
        "returned_tools": [
            "GitHub.AssignCopilotToIssue",
            "GitHub.GetIssue",
            "GitHub.RequestCopilotReview",
            "GitHub.SearchIssues",
            "GitHub.ListTags",
            "VSCode.vscode_copilot_agent_plan",
            "GitHub.CreateIssue",
            "VSCode.vscode_copilot_agent_execute",
            "GitHub.ListBranches",
            "GitHub.GetIssueComments"
        ],
        "query": "Assign Copilot to assist with issue #12345 in the repository 'octocat/Hello-World'.",
        "response_time": 293.534517288208,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "CodeLogic.Graph_Generator"
        ],
        "matching_tools": [
            "CodeLogic.Graph_Generator"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "CodeLogic.Scanner",
            "CodeLogic.Reporting_Engine",
            "CodeLogic.Dependency_Resolver",
            "Memgraph.Graph_Schema_Viewer",
            "CodeLogic.Application_Modeler",
            "Memgraph.Visual_Query_Builder",
            "CodeLogic.Dataflow_Analyzer",
            "Memgraph.Graph_Visualizer",
            "Nutrient.GRPC_API"
        ],
        "returned_tools": [
            "CodeLogic.Graph_Generator",
            "CodeLogic.Scanner",
            "CodeLogic.Reporting_Engine",
            "CodeLogic.Dependency_Resolver",
            "Memgraph.Graph_Schema_Viewer",
            "CodeLogic.Application_Modeler",
            "Memgraph.Visual_Query_Builder",
            "CodeLogic.Dataflow_Analyzer",
            "Memgraph.Graph_Visualizer",
            "Nutrient.GRPC_API"
        ],
        "query": "Generate a dependency graph showing how all modules in the payment processing application interact with each other.",
        "response_time": 355.299711227417,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Cloudinary.mcp_upload"
        ],
        "matching_tools": [
            "Cloudinary.mcp_upload"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Cloudinary.mcp_logging",
            "Cloudinary.mcp_transformations",
            "Cloudinary.mcp_proxy",
            "Yunxin.Media_Control",
            "Cloudinary.mcp_metadata",
            "Yunxin.Recording_-_Playback",
            "Cloudinary.mcp_authentication",
            "LaunchDarkly.project",
            "Hyperbrowser.file_manager"
        ],
        "returned_tools": [
            "Cloudinary.mcp_upload",
            "Cloudinary.mcp_logging",
            "Cloudinary.mcp_transformations",
            "Cloudinary.mcp_proxy",
            "Yunxin.Media_Control",
            "Cloudinary.mcp_metadata",
            "Yunxin.Recording_-_Playback",
            "Cloudinary.mcp_authentication",
            "LaunchDarkly.project",
            "Hyperbrowser.file_manager"
        ],
        "query": "Upload a new promotional video file to Cloudinary's Media Control Plane for use on the company website.",
        "response_time": 399.3501663208008,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "Drata.Evidence_Collection"
        ],
        "matching_tools": [
            "Drata.Evidence_Collection"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Drata.Access_Reviews",
            "Drata.Continuous_Control_Monitoring",
            "Drata.Vendor_Risk_Management",
            "CodeLogic.Reporting_Engine",
            "Drata.Asset_Inventory",
            "Drata.Policy_Management",
            "Linear.Audit_Logs",
            "Cloudinary.mcp_logging",
            "TextIn.invoice_ocr"
        ],
        "returned_tools": [
            "Drata.Evidence_Collection",
            "Drata.Access_Reviews",
            "Drata.Continuous_Control_Monitoring",
            "Drata.Vendor_Risk_Management",
            "CodeLogic.Reporting_Engine",
            "Drata.Asset_Inventory",
            "Drata.Policy_Management",
            "Linear.Audit_Logs",
            "Cloudinary.mcp_logging",
            "TextIn.invoice_ocr"
        ],
        "query": "Collect all audit evidence from integrated systems for the upcoming SOC 2 compliance audit.",
        "response_time": 363.9559745788574,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "Liveblocks.user_kick"
        ],
        "matching_tools": [
            "Liveblocks.user_kick"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Liveblocks.admin_remove_user_roles",
            "Liveblocks.admin_set_user_roles",
            "Liveblocks.admin_get_user_roles",
            "LaunchDarkly.user",
            "Liveblocks.send_user_message",
            "Liveblocks.get_room_info",
            "Liveblocks.list_rooms",
            "Liveblocks.get_user_presence",
            "Yunxin.Room_Management"
        ],
        "returned_tools": [
            "Liveblocks.admin_remove_user_roles",
            "Liveblocks.user_kick",
            "Liveblocks.admin_set_user_roles",
            "Liveblocks.admin_get_user_roles",
            "LaunchDarkly.user",
            "Liveblocks.send_user_message",
            "Liveblocks.get_room_info",
            "Liveblocks.list_rooms",
            "Liveblocks.get_user_presence",
            "Yunxin.Room_Management"
        ],
        "query": "Remove user with ID 12345 from room 'general-chat' due to violation of community guidelines.",
        "response_time": 316.6673183441162,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.RequestCopilotReview"
        ],
        "matching_tools": [
            "GitHub.RequestCopilotReview"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.GetPullRequestReviews",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.SubmitPendingPullRequestReview",
            "GitHub.CreatePendingPullRequestReview",
            "GitHub.GetPullRequest",
            "GitHub.ListPullRequests",
            "GitHub.AssignCopilotToIssue",
            "GitHub.MergePullRequest"
        ],
        "returned_tools": [
            "GitHub.RequestCopilotReview",
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.GetPullRequestReviews",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.SubmitPendingPullRequestReview",
            "GitHub.CreatePendingPullRequestReview",
            "GitHub.GetPullRequest",
            "GitHub.ListPullRequests",
            "GitHub.AssignCopilotToIssue",
            "GitHub.MergePullRequest"
        ],
        "query": "Request a Copilot review for pull request #42 in the repository 'octocat/Hello-World'.",
        "response_time": 346.88520431518555,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "PlayCanvas.snapshot"
        ],
        "matching_tools": [
            "PlayCanvas.snapshot"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "PlayCanvas.branch",
            "PlayCanvas.entity",
            "PlayCanvas.asset",
            "PlayCanvas.project",
            "PlayCanvas.user",
            "PlayCanvas.session",
            "GitHub.ListCommits",
            "SonarQube.List_Projects",
            "GitHub.ListBranches"
        ],
        "returned_tools": [
            "PlayCanvas.snapshot",
            "PlayCanvas.branch",
            "PlayCanvas.entity",
            "PlayCanvas.asset",
            "PlayCanvas.project",
            "PlayCanvas.user",
            "PlayCanvas.session",
            "GitHub.ListCommits",
            "SonarQube.List_Projects",
            "GitHub.ListBranches"
        ],
        "query": "List all recent snapshots for the 'main' branch of project ID 12345.",
        "response_time": 299.3197441101074,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_git_pull"
        ],
        "matching_tools": [
            "VSCode.vscode_git_pull"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_git_status",
            "VSCode.vscode_git_push",
            "VSCode.vscode_workspace_open_folder",
            "VSCode.vscode_git_commit",
            "VSCode.vscode_settings_update",
            "GitHub.PushFiles",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_git_branch_list"
        ],
        "returned_tools": [
            "VSCode.vscode_git_pull",
            "VSCode.vscode_git_status",
            "VSCode.vscode_git_push",
            "VSCode.vscode_workspace_open_folder",
            "VSCode.vscode_git_commit",
            "VSCode.vscode_settings_update",
            "GitHub.PushFiles",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_git_branch_list"
        ],
        "query": "Pull the latest changes from the remote repository into my current local workspace.",
        "response_time": 333.4362506866455,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Octagon.ask_code"
        ],
        "matching_tools": [
            "Octagon.ask_code"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Octagon.ask_calculator",
            "Octagon.summarize",
            "Logfire.search_python_docs",
            "Octagon.classify",
            "Octagon.ask_retrieval",
            "Hyperbolic.python",
            "Hyperbrowser.python",
            "Zapier.Code_by_Zapier",
            "Rember.list"
        ],
        "returned_tools": [
            "Octagon.ask_calculator",
            "Octagon.ask_code",
            "Octagon.summarize",
            "Logfire.search_python_docs",
            "Octagon.classify",
            "Octagon.ask_retrieval",
            "Hyperbolic.python",
            "Hyperbrowser.python",
            "Zapier.Code_by_Zapier",
            "Rember.list"
        ],
        "query": "How can I write a Python function to reverse a linked list?",
        "response_time": 310.9142780303955,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "fetchSERP.Google_Videos"
        ],
        "matching_tools": [
            "fetchSERP.Google_Videos"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "fetchSERP.Google_Search",
            "fetchSERP.Google_Images",
            "fetchSERP.Google_Scholar",
            "fetchSERP.Google_News",
            "fetchSERP.Google_Maps",
            "fetchSERP.Google_Shopping",
            "ThoughtSpot.upgrade",
            "OctoEverywhere.Timelapse",
            "Hyperbolic.site_search"
        ],
        "returned_tools": [
            "fetchSERP.Google_Videos",
            "fetchSERP.Google_Search",
            "fetchSERP.Google_Images",
            "fetchSERP.Google_Scholar",
            "fetchSERP.Google_News",
            "fetchSERP.Google_Maps",
            "fetchSERP.Google_Shopping",
            "ThoughtSpot.upgrade",
            "OctoEverywhere.Timelapse",
            "Hyperbolic.site_search"
        ],
        "query": "latest NASA Mars rover landing video",
        "response_time": 283.86807441711426,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_fs_delete_file"
        ],
        "matching_tools": [
            "VSCode.vscode_fs_delete_file"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_workspace_close_folder",
            "GitHub.DeleteFile",
            "Hyperbrowser.file_manager",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_workspace_list_folders",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_fs_read_file",
            "Azure.azmcp_cosmos_database_container_item_delete",
            "VSCode.vscode_workspace_open_folder"
        ],
        "returned_tools": [
            "VSCode.vscode_fs_delete_file",
            "VSCode.vscode_workspace_close_folder",
            "GitHub.DeleteFile",
            "Hyperbrowser.file_manager",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_workspace_list_folders",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_fs_read_file",
            "Azure.azmcp_cosmos_database_container_item_delete",
            "VSCode.vscode_workspace_open_folder"
        ],
        "query": "Delete the file named 'old_report.txt' from the workspace.",
        "response_time": 286.3936424255371,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_git_diff"
        ],
        "matching_tools": [
            "VSCode.vscode_git_diff"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_git_branch_list",
            "VSCode.vscode_git_log",
            "VSCode.vscode_git_status",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_git_create_branch",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_git_pull",
            "VSCode.vscode_settings_update",
            "VSCode.vscode_extension_list"
        ],
        "returned_tools": [
            "VSCode.vscode_git_diff",
            "VSCode.vscode_git_branch_list",
            "VSCode.vscode_git_log",
            "VSCode.vscode_git_status",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_git_create_branch",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_git_pull",
            "VSCode.vscode_settings_update",
            "VSCode.vscode_extension_list"
        ],
        "query": "Show the differences between the 'main' branch and the 'feature/login' branch.",
        "response_time": 337.13412284851074,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_cosmos_database_container_item_insert"
        ],
        "matching_tools": [
            "Azure.azmcp_cosmos_database_container_item_insert"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "LINE.Profile",
            "Azure.azmcp_cosmos_container_list",
            "Azure.azmcp_cosmos_account_list",
            "Campertunity.userProfile",
            "Azure.azmcp_cosmos_database_container_item_query",
            "Azure.azmcp_cosmos_database_list",
            "Azure.azmcp_kusto_query",
            "Milvus.Schema_Management",
            "PlayCanvas.user"
        ],
        "returned_tools": [
            "Azure.azmcp_cosmos_database_container_item_insert",
            "LINE.Profile",
            "Azure.azmcp_cosmos_container_list",
            "Azure.azmcp_cosmos_account_list",
            "Campertunity.userProfile",
            "Azure.azmcp_cosmos_database_container_item_query",
            "Azure.azmcp_cosmos_database_list",
            "Azure.azmcp_kusto_query",
            "Milvus.Schema_Management",
            "PlayCanvas.user"
        ],
        "query": "Insert a new user profile document with fields 'userId', 'name', and 'email' into the 'Users' container in the Cosmos DB database.",
        "response_time": 326.9667625427246,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_git_create_branch"
        ],
        "matching_tools": [
            "VSCode.vscode_git_create_branch"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.CreateBranch",
            "GitHub.CreateRepository",
            "VSCode.vscode_terminal_create",
            "VSCode.vscode_git_commit",
            "VSCode.vscode_git_branch_list",
            "VSCode.vscode_git_log",
            "VSCode.vscode_git_push",
            "GitHub.CreateOrUpdateFile",
            "PlayCanvas.branch"
        ],
        "returned_tools": [
            "VSCode.vscode_git_create_branch",
            "GitHub.CreateBranch",
            "GitHub.CreateRepository",
            "VSCode.vscode_terminal_create",
            "VSCode.vscode_git_commit",
            "VSCode.vscode_git_branch_list",
            "VSCode.vscode_git_log",
            "VSCode.vscode_git_push",
            "GitHub.CreateOrUpdateFile",
            "PlayCanvas.branch"
        ],
        "query": "Create a new Git branch named 'feature/login-authentication' in the current repository.",
        "response_time": 318.68886947631836,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Notion.create_page"
        ],
        "matching_tools": [
            "Notion.create_page"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Notion.create_database",
            "Notion.search_blocks",
            "Notion.create_comment",
            "Notion.search_databases",
            "LaunchDarkly.project",
            "Notion.get_database",
            "VSCode.vscode_copilot_agent_plan",
            "GitHub.CreateBranch",
            "SonarQube.Trigger_Project_Analysis"
        ],
        "returned_tools": [
            "Notion.create_page",
            "Notion.create_database",
            "Notion.search_blocks",
            "Notion.create_comment",
            "Notion.search_databases",
            "LaunchDarkly.project",
            "Notion.get_database",
            "VSCode.vscode_copilot_agent_plan",
            "GitHub.CreateBranch",
            "SonarQube.Trigger_Project_Analysis"
        ],
        "query": "Create a new Notion page titled 'Project Roadmap Q3 2024' in the 'Product Management' workspace with sections for milestones, deadlines, and responsible team members.",
        "response_time": 372.44296073913574,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "CodeLogic.Dataflow_Analyzer"
        ],
        "matching_tools": [
            "CodeLogic.Dataflow_Analyzer"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "CodeLogic.Application_Modeler",
            "CodeLogic.Scanner",
            "CodeLogic.Reporting_Engine",
            "CodeLogic.Graph_Generator",
            "Netdata.data_query",
            "CodeLogic.Dependency_Resolver",
            "Memgraph.Graph_Schema_Viewer",
            "klusterai.Metrics",
            "klusterai.Profiling"
        ],
        "returned_tools": [
            "CodeLogic.Dataflow_Analyzer",
            "CodeLogic.Application_Modeler",
            "CodeLogic.Scanner",
            "CodeLogic.Reporting_Engine",
            "CodeLogic.Graph_Generator",
            "Netdata.data_query",
            "CodeLogic.Dependency_Resolver",
            "Memgraph.Graph_Schema_Viewer",
            "klusterai.Metrics",
            "klusterai.Profiling"
        ],
        "query": "Identify all the points in the application where user input data is received, transformed, and ultimately written to the database.",
        "response_time": 312.2599124908447,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.57
    },
    {
        "expected_tools": [
            "Hyperbolic.site_search"
        ],
        "matching_tools": [
            "Hyperbolic.site_search"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hyperbolic.book_search",
            "Hyperbolic.web_search",
            "Hyperbolic.wikidata",
            "Hyperbolic.python",
            "Hyperbolic.terminal",
            "Hyperbrowser.web_browser",
            "fetchSERP.Google_News",
            "ThoughtSpot.upgrade",
            "Linear.Actions"
        ],
        "returned_tools": [
            "Hyperbolic.site_search",
            "Hyperbolic.book_search",
            "Hyperbolic.web_search",
            "Hyperbolic.wikidata",
            "Hyperbolic.python",
            "Hyperbolic.terminal",
            "Hyperbrowser.web_browser",
            "fetchSERP.Google_News",
            "ThoughtSpot.upgrade",
            "Linear.Actions"
        ],
        "query": "Find all pages on the registered website that mention 'climate change policy updates'.",
        "response_time": 337.80384063720703,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.EnableToolset"
        ],
        "matching_tools": [
            "GitHub.EnableToolset"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetWorkflowRun",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.RunWorkflow",
            "OpsLevel.actions/github_actions",
            "GitHub.RerunWorkflowRun",
            "GitHub.ListWorkflowRuns",
            "GitHub.ListWorkflowJobs",
            "Linear.Actions",
            "GitHub.GetWorkflowRunLogs"
        ],
        "returned_tools": [
            "GitHub.EnableToolset",
            "GitHub.GetWorkflowRun",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.RunWorkflow",
            "OpsLevel.actions/github_actions",
            "GitHub.RerunWorkflowRun",
            "GitHub.ListWorkflowRuns",
            "GitHub.ListWorkflowJobs",
            "Linear.Actions",
            "GitHub.GetWorkflowRunLogs"
        ],
        "query": "Enable the GitHub Actions toolset for this repository to allow automated CI/CD workflows at runtime.",
        "response_time": 310.4414939880371,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.71
    },
    {
        "expected_tools": [
            "AWS.Validate_State_Machine_Definitions"
        ],
        "matching_tools": [
            "AWS.Validate_State_Machine_Definitions"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "AWS.Convert_AWS_Step_Functions_YAML_to_ASL_JSON",
            "AWS.Convert_AWS_Step_Functions_Amazon_States_Language_(ASL)_to_YAML",
            "AWS.Workflow_Coverage_and_Step_Analysis",
            "AWS.Local_Simulation_of_Step_Functions_Workflows",
            "Memgraph.Import_Data_Tool",
            "JFrog.license_compliance",
            "Rember.transform",
            "AWS.Convert_CDK_StepFunction_Constructs_to_MCP_YAML",
            "Milvus.Schema_Management"
        ],
        "returned_tools": [
            "AWS.Validate_State_Machine_Definitions",
            "AWS.Convert_AWS_Step_Functions_YAML_to_ASL_JSON",
            "AWS.Convert_AWS_Step_Functions_Amazon_States_Language_(ASL)_to_YAML",
            "AWS.Workflow_Coverage_and_Step_Analysis",
            "AWS.Local_Simulation_of_Step_Functions_Workflows",
            "Memgraph.Import_Data_Tool",
            "JFrog.license_compliance",
            "Rember.transform",
            "AWS.Convert_CDK_StepFunction_Constructs_to_MCP_YAML",
            "Milvus.Schema_Management"
        ],
        "query": "Validate the following Step Functions state machine definition in JSON format to ensure it complies with Amazon States Language schema.",
        "response_time": 301.38278007507324,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.GetIssue"
        ],
        "matching_tools": [
            "GitHub.GetIssue"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetCommit",
            "GitHub.SearchIssues",
            "GitHub.GetIssueComments",
            "GitHub.GetNotificationDetails",
            "GitHub.GetTag",
            "GitHub.GetCodeScanningAlert",
            "GitHub.GetFileContents",
            "GitHub.AssignCopilotToIssue",
            "GitHub.ListIssues"
        ],
        "returned_tools": [
            "GitHub.GetIssue",
            "GitHub.GetCommit",
            "GitHub.SearchIssues",
            "GitHub.GetIssueComments",
            "GitHub.GetNotificationDetails",
            "GitHub.GetTag",
            "GitHub.GetCodeScanningAlert",
            "GitHub.GetFileContents",
            "GitHub.AssignCopilotToIssue",
            "GitHub.ListIssues"
        ],
        "query": "Retrieve the details of issue number 42 in the repository 'octocat/Hello-World'.",
        "response_time": 334.4428539276123,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.86
    },
    {
        "expected_tools": [
            "Azure.azmcp_search_index_query"
        ],
        "matching_tools": [
            "Azure.azmcp_search_index_query"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_search_service_list",
            "Azure.azmcp_search_index_list",
            "OpenSearch.search",
            "Azure.azmcp_search_index_create",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_postgres_server_list",
            "Azure.azmcp_kusto_cluster_list",
            "Hiveflow.Search",
            "Azure.azmcp_resourcegroup_list"
        ],
        "returned_tools": [
            "Azure.azmcp_search_service_list",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_search_index_query",
            "OpenSearch.search",
            "Azure.azmcp_search_index_create",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_postgres_server_list",
            "Azure.azmcp_kusto_cluster_list",
            "Hiveflow.Search",
            "Azure.azmcp_resourcegroup_list"
        ],
        "query": "Find all documents in the Azure search index that mention 'machine learning' and were updated in the last 30 days.",
        "response_time": 327.24881172180176,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.GetCodeScanningAlert"
        ],
        "matching_tools": [
            "GitHub.GetCodeScanningAlert"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.ListCodeScanningAlerts",
            "GitHub.GetCommit",
            "GitHub.GetNotificationDetails",
            "GitHub.GetTag",
            "GitHub.GetFileContents",
            "GitHub.GetSecretScanningAlert",
            "GitHub.SearchCode",
            "OpsLevel.security/codeql",
            "OctoEverywhere.GCodeTerminal"
        ],
        "returned_tools": [
            "GitHub.GetCodeScanningAlert",
            "GitHub.ListCodeScanningAlerts",
            "GitHub.GetCommit",
            "GitHub.GetNotificationDetails",
            "GitHub.GetTag",
            "GitHub.GetFileContents",
            "GitHub.GetSecretScanningAlert",
            "GitHub.SearchCode",
            "OpsLevel.security/codeql",
            "OctoEverywhere.GCodeTerminal"
        ],
        "query": "Retrieve the details of code scanning alert #12345 in the repository 'octocat/Hello-World'.",
        "response_time": 2858.2820892333984,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.29
    },
    {
        "expected_tools": [
            "Memgraph.Visual_Query_Builder"
        ],
        "matching_tools": [
            "Memgraph.Visual_Query_Builder"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Memgraph.Graph_Visualizer",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Memgraph_Cypher_Generator",
            "Memgraph.Query_Runner",
            "Memgraph.Procedures_Catalog",
            "Memgraph.Export_Data_Tool"
        ],
        "returned_tools": [
            "Memgraph.Graph_Visualizer",
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Memgraph_Cypher_Generator",
            "Memgraph.Query_Runner",
            "Memgraph.Procedures_Catalog",
            "Memgraph.Export_Data_Tool"
        ],
        "query": "Show me how the employees in our company are connected through their projects and departments using a visual graph interface.",
        "response_time": 333.06407928466797,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 10.0
    },
    {
        "expected_tools": [
            "OpenSearch.search"
        ],
        "matching_tools": [
            "OpenSearch.search"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpenSearch.index_document",
            "OpenSearch.get_mapping",
            "OpenSearch.get_cluster_state",
            "OpenSearch.bulk",
            "fetchSERP.Google_Search",
            "OpenSearch.update_mapping",
            "OpenSearch.get_aliases",
            "Hyperbolic.book_search",
            "OpenSearch.delete_document"
        ],
        "returned_tools": [
            "OpenSearch.search",
            "OpenSearch.index_document",
            "OpenSearch.get_mapping",
            "OpenSearch.get_cluster_state",
            "OpenSearch.bulk",
            "fetchSERP.Google_Search",
            "OpenSearch.update_mapping",
            "OpenSearch.get_aliases",
            "Hyperbolic.book_search",
            "OpenSearch.delete_document"
        ],
        "query": "Find all documents containing the keyword 'climate change' in the environmental_reports index.",
        "response_time": 287.37807273864746,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "ThoughtSpot.cluster"
        ],
        "matching_tools": [
            "ThoughtSpot.cluster"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpenSearch.get_cluster_state",
            "ThoughtSpot.admin",
            "ThoughtSpot.upgrade",
            "ThoughtSpot.service",
            "ThoughtSpot.license",
            "Nutrient.Health_Checking_Tool",
            "ThoughtSpot.analytics",
            "ThoughtSpot.backup",
            "Nutrient.NodeController"
        ],
        "returned_tools": [
            "ThoughtSpot.cluster",
            "OpenSearch.get_cluster_state",
            "ThoughtSpot.admin",
            "ThoughtSpot.upgrade",
            "ThoughtSpot.service",
            "ThoughtSpot.license",
            "Nutrient.Health_Checking_Tool",
            "ThoughtSpot.analytics",
            "ThoughtSpot.backup",
            "Nutrient.NodeController"
        ],
        "query": "Check the current status of all nodes in the cluster and identify any nodes that are not responding.",
        "response_time": 296.1728572845459,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.71
    },
    {
        "expected_tools": [
            "Cloudinary.mcp_metadata"
        ],
        "matching_tools": [
            "Cloudinary.mcp_metadata"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Cloudinary.mcp_logging",
            "Cloudinary.mcp_proxy",
            "Cloudinary.mcp_authentication",
            "Azure.azmcp_keyvault_key_get",
            "klusterai.Profiling",
            "Cloudinary.mcp_transformations",
            "Cloudinary.mcp_upload",
            "Netdata.data_query",
            "Nutrient.REST_API"
        ],
        "returned_tools": [
            "Cloudinary.mcp_metadata",
            "Cloudinary.mcp_logging",
            "Cloudinary.mcp_proxy",
            "Cloudinary.mcp_authentication",
            "Azure.azmcp_keyvault_key_get",
            "klusterai.Profiling",
            "Cloudinary.mcp_transformations",
            "Cloudinary.mcp_upload",
            "Netdata.data_query",
            "Nutrient.REST_API"
        ],
        "query": "Retrieve all metadata associated with the asset ID '12345' stored in the MCP platform.",
        "response_time": 357.0985794067383,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.43
    },
    {
        "expected_tools": [
            "GitHub.CreatePendingPullRequestReview"
        ],
        "matching_tools": [
            "GitHub.CreatePendingPullRequestReview"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.SubmitPendingPullRequestReview",
            "GitHub.RequestCopilotReview",
            "GitHub.GetPullRequestReviews",
            "GitHub.MergePullRequest",
            "GitHub.CreatePullRequest",
            "GitHub.ListPullRequests",
            "GitHub.GetPullRequestComments"
        ],
        "returned_tools": [
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.SubmitPendingPullRequestReview",
            "GitHub.CreatePendingPullRequestReview",
            "GitHub.RequestCopilotReview",
            "GitHub.GetPullRequestReviews",
            "GitHub.MergePullRequest",
            "GitHub.CreatePullRequest",
            "GitHub.ListPullRequests",
            "GitHub.GetPullRequestComments"
        ],
        "query": "Create a pending review for pull request #42 in the repository octocat/Hello-World with the comment 'Needs more unit tests before merging.'",
        "response_time": 300.9645938873291,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Milvus.Schema_Management"
        ],
        "matching_tools": [
            "Milvus.Schema_Management"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Milvus.Search_and_Query",
            "Milvus.Index_Management",
            "Milvus.Partition_Management",
            "Milvus.Collection_Management",
            "Linear.Schemas",
            "Memgraph.Graph_Schema_Viewer",
            "Milvus.Data_Import_Export",
            "klusterai.Profiling",
            "Memgraph.Import_Data_Tool"
        ],
        "returned_tools": [
            "Milvus.Schema_Management",
            "Milvus.Search_and_Query",
            "Milvus.Index_Management",
            "Milvus.Partition_Management",
            "Milvus.Collection_Management",
            "Linear.Schemas",
            "Memgraph.Graph_Schema_Viewer",
            "Milvus.Data_Import_Export",
            "klusterai.Profiling",
            "Memgraph.Import_Data_Tool"
        ],
        "query": "List all schema fields, including vector and scalar fields, for the collection named 'user_profiles'.",
        "response_time": 300.4908561706543,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_storage_blob_download"
        ],
        "matching_tools": [
            "Azure.azmcp_storage_blob_download"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_storage_blob_upload",
            "Azure.azmcp_storage_blob_list",
            "Azure.azmcp_storage_container_list",
            "GitHub.GetFileContents",
            "Azure.azmcp_postgres_database_list",
            "Azure.azmcp_storage_account_list",
            "Azure.azmcp_cosmos_database_container_item_insert",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_cosmos_container_list"
        ],
        "returned_tools": [
            "Azure.azmcp_storage_blob_download",
            "Azure.azmcp_storage_blob_upload",
            "Azure.azmcp_storage_blob_list",
            "Azure.azmcp_storage_container_list",
            "GitHub.GetFileContents",
            "Azure.azmcp_postgres_database_list",
            "Azure.azmcp_storage_account_list",
            "Azure.azmcp_cosmos_database_container_item_insert",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_cosmos_container_list"
        ],
        "query": "Download the file 'monthly-report.xlsx' from the 'reports' container in Azure Blob Storage.",
        "response_time": 319.3540573120117,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_settings_update"
        ],
        "matching_tools": [
            "VSCode.vscode_settings_update"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_settings_get",
            "VSCode.vscode_editor_replace_selection",
            "VSCode.vscode_editor_format_document",
            "VSCode.vscode_editor_insert_text",
            "VSCode.vscode_extension_list",
            "VSCode.vscode_fs_write_file",
            "VSCode.vscode_extension_install",
            "VSCode.vscode_editor_get_selection",
            "Hyperbrowser.code_editor"
        ],
        "returned_tools": [
            "VSCode.vscode_settings_update",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_editor_replace_selection",
            "VSCode.vscode_editor_format_document",
            "VSCode.vscode_editor_insert_text",
            "VSCode.vscode_extension_list",
            "VSCode.vscode_fs_write_file",
            "VSCode.vscode_extension_install",
            "VSCode.vscode_editor_get_selection",
            "Hyperbrowser.code_editor"
        ],
        "query": "Change the VSCode editor font size to 16.",
        "response_time": 320.8749294281006,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.29
    },
    {
        "expected_tools": [
            "LaunchDarkly.account"
        ],
        "matching_tools": [
            "LaunchDarkly.account"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "LaunchDarkly.user",
            "LaunchDarkly.environment",
            "LaunchDarkly.project",
            "LaunchDarkly.api_key",
            "Sophtron.VerifyAccount",
            "LaunchDarkly.feature_flag",
            "Campertunity.userProfile",
            "GitHub.GetMe",
            "Hiveflow.User_-_Access_Management"
        ],
        "returned_tools": [
            "LaunchDarkly.account",
            "LaunchDarkly.user",
            "LaunchDarkly.environment",
            "LaunchDarkly.project",
            "LaunchDarkly.api_key",
            "Sophtron.VerifyAccount",
            "LaunchDarkly.feature_flag",
            "Campertunity.userProfile",
            "GitHub.GetMe",
            "Hiveflow.User_-_Access_Management"
        ],
        "query": "Show all details for the current user account.",
        "response_time": 300.72546005249023,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_storage_blob_list"
        ],
        "matching_tools": [
            "Azure.azmcp_storage_blob_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_storage_container_list",
            "Azure.azmcp_storage_blob_download",
            "Azure.azmcp_storage_blob_upload",
            "Azure.azmcp_storage_account_list",
            "Azure.azmcp_cosmos_container_list",
            "Azure.azmcp_storage_blob_delete",
            "Azure.azmcp_resourcegroup_list",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_cosmos_database_container_item_query"
        ],
        "returned_tools": [
            "Azure.azmcp_storage_blob_list",
            "Azure.azmcp_storage_container_list",
            "Azure.azmcp_storage_blob_download",
            "Azure.azmcp_storage_blob_upload",
            "Azure.azmcp_storage_account_list",
            "Azure.azmcp_cosmos_container_list",
            "Azure.azmcp_storage_blob_delete",
            "Azure.azmcp_resourcegroup_list",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_cosmos_database_container_item_query"
        ],
        "query": "List all blobs in the 'images' container in the 'myazurestorage' storage account.",
        "response_time": 322.89958000183105,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "ThoughtSpot.backup"
        ],
        "matching_tools": [
            "ThoughtSpot.backup"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "ThoughtSpot.admin",
            "ThoughtSpot.license",
            "ThoughtSpot.service",
            "ThoughtSpot.upgrade",
            "ThoughtSpot.analytics",
            "ThoughtSpot.cluster",
            "Zapier.Schedule",
            "Nutrient.Health_Checking_Tool",
            "Memgraph.Export_Data_Tool"
        ],
        "returned_tools": [
            "ThoughtSpot.backup",
            "ThoughtSpot.admin",
            "ThoughtSpot.license",
            "ThoughtSpot.service",
            "ThoughtSpot.upgrade",
            "ThoughtSpot.analytics",
            "ThoughtSpot.cluster",
            "Zapier.Schedule",
            "Nutrient.Health_Checking_Tool",
            "Memgraph.Export_Data_Tool"
        ],
        "query": "How can I schedule a daily backup for the ThoughtSpot system and monitor its status?",
        "response_time": 300.66728591918945,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Twilio.toolbelt"
        ],
        "matching_tools": [
            "Twilio.toolbelt"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Twilio.access_management",
            "Twilio.reporting",
            "Twilio.config_management",
            "Sophtron.VerifyAccount",
            "Twilio.project_templates",
            "LaunchDarkly.account",
            "Twilio.plugin_management",
            "Upstash.Set",
            "Rember.list"
        ],
        "returned_tools": [
            "Twilio.access_management",
            "Twilio.toolbelt",
            "Twilio.reporting",
            "Twilio.config_management",
            "Sophtron.VerifyAccount",
            "Twilio.project_templates",
            "LaunchDarkly.account",
            "Twilio.plugin_management",
            "Upstash.Set",
            "Rember.list"
        ],
        "query": "List all active phone numbers associated with my Twilio account.",
        "response_time": 291.7017936706543,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 6.57
    },
    {
        "expected_tools": [
            "Campertunity.reviews"
        ],
        "matching_tools": [
            "Campertunity.reviews"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Campertunity.searchCamps",
            "Campertunity.listMyCamps",
            "Campertunity.bookCamp",
            "Campertunity.messaging",
            "Campertunity.userProfile",
            "DevRev.sentiment_analysis",
            "GitHub.GetPullRequestReviews",
            "HubSpot.Marketing_Email_Analytics",
            "Hyperbolic.web_search"
        ],
        "returned_tools": [
            "Campertunity.reviews",
            "Campertunity.searchCamps",
            "Campertunity.listMyCamps",
            "Campertunity.bookCamp",
            "Campertunity.messaging",
            "Campertunity.userProfile",
            "DevRev.sentiment_analysis",
            "GitHub.GetPullRequestReviews",
            "HubSpot.Marketing_Email_Analytics",
            "Hyperbolic.web_search"
        ],
        "query": "Show me the latest reviews and ratings for Whispering Pines Campground.",
        "response_time": 323.5657215118408,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.14
    },
    {
        "expected_tools": [
            "Memgraph.Procedures_Catalog"
        ],
        "matching_tools": [
            "Memgraph.Procedures_Catalog"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Memgraph.Graph_Visualizer",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Query_Runner",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Memgraph_Cypher_Generator",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Export_Data_Tool"
        ],
        "returned_tools": [
            "Memgraph.Procedures_Catalog",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Query_Runner",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Memgraph_Cypher_Generator",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Export_Data_Tool"
        ],
        "query": "List all available graph algorithms and procedures, including their descriptions and execution options.",
        "response_time": 334.7055912017822,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.29
    },
    {
        "expected_tools": [
            "Auth0.Entitlements"
        ],
        "matching_tools": [
            "Auth0.Entitlements"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Auth0.Permissions",
            "Auth0.Policies",
            "Auth0.Resource_Registration",
            "Auth0.Identities",
            "Auth0.Audience_Listing",
            "Liveblocks.admin_get_user_roles",
            "Hiveflow.User_-_Access_Management",
            "Linear.Permissions",
            "Liveblocks.admin_set_user_roles"
        ],
        "returned_tools": [
            "Auth0.Permissions",
            "Auth0.Entitlements",
            "Auth0.Policies",
            "Auth0.Resource_Registration",
            "Auth0.Identities",
            "Auth0.Audience_Listing",
            "Liveblocks.admin_get_user_roles",
            "Hiveflow.User_-_Access_Management",
            "Linear.Permissions",
            "Liveblocks.admin_set_user_roles"
        ],
        "query": "What resources and permissions does user john.doe@example.com have access to in the system?",
        "response_time": 333.99248123168945,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.86
    },
    {
        "expected_tools": [
            "Netdata.netdata_info"
        ],
        "matching_tools": [
            "Netdata.netdata_info"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Netdata.netdata_stats",
            "Netdata.netdata_config",
            "Netdata.alarms_list",
            "Netdata.data_query",
            "Netdata.alarms_silence",
            "Netdata.alarms_unsilence",
            "Netdata.system_info",
            "Netdata.log_tail",
            "ThoughtSpot.upgrade"
        ],
        "returned_tools": [
            "Netdata.netdata_info",
            "Netdata.netdata_stats",
            "Netdata.netdata_config",
            "Netdata.alarms_list",
            "Netdata.data_query",
            "Netdata.alarms_silence",
            "Netdata.alarms_unsilence",
            "Netdata.system_info",
            "Netdata.log_tail",
            "ThoughtSpot.upgrade"
        ],
        "query": "What version of the Netdata agent is currently installed and what features are enabled?",
        "response_time": 290.2355194091797,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.43
    },
    {
        "expected_tools": [
            "Yunxin.User_Management"
        ],
        "matching_tools": [
            "Yunxin.User_Management"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "LINE.Profile",
            "Yunxin.Permission_-_Role_Management",
            "PlayCanvas.user",
            "Klaviyo.Profiles",
            "Twilio.access_management",
            "Liveblocks.admin_get_user_roles",
            "Yunxin.Statistics_-_Monitoring",
            "Yunxin.Media_Control",
            "Campertunity.userProfile"
        ],
        "returned_tools": [
            "Yunxin.User_Management",
            "LINE.Profile",
            "Yunxin.Permission_-_Role_Management",
            "PlayCanvas.user",
            "Klaviyo.Profiles",
            "Twilio.access_management",
            "Liveblocks.admin_get_user_roles",
            "Yunxin.Statistics_-_Monitoring",
            "Yunxin.Media_Control",
            "Campertunity.userProfile"
        ],
        "query": "Retrieve the profile information for user with username 'johndoe'.",
        "response_time": 321.56896591186523,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.43
    },
    {
        "expected_tools": [
            "Upstash.String"
        ],
        "matching_tools": [
            "Upstash.String"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Upstash.Hash",
            "Upstash.Set",
            "Upstash.Keys",
            "Azure.azmcp_appconfig_kv_show",
            "Upstash.List",
            "Upstash.PubSub",
            "Upstash.ZSet",
            "Azure.azmcp_keyvault_key_get",
            "Azure.azmcp_appconfig_kv_list"
        ],
        "returned_tools": [
            "Upstash.String",
            "Upstash.Hash",
            "Upstash.Set",
            "Upstash.Keys",
            "Azure.azmcp_appconfig_kv_show",
            "Upstash.List",
            "Upstash.PubSub",
            "Upstash.ZSet",
            "Azure.azmcp_keyvault_key_get",
            "Azure.azmcp_appconfig_kv_list"
        ],
        "query": "Get the value of the key 'user:1234:session_token'",
        "response_time": 296.64134979248047,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "PlayCanvas.project"
        ],
        "matching_tools": [
            "PlayCanvas.project"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "PlayCanvas.snapshot",
            "PlayCanvas.asset",
            "PlayCanvas.branch",
            "PlayCanvas.entity",
            "SonarQube.List_Projects",
            "PlayCanvas.session",
            "GitHub.ListCommits",
            "PlayCanvas.user",
            "LaunchDarkly.project"
        ],
        "returned_tools": [
            "PlayCanvas.snapshot",
            "PlayCanvas.project",
            "PlayCanvas.asset",
            "PlayCanvas.branch",
            "PlayCanvas.entity",
            "SonarQube.List_Projects",
            "PlayCanvas.session",
            "GitHub.ListCommits",
            "PlayCanvas.user",
            "LaunchDarkly.project"
        ],
        "query": "List all PlayCanvas projects created in the last 30 days.",
        "response_time": 324.27048683166504,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_terminal_close"
        ],
        "matching_tools": [
            "VSCode.vscode_terminal_close"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_debug_stop",
            "VSCode.vscode_terminal_list",
            "VSCode.vscode_terminal_run_command",
            "GitHub.CancelWorkflowRun",
            "VSCode.vscode_workspace_close_folder",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_task_run",
            "VSCode.vscode_task_list"
        ],
        "returned_tools": [
            "VSCode.vscode_terminal_close",
            "VSCode.vscode_debug_stop",
            "VSCode.vscode_terminal_list",
            "VSCode.vscode_terminal_run_command",
            "GitHub.CancelWorkflowRun",
            "VSCode.vscode_workspace_close_folder",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_task_run",
            "VSCode.vscode_task_list"
        ],
        "query": "Close the currently active terminal session in VSCode.",
        "response_time": 301.6786575317383,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "CoinGecko.exchange_info"
        ],
        "matching_tools": [
            "CoinGecko.exchange_info"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "CoinGecko.coin_price",
            "CoinGecko.coin_market_cap",
            "CoinGecko.simple_coin_info",
            "CoinGecko.coin_market_chart",
            "CoinGecko.coin_historical_price",
            "Linear.Computed_Fields",
            "Sophtron.GetTransactions",
            "Nutrient.Health_Checking_Tool",
            "Auth0.Entitlements"
        ],
        "returned_tools": [
            "CoinGecko.exchange_info",
            "CoinGecko.coin_price",
            "CoinGecko.coin_market_cap",
            "CoinGecko.simple_coin_info",
            "CoinGecko.coin_market_chart",
            "CoinGecko.coin_historical_price",
            "Linear.Computed_Fields",
            "Sophtron.GetTransactions",
            "Nutrient.Health_Checking_Tool",
            "Auth0.Entitlements"
        ],
        "query": "What are the supported trading pairs, fees, and 24-hour trading volume for Binance exchange?",
        "response_time": 571.1383819580078,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.29
    },
    {
        "expected_tools": [
            "Auth0.Audience_Listing"
        ],
        "matching_tools": [
            "Auth0.Audience_Listing"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Auth0.Permissions",
            "Auth0.Entitlements",
            "Auth0.Identities",
            "Auth0.Policies",
            "Auth0.Resource_Registration",
            "Liveblocks.admin_get_user_roles",
            "Azure.azmcp_appconfig_account_list",
            "Linear.Permissions",
            "Linear.Actions"
        ],
        "returned_tools": [
            "Auth0.Audience_Listing",
            "Auth0.Permissions",
            "Auth0.Entitlements",
            "Auth0.Identities",
            "Auth0.Policies",
            "Auth0.Resource_Registration",
            "Liveblocks.admin_get_user_roles",
            "Azure.azmcp_appconfig_account_list",
            "Linear.Permissions",
            "Linear.Actions"
        ],
        "query": "List all audiences configured in Auth0 that can receive tokens or be referenced in access control decisions.",
        "response_time": 309.5691204071045,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.86
    },
    {
        "expected_tools": [
            "OpenSearch.delete_index"
        ],
        "matching_tools": [
            "OpenSearch.delete_index"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpenSearch.bulk",
            "OpenSearch.index_document",
            "OpenSearch.delete_document",
            "OpenSearch.get_aliases",
            "OpenSearch.get_cluster_state",
            "OpenSearch.search",
            "OpenSearch.get_mapping",
            "OpenSearch.update_mapping",
            "Azure.azmcp_search_index_delete"
        ],
        "returned_tools": [
            "OpenSearch.delete_index",
            "OpenSearch.bulk",
            "OpenSearch.index_document",
            "OpenSearch.delete_document",
            "OpenSearch.get_aliases",
            "OpenSearch.get_cluster_state",
            "OpenSearch.search",
            "OpenSearch.get_mapping",
            "OpenSearch.update_mapping",
            "Azure.azmcp_search_index_delete"
        ],
        "query": "Permanently delete the 'user_activity_logs' index from the OpenSearch cluster.",
        "response_time": 328.9012908935547,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Shortcut.Summarize"
        ],
        "matching_tools": [
            "Shortcut.Summarize"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "DevRev.summarization",
            "Octagon.summarize",
            "Shortcut.Update",
            "Shortcut.Create",
            "AllVoiceLab.Summarizer",
            "Shortcut.Ask",
            "Shortcut.List",
            "SonarQube.Show_Issue_Details",
            "JFrog.project_inspect"
        ],
        "returned_tools": [
            "Shortcut.Summarize",
            "DevRev.summarization",
            "Octagon.summarize",
            "Shortcut.Update",
            "Shortcut.Create",
            "AllVoiceLab.Summarizer",
            "Shortcut.Ask",
            "Shortcut.List",
            "SonarQube.Show_Issue_Details",
            "JFrog.project_inspect"
        ],
        "query": "Summarize activity on project Apollo for the past week.",
        "response_time": 285.75778007507324,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_search_index_delete"
        ],
        "matching_tools": [
            "Azure.azmcp_search_index_delete"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpenSearch.delete_index",
            "Azure.azmcp_search_service_list",
            "Azure.azmcp_appconfig_kv_delete",
            "Azure.azmcp_search_index_query",
            "Milvus.Index_Management",
            "Azure.azmcp_search_index_list",
            "Shortcut.Delete",
            "Azure.azmcp_search_index_create",
            "Azure.azmcp_cosmos_database_container_item_delete"
        ],
        "returned_tools": [
            "Azure.azmcp_search_index_delete",
            "OpenSearch.delete_index",
            "Azure.azmcp_search_service_list",
            "Azure.azmcp_appconfig_kv_delete",
            "Azure.azmcp_search_index_query",
            "Milvus.Index_Management",
            "Azure.azmcp_search_index_list",
            "Shortcut.Delete",
            "Azure.azmcp_search_index_create",
            "Azure.azmcp_cosmos_database_container_item_delete"
        ],
        "query": "Delete the search index named 'customer-orders-index' from the Azure Cognitive Search service.",
        "response_time": 311.53202056884766,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "OpsLevel.code/test"
        ],
        "matching_tools": [
            "OpsLevel.code/test"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpsLevel.code/license",
            "OpsLevel.security/codeql",
            "OpsLevel.docs/readme",
            "OpsLevel.code/ci",
            "OpsLevel.docs/contributing",
            "OpsLevel.actions/github_actions",
            "CodeLogic.Scanner",
            "VSCode.vscode_git_log",
            "SonarQube.Check_Quality_Gate"
        ],
        "returned_tools": [
            "OpsLevel.code/test",
            "OpsLevel.code/license",
            "OpsLevel.security/codeql",
            "OpsLevel.docs/readme",
            "OpsLevel.code/ci",
            "OpsLevel.docs/contributing",
            "OpsLevel.actions/github_actions",
            "CodeLogic.Scanner",
            "VSCode.vscode_git_log",
            "SonarQube.Check_Quality_Gate"
        ],
        "query": "Does the repository contain any automated tests using frameworks like pytest, jest, or unittest?",
        "response_time": 292.01388359069824,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_appconfig_kv_list"
        ],
        "matching_tools": [
            "Azure.azmcp_appconfig_kv_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_appconfig_kv_show",
            "Azure.azmcp_keyvault_key_list",
            "Azure.azmcp_appconfig_kv_set",
            "Azure.azmcp_keyvault_key_get",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_appconfig_kv_delete",
            "Azure.azmcp_appconfig_kv_unlock",
            "Azure.azmcp_appconfig_kv_lock",
            "Netdata.netdata_config"
        ],
        "returned_tools": [
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_appconfig_kv_show",
            "Azure.azmcp_keyvault_key_list",
            "Azure.azmcp_appconfig_kv_set",
            "Azure.azmcp_keyvault_key_get",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_appconfig_kv_delete",
            "Azure.azmcp_appconfig_kv_unlock",
            "Azure.azmcp_appconfig_kv_lock",
            "Netdata.netdata_config"
        ],
        "query": "List all key-values stored in the Azure App Configuration for the specified application environment.",
        "response_time": 300.3363609313965,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.86
    },
    {
        "expected_tools": [
            "OctoEverywhere.GCodeTerminal"
        ],
        "matching_tools": [
            "OctoEverywhere.GCodeTerminal"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OctoEverywhere.PrinterMainboard",
            "OctoEverywhere.Printer",
            "OctoEverywhere.Knowledge",
            "OctoEverywhere.System",
            "OctoEverywhere.Timelapse",
            "GitHub.GetFileContents",
            "ZIZAI Recruitment.settings",
            "VSCode.vscode_terminal_run_command",
            "VSCode.vscode_fs_read_file"
        ],
        "returned_tools": [
            "OctoEverywhere.GCodeTerminal",
            "OctoEverywhere.PrinterMainboard",
            "OctoEverywhere.Printer",
            "OctoEverywhere.Knowledge",
            "OctoEverywhere.System",
            "OctoEverywhere.Timelapse",
            "GitHub.GetFileContents",
            "ZIZAI Recruitment.settings",
            "VSCode.vscode_terminal_run_command",
            "VSCode.vscode_fs_read_file"
        ],
        "query": "Send the G-code command M503 to the 3D printer and retrieve the current firmware settings from the terminal output.",
        "response_time": 313.7378692626953,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_fs_write_file"
        ],
        "matching_tools": [
            "VSCode.vscode_fs_write_file"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_editor_replace_selection",
            "VSCode.vscode_fs_read_file",
            "OpsLevel.docs/readme",
            "GitHub.GetFileContents",
            "VSCode.vscode_editor_insert_text",
            "VSCode.vscode_editor_format_document",
            "VSCode.vscode_git_status",
            "VSCode.vscode_editor_get_selection",
            "Hyperbrowser.code_editor"
        ],
        "returned_tools": [
            "VSCode.vscode_editor_replace_selection",
            "VSCode.vscode_fs_read_file",
            "OpsLevel.docs/readme",
            "GitHub.GetFileContents",
            "VSCode.vscode_fs_write_file",
            "VSCode.vscode_editor_insert_text",
            "VSCode.vscode_editor_format_document",
            "VSCode.vscode_git_status",
            "VSCode.vscode_editor_get_selection",
            "Hyperbrowser.code_editor"
        ],
        "query": "Overwrite the contents of 'README.md' with the updated project documentation.",
        "response_time": 282.08231925964355,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Tianji.comment"
        ],
        "matching_tools": [
            "Tianji.comment"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.AddIssueComment",
            "Tianji.notification",
            "Notion.create_comment",
            "Tianji.search",
            "Tianji.question",
            "Tianji.answer",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "Tianji.vote",
            "SonarQube.Show_Quality_Gate_Details"
        ],
        "returned_tools": [
            "Tianji.comment",
            "GitHub.AddIssueComment",
            "Tianji.notification",
            "Notion.create_comment",
            "Tianji.search",
            "Tianji.question",
            "Tianji.answer",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "Tianji.vote",
            "SonarQube.Show_Quality_Gate_Details"
        ],
        "query": "Add a comment to the answer explaining why the proposed solution may not work in certain scenarios.",
        "response_time": 1389.4221782684326,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.ManageNotificationSubscription"
        ],
        "matching_tools": [
            "GitHub.ManageNotificationSubscription"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.DismissNotification",
            "GitHub.ManageRepositoryNotificationSubscription",
            "GitHub.GetIssue",
            "GitHub.SearchIssues",
            "GitHub.GetNotificationDetails",
            "GitHub.GetIssueComments",
            "GitHub.ListTags",
            "GitHub.AddIssueComment",
            "GitHub.ListIssues"
        ],
        "returned_tools": [
            "GitHub.DismissNotification",
            "GitHub.ManageRepositoryNotificationSubscription",
            "GitHub.ManageNotificationSubscription",
            "GitHub.GetIssue",
            "GitHub.SearchIssues",
            "GitHub.GetNotificationDetails",
            "GitHub.GetIssueComments",
            "GitHub.ListTags",
            "GitHub.AddIssueComment",
            "GitHub.ListIssues"
        ],
        "query": "Unsubscribe from notifications for issue #12345 in the repository octocat/Hello-World.",
        "response_time": 392.54045486450195,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Riza.classification"
        ],
        "matching_tools": [
            "Riza.classification"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "DevRev.sentiment_analysis",
            "DevRev.ticket_categorization",
            "Octagon.classify",
            "Riza.chat",
            "Riza.question_answering",
            "Riza.text_editing",
            "Riza.summarization",
            "Riza.text_completion",
            "klusterai.Profiling"
        ],
        "returned_tools": [
            "DevRev.sentiment_analysis",
            "Riza.classification",
            "DevRev.ticket_categorization",
            "Octagon.classify",
            "Riza.chat",
            "Riza.question_answering",
            "Riza.text_editing",
            "Riza.summarization",
            "Riza.text_completion",
            "klusterai.Profiling"
        ],
        "query": "Classify the following customer feedback into categories such as 'positive', 'negative', or 'neutral': 'The product arrived on time but the packaging was damaged.'",
        "response_time": 696.1841583251953,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.43
    },
    {
        "expected_tools": [
            "Nutrient.ResourceController"
        ],
        "matching_tools": [
            "Nutrient.ResourceController"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Nutrient.NodeController",
            "Nutrient.DWS_MCP_Server",
            "Nutrient.Health_Checking_Tool",
            "Nutrient.REST_API",
            "Nutrient.GRPC_API",
            "Liveblocks.list_rooms",
            "Logfire.list_python_packages",
            "NanoVMs.List_Deployments",
            "GitHub.ListAvailableToolsets"
        ],
        "returned_tools": [
            "Nutrient.ResourceController",
            "Nutrient.NodeController",
            "Nutrient.DWS_MCP_Server",
            "Nutrient.Health_Checking_Tool",
            "Nutrient.REST_API",
            "Nutrient.GRPC_API",
            "Liveblocks.list_rooms",
            "Logfire.list_python_packages",
            "NanoVMs.List_Deployments",
            "GitHub.ListAvailableToolsets"
        ],
        "query": "List all active pods currently managed in the DWS environment.",
        "response_time": 320.85347175598145,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 6.71
    },
    {
        "expected_tools": [
            "UnifAI.Ask"
        ],
        "matching_tools": [
            "UnifAI.Ask"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "UnifAI.SpeechRecognition",
            "DevRev.priority_detection",
            "UnifAI.OCR",
            "Zapier.Delay",
            "UnifAI.DocumentQA",
            "UnifAI.ImageDescription",
            "klusterai.Metrics",
            "Zapier.Schedule",
            "Yunxin.Room_Management"
        ],
        "returned_tools": [
            "UnifAI.Ask",
            "UnifAI.SpeechRecognition",
            "DevRev.priority_detection",
            "UnifAI.OCR",
            "Zapier.Delay",
            "UnifAI.DocumentQA",
            "UnifAI.ImageDescription",
            "klusterai.Metrics",
            "Zapier.Schedule",
            "Yunxin.Room_Management"
        ],
        "query": "What are some effective strategies for improving time management skills for college students?",
        "response_time": 312.75343894958496,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 2.86
    },
    {
        "expected_tools": [
            "OctoEverywhere.Timelapse"
        ],
        "matching_tools": [
            "OctoEverywhere.Timelapse"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OctoEverywhere.Printer",
            "OctoEverywhere.GCodeTerminal",
            "OctoEverywhere.Knowledge",
            "OctoEverywhere.PrinterMainboard",
            "OctoEverywhere.System",
            "fetchSERP.Google_Videos",
            "GitHub.ListAvailableToolsets",
            "PlayCanvas.snapshot",
            "Cloudinary.mcp_transformations"
        ],
        "returned_tools": [
            "OctoEverywhere.Timelapse",
            "OctoEverywhere.Printer",
            "OctoEverywhere.GCodeTerminal",
            "OctoEverywhere.Knowledge",
            "OctoEverywhere.PrinterMainboard",
            "OctoEverywhere.System",
            "fetchSERP.Google_Videos",
            "GitHub.ListAvailableToolsets",
            "PlayCanvas.snapshot",
            "Cloudinary.mcp_transformations"
        ],
        "query": "List all available timelapse videos generated by the 3D printer.",
        "response_time": 312.671422958374,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.ListPullRequests"
        ],
        "matching_tools": [
            "GitHub.ListPullRequests"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Shortcut.List",
            "GitHub.SearchPullRequests",
            "GitHub.GetPullRequest",
            "GitHub.MergePullRequest",
            "GitHub.GetPullRequestReviews",
            "GitHub.GetPullRequestFiles",
            "VSCode.vscode_git_pull",
            "GitHub.GetPullRequestDiff",
            "GitHub.GetPullRequestComments"
        ],
        "returned_tools": [
            "Shortcut.List",
            "GitHub.ListPullRequests",
            "GitHub.SearchPullRequests",
            "GitHub.GetPullRequest",
            "GitHub.MergePullRequest",
            "GitHub.GetPullRequestReviews",
            "GitHub.GetPullRequestFiles",
            "VSCode.vscode_git_pull",
            "GitHub.GetPullRequestDiff",
            "GitHub.GetPullRequestComments"
        ],
        "query": "List all open pull requests in the microsoft/vscode repository.",
        "response_time": 297.00708389282227,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.SearchUsers"
        ],
        "matching_tools": [
            "GitHub.SearchUsers"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.SearchCode",
            "GitHub.ListAvailableToolsets",
            "GitHub.GetMe",
            "GitHub.SearchOrgs",
            "GitHub.SearchPullRequests",
            "GitHub.ListWorkflowJobs",
            "GitHub.SearchRepositories",
            "GitHub.GetCodeScanningAlert",
            "GitHub.ListTags"
        ],
        "returned_tools": [
            "GitHub.SearchUsers",
            "GitHub.SearchCode",
            "GitHub.ListAvailableToolsets",
            "GitHub.GetMe",
            "GitHub.SearchOrgs",
            "GitHub.SearchPullRequests",
            "GitHub.ListWorkflowJobs",
            "GitHub.SearchRepositories",
            "GitHub.GetCodeScanningAlert",
            "GitHub.ListTags"
        ],
        "query": "Find GitHub users with expertise in machine learning",
        "response_time": 290.447473526001,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.71
    },
    {
        "expected_tools": [
            "Azure.azmcp_cosmos_database_container_item_delete"
        ],
        "matching_tools": [
            "Azure.azmcp_cosmos_database_container_item_delete"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpenSearch.delete_document",
            "Azure.azmcp_search_index_delete",
            "Azure.azmcp_storage_blob_delete",
            "Azure.azmcp_appconfig_kv_delete",
            "Azure.azmcp_cosmos_container_list",
            "GitHub.DeleteFile",
            "Azure.azmcp_cosmos_database_container_item_query",
            "LaunchDarkly.user",
            "VSCode.vscode_fs_delete_file"
        ],
        "returned_tools": [
            "Azure.azmcp_cosmos_database_container_item_delete",
            "OpenSearch.delete_document",
            "Azure.azmcp_search_index_delete",
            "Azure.azmcp_storage_blob_delete",
            "Azure.azmcp_appconfig_kv_delete",
            "Azure.azmcp_cosmos_container_list",
            "GitHub.DeleteFile",
            "Azure.azmcp_cosmos_database_container_item_query",
            "LaunchDarkly.user",
            "VSCode.vscode_fs_delete_file"
        ],
        "query": "Delete the document with id 'user123' from the 'users' container in the 'appdata' Cosmos DB database.",
        "response_time": 317.8279399871826,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.GetWorkflowRun"
        ],
        "matching_tools": [
            "GitHub.GetWorkflowRun"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetWorkflowRunLogs",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.ListWorkflowRunArtifacts",
            "GitHub.ListWorkflowRuns",
            "GitHub.RerunWorkflowRun",
            "GitHub.ListWorkflowJobs",
            "GitHub.GetWorkflowRunUsage",
            "GitHub.RunWorkflow",
            "GitHub.GetFileContents"
        ],
        "returned_tools": [
            "GitHub.GetWorkflowRun",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.ListWorkflowRunArtifacts",
            "GitHub.ListWorkflowRuns",
            "GitHub.RerunWorkflowRun",
            "GitHub.ListWorkflowJobs",
            "GitHub.GetWorkflowRunUsage",
            "GitHub.RunWorkflow",
            "GitHub.GetFileContents"
        ],
        "query": "Fetch the details for workflow run ID 123456 in the repository octocat/Hello-World.",
        "response_time": 296.24319076538086,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.86
    },
    {
        "expected_tools": [
            "Twilio.access_management"
        ],
        "matching_tools": [
            "Twilio.access_management"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Twilio.toolbelt",
            "Liveblocks.admin_get_user_roles",
            "Twilio.config_management",
            "Twilio.reporting",
            "Twilio.plugin_management",
            "GitHub.GetMe",
            "ThoughtSpot.license",
            "Auth0.Audience_Listing",
            "Yunxin.User_Management"
        ],
        "returned_tools": [
            "Twilio.access_management",
            "Twilio.toolbelt",
            "Liveblocks.admin_get_user_roles",
            "Twilio.config_management",
            "Twilio.reporting",
            "Twilio.plugin_management",
            "GitHub.GetMe",
            "ThoughtSpot.license",
            "Auth0.Audience_Listing",
            "Yunxin.User_Management"
        ],
        "query": "Retrieve the current access credentials for all active Twilio accounts in our organization.",
        "response_time": 632.0385932922363,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 0.0
    },
    {
        "expected_tools": [
            "SonarQube.List_Projects"
        ],
        "matching_tools": [
            "SonarQube.List_Projects"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "SonarQube.Trigger_Project_Analysis",
            "SonarQube.Get_Project_Metrics",
            "SonarQube.Show_Issue_Details",
            "SonarQube.Show_Quality_Gate_Details",
            "JFrog.project_inspect",
            "SonarQube.Check_Quality_Gate",
            "Logfire.list_python_packages",
            "CodeLogic.Dataflow_Analyzer",
            "SonarQube.List_Issues"
        ],
        "returned_tools": [
            "SonarQube.List_Projects",
            "SonarQube.Trigger_Project_Analysis",
            "SonarQube.Get_Project_Metrics",
            "SonarQube.Show_Issue_Details",
            "SonarQube.Show_Quality_Gate_Details",
            "JFrog.project_inspect",
            "SonarQube.Check_Quality_Gate",
            "Logfire.list_python_packages",
            "CodeLogic.Dataflow_Analyzer",
            "SonarQube.List_Issues"
        ],
        "query": "Show me all projects currently analyzed in SonarQube.",
        "response_time": 329.343318939209,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "Netdata.netdata_stats"
        ],
        "matching_tools": [
            "Netdata.netdata_stats"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Netdata.netdata_info",
            "Netdata.system_info",
            "Netdata.netdata_config",
            "Netdata.data_query",
            "Netdata.log_tail",
            "Netdata.alarms_silence",
            "Netdata.alarms_list",
            "OpenSearch.get_cluster_state",
            "OctoEverywhere.System"
        ],
        "returned_tools": [
            "Netdata.netdata_stats",
            "Netdata.netdata_info",
            "Netdata.system_info",
            "Netdata.netdata_config",
            "Netdata.data_query",
            "Netdata.log_tail",
            "Netdata.alarms_silence",
            "Netdata.alarms_list",
            "OpenSearch.get_cluster_state",
            "OctoEverywhere.System"
        ],
        "query": "What is the current memory usage, number of threads, and uptime of the Netdata agent?",
        "response_time": 374.6929168701172,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.43
    },
    {
        "expected_tools": [
            "GitHub.UpdatePullRequestBranch"
        ],
        "matching_tools": [
            "GitHub.UpdatePullRequestBranch"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.MergePullRequest",
            "GitHub.SearchPullRequests",
            "GitHub.GetPullRequest",
            "GitHub.GetPullRequestDiff",
            "GitHub.ListPullRequests",
            "GitHub.CreatePullRequest",
            "GitHub.GetPullRequestFiles",
            "GitHub.UpdatePullRequest",
            "GitHub.ListTags"
        ],
        "returned_tools": [
            "GitHub.UpdatePullRequestBranch",
            "GitHub.MergePullRequest",
            "GitHub.SearchPullRequests",
            "GitHub.GetPullRequest",
            "GitHub.GetPullRequestDiff",
            "GitHub.ListPullRequests",
            "GitHub.CreatePullRequest",
            "GitHub.GetPullRequestFiles",
            "GitHub.UpdatePullRequest",
            "GitHub.ListTags"
        ],
        "query": "Sync the branch of pull request #1234 with its base branch in the repository 'octocat/Hello-World'.",
        "response_time": 299.4353771209717,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.57
    },
    {
        "expected_tools": [
            "WaveSpeed.Ping"
        ],
        "matching_tools": [
            "WaveSpeed.Ping"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "WaveSpeed.Port_Scan",
            "WaveSpeed.Traceroute",
            "WaveSpeed.DNS_Lookup",
            "WaveSpeed.Whois",
            "Hunter.Ping",
            "Globalping.ping",
            "Globalping.tcp",
            "WaveSpeed.GeoIP",
            "Globalping.http"
        ],
        "returned_tools": [
            "WaveSpeed.Ping",
            "WaveSpeed.Port_Scan",
            "WaveSpeed.Traceroute",
            "WaveSpeed.DNS_Lookup",
            "WaveSpeed.Whois",
            "Hunter.Ping",
            "Globalping.ping",
            "Globalping.tcp",
            "WaveSpeed.GeoIP",
            "Globalping.http"
        ],
        "query": "Check the response time and availability of google.com to diagnose if there are any network connectivity issues.",
        "response_time": 313.6630058288574,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 10.0
    },
    {
        "expected_tools": [
            "Milvus.Index_Management"
        ],
        "matching_tools": [
            "Milvus.Index_Management"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Milvus.Schema_Management",
            "Milvus.Search_and_Query",
            "Milvus.Collection_Management",
            "Milvus.Partition_Management",
            "Azure.azmcp_search_index_create",
            "OpenSearch.index_document",
            "Milvus.Data_Import_Export",
            "OpenSearch.update_mapping",
            "UnifAI.ImageDescription"
        ],
        "returned_tools": [
            "Milvus.Index_Management",
            "Milvus.Schema_Management",
            "Milvus.Search_and_Query",
            "Milvus.Collection_Management",
            "Milvus.Partition_Management",
            "Azure.azmcp_search_index_create",
            "OpenSearch.index_document",
            "Milvus.Data_Import_Export",
            "OpenSearch.update_mapping",
            "UnifAI.ImageDescription"
        ],
        "query": "Create a vector index on the 'images' collection to improve similarity search performance.",
        "response_time": 318.758487701416,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Drata.Vendor_Risk_Management"
        ],
        "matching_tools": [
            "Drata.Vendor_Risk_Management"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Drata.Continuous_Control_Monitoring",
            "Drata.Evidence_Collection",
            "Drata.Access_Reviews",
            "Drata.Policy_Management",
            "Drata.Asset_Inventory",
            "GitHub.GetPullRequestStatus",
            "OpenSearch.get_cluster_state",
            "Shortcut.List",
            "ThoughtSpot.license"
        ],
        "returned_tools": [
            "Drata.Vendor_Risk_Management",
            "Drata.Continuous_Control_Monitoring",
            "Drata.Evidence_Collection",
            "Drata.Access_Reviews",
            "Drata.Policy_Management",
            "Drata.Asset_Inventory",
            "GitHub.GetPullRequestStatus",
            "OpenSearch.get_cluster_state",
            "Shortcut.List",
            "ThoughtSpot.license"
        ],
        "query": "List all third-party vendors currently under risk assessment and show the status of their completed questionnaires.",
        "response_time": 292.1793460845947,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.71
    },
    {
        "expected_tools": [
            "PlayCanvas.user"
        ],
        "matching_tools": [
            "PlayCanvas.user"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "PlayCanvas.session",
            "PlayCanvas.snapshot",
            "LINE.Profile",
            "PlayCanvas.entity",
            "Campertunity.userProfile",
            "PlayCanvas.project",
            "PlayCanvas.asset",
            "Klaviyo.Profiles",
            "GitHub.GetMe"
        ],
        "returned_tools": [
            "PlayCanvas.user",
            "PlayCanvas.session",
            "PlayCanvas.snapshot",
            "LINE.Profile",
            "PlayCanvas.entity",
            "Campertunity.userProfile",
            "PlayCanvas.project",
            "PlayCanvas.asset",
            "Klaviyo.Profiles",
            "GitHub.GetMe"
        ],
        "query": "Find the user profile information for the username 'johndoe'.",
        "response_time": 498.9137649536133,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 6.0
    },
    {
        "expected_tools": [
            "UnifAI.ImageDescription"
        ],
        "matching_tools": [
            "UnifAI.ImageDescription"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "UnifAI.OCR",
            "UnifAI.ImageQuestionAnswering",
            "UnifAI.SpeechRecognition",
            "UnifAI.Ask",
            "UnifAI.DocumentQA",
            "GitHub.GetFileContents",
            "TextIn.formula_recognition",
            "AllVoiceLab.Text_to_Speech_TTS",
            "Nutrient.Health_Checking_Tool"
        ],
        "returned_tools": [
            "UnifAI.ImageDescription",
            "UnifAI.OCR",
            "UnifAI.ImageQuestionAnswering",
            "UnifAI.SpeechRecognition",
            "UnifAI.Ask",
            "UnifAI.DocumentQA",
            "GitHub.GetFileContents",
            "TextIn.formula_recognition",
            "AllVoiceLab.Text_to_Speech_TTS",
            "Nutrient.Health_Checking_Tool"
        ],
        "query": "Describe the contents of this image in detail for someone who is visually impaired.",
        "response_time": 306.8709373474121,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Netdata.log_tail"
        ],
        "matching_tools": [
            "Netdata.log_tail"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Netdata.netdata_stats",
            "Netdata.data_query",
            "Netdata.alarms_list",
            "Netdata.netdata_config",
            "Netdata.netdata_info",
            "Netdata.system_info",
            "Netdata.alarms_silence",
            "Netdata.alarms_unsilence",
            "OpenSearch.get_cluster_state"
        ],
        "returned_tools": [
            "Netdata.log_tail",
            "Netdata.netdata_stats",
            "Netdata.data_query",
            "Netdata.alarms_list",
            "Netdata.netdata_config",
            "Netdata.netdata_info",
            "Netdata.system_info",
            "Netdata.alarms_silence",
            "Netdata.alarms_unsilence",
            "OpenSearch.get_cluster_state"
        ],
        "query": "Show the latest 20 entries from the Netdata logs to help diagnose recent monitoring issues.",
        "response_time": 292.388916015625,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.29
    },
    {
        "expected_tools": [
            "SonarQube.Show_Issue_Details"
        ],
        "matching_tools": [
            "SonarQube.Show_Issue_Details"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "SonarQube.List_Issues",
            "SonarQube.Get_Project_Metrics",
            "SonarQube.Trigger_Project_Analysis",
            "SonarQube.Show_Quality_Gate_Details",
            "GitHub.CreateIssue",
            "SonarQube.List_Projects",
            "CodeLogic.Dependency_Resolver",
            "SonarQube.Check_Quality_Gate",
            "JFrog.dependency_check"
        ],
        "returned_tools": [
            "SonarQube.Show_Issue_Details",
            "SonarQube.List_Issues",
            "SonarQube.Get_Project_Metrics",
            "SonarQube.Trigger_Project_Analysis",
            "SonarQube.Show_Quality_Gate_Details",
            "GitHub.CreateIssue",
            "SonarQube.List_Projects",
            "CodeLogic.Dependency_Resolver",
            "SonarQube.Check_Quality_Gate",
            "JFrog.dependency_check"
        ],
        "query": "Get detailed information about the issue with key 'AXd3fG2k9b2l4Qz8h7Jk' in the 'my-java-project' repository.",
        "response_time": 300.7528781890869,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.DeletePendingPullRequestReview"
        ],
        "matching_tools": [
            "GitHub.DeletePendingPullRequestReview"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.SubmitPendingPullRequestReview",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.GetPullRequestReviews",
            "GitHub.DeleteFile",
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.GetPullRequest",
            "GitHub.GetPullRequestStatus",
            "GitHub.ListPullRequests",
            "GitHub.ListIssues"
        ],
        "returned_tools": [
            "GitHub.DeletePendingPullRequestReview",
            "GitHub.SubmitPendingPullRequestReview",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.GetPullRequestReviews",
            "GitHub.DeleteFile",
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.GetPullRequest",
            "GitHub.GetPullRequestStatus",
            "GitHub.ListPullRequests",
            "GitHub.ListIssues"
        ],
        "query": "Delete the pending review for pull request #42 in the repository 'octocat/Hello-World' before it is submitted.",
        "response_time": 329.91647720336914,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.UpdateIssue"
        ],
        "matching_tools": [
            "GitHub.UpdateIssue"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetIssue",
            "GitHub.SearchIssues",
            "GitHub.AddIssueComment",
            "GitHub.CreateIssue",
            "GitHub.ListIssues",
            "GitHub.GetIssueComments",
            "GitHub.AssignCopilotToIssue",
            "GitHub.UpdatePullRequest",
            "GitHub.UpdatePullRequestBranch"
        ],
        "returned_tools": [
            "GitHub.UpdateIssue",
            "GitHub.GetIssue",
            "GitHub.SearchIssues",
            "GitHub.AddIssueComment",
            "GitHub.CreateIssue",
            "GitHub.ListIssues",
            "GitHub.GetIssueComments",
            "GitHub.AssignCopilotToIssue",
            "GitHub.UpdatePullRequest",
            "GitHub.UpdatePullRequestBranch"
        ],
        "query": "Update the title of issue #42 in the repository octocat/Hello-World to 'Bug: Crash on startup' and add the label 'bug'.",
        "response_time": 302.27112770080566,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Yunxin.Recording_-_Playback"
        ],
        "matching_tools": [
            "Yunxin.Recording_-_Playback"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Yunxin.Media_Control",
            "Yunxin.User_Management",
            "Yunxin.Room_Management",
            "Yunxin.Statistics_-_Monitoring",
            "Hyperbrowser.file_manager",
            "Yunxin.Notification_-_Callback",
            "Yunxin.Permission_-_Role_Management",
            "Cloudinary.mcp_upload",
            "LINE.Echo"
        ],
        "returned_tools": [
            "Yunxin.Recording_-_Playback",
            "Yunxin.Media_Control",
            "Yunxin.User_Management",
            "Yunxin.Room_Management",
            "Yunxin.Statistics_-_Monitoring",
            "Hyperbrowser.file_manager",
            "Yunxin.Notification_-_Callback",
            "Yunxin.Permission_-_Role_Management",
            "Cloudinary.mcp_upload",
            "LINE.Echo"
        ],
        "query": "How can I play back a previously recorded media session and manage the recorded files?",
        "response_time": 329.5867443084717,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "UnifAI.ImageQuestionAnswering"
        ],
        "matching_tools": [
            "UnifAI.ImageQuestionAnswering"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "UnifAI.OCR",
            "UnifAI.ImageDescription",
            "UnifAI.Ask",
            "UnifAI.SpeechRecognition",
            "UnifAI.DocumentQA",
            "fetchSERP.Google_Images",
            "TextIn.formula_recognition",
            "Memgraph.Graph_Schema_Viewer",
            "Netdata.alarms_list"
        ],
        "returned_tools": [
            "UnifAI.OCR",
            "UnifAI.ImageDescription",
            "UnifAI.Ask",
            "UnifAI.SpeechRecognition",
            "UnifAI.ImageQuestionAnswering",
            "UnifAI.DocumentQA",
            "fetchSERP.Google_Images",
            "TextIn.formula_recognition",
            "Memgraph.Graph_Schema_Viewer",
            "Netdata.alarms_list"
        ],
        "query": "What objects are present in this image?",
        "response_time": 301.51891708374023,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.GetToolsetsTools"
        ],
        "matching_tools": [
            "GitHub.GetToolsetsTools"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.ListAvailableToolsets",
            "GitHub.EnableToolset",
            "VSCode.vscode_git_branch_list",
            "VSCode.vscode_workspace_list_folders",
            "GitHub.ListWorkflowRuns",
            "GitHub.SearchCode",
            "VSCode.vscode_task_list",
            "GitHub.ListCodeScanningAlerts",
            "GitHub.ListBranches"
        ],
        "returned_tools": [
            "GitHub.GetToolsetsTools",
            "GitHub.ListAvailableToolsets",
            "GitHub.EnableToolset",
            "VSCode.vscode_git_branch_list",
            "VSCode.vscode_workspace_list_folders",
            "GitHub.ListWorkflowRuns",
            "GitHub.SearchCode",
            "VSCode.vscode_task_list",
            "GitHub.ListCodeScanningAlerts",
            "GitHub.ListBranches"
        ],
        "query": "List all available tools grouped by their respective toolsets.",
        "response_time": 289.8585796356201,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "VSCode.vscode_copilot_agent_execute"
        ],
        "matching_tools": [
            "VSCode.vscode_copilot_agent_execute"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_copilot_agent_plan",
            "VSCode.vscode_copilot_chat_send",
            "GitHub.AssignCopilotToIssue",
            "VSCode.vscode_terminal_run_command",
            "VSCode.vscode_task_run",
            "VSCode.vscode_copilot_chat_get_history",
            "VSCode.vscode_terminal_list",
            "VSCode.vscode_git_push",
            "VSCode.vscode_workspace_get_active_file"
        ],
        "returned_tools": [
            "VSCode.vscode_copilot_agent_execute",
            "VSCode.vscode_copilot_agent_plan",
            "VSCode.vscode_copilot_chat_send",
            "GitHub.AssignCopilotToIssue",
            "VSCode.vscode_terminal_run_command",
            "VSCode.vscode_task_run",
            "VSCode.vscode_copilot_chat_get_history",
            "VSCode.vscode_terminal_list",
            "VSCode.vscode_git_push",
            "VSCode.vscode_workspace_get_active_file"
        ],
        "query": "Execute the next planned action suggested by Copilot agent in the current VSCode workspace.",
        "response_time": 302.0670413970947,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.GetPullRequestDiff"
        ],
        "matching_tools": [
            "GitHub.GetPullRequestDiff"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetPullRequest",
            "VSCode.vscode_git_diff",
            "GitHub.GetPullRequestFiles",
            "GitHub.ListPullRequests",
            "GitHub.GetPullRequestReviews",
            "GitHub.MergePullRequest",
            "GitHub.GetPullRequestComments",
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.CreatePendingPullRequestReview"
        ],
        "returned_tools": [
            "GitHub.GetPullRequestDiff",
            "GitHub.GetPullRequest",
            "VSCode.vscode_git_diff",
            "GitHub.GetPullRequestFiles",
            "GitHub.ListPullRequests",
            "GitHub.GetPullRequestReviews",
            "GitHub.MergePullRequest",
            "GitHub.GetPullRequestComments",
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.CreatePendingPullRequestReview"
        ],
        "query": "Show the code differences introduced in pull request #42 in the repository octocat/Hello-World.",
        "response_time": 319.0741539001465,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.71
    },
    {
        "expected_tools": [
            "Azure.azmcp_keyvault_key_list"
        ],
        "matching_tools": [
            "Azure.azmcp_keyvault_key_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_keyvault_key_get",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_appconfig_kv_show",
            "Upstash.Keys",
            "Azure.azmcp_appconfig_kv_set",
            "Azure.azmcp_keyvault_key_create",
            "Azure.azmcp_keyvault_key_delete",
            "LaunchDarkly.api_key",
            "ThoughtSpot.license"
        ],
        "returned_tools": [
            "Azure.azmcp_keyvault_key_list",
            "Azure.azmcp_keyvault_key_get",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_appconfig_kv_show",
            "Upstash.Keys",
            "Azure.azmcp_appconfig_kv_set",
            "Azure.azmcp_keyvault_key_create",
            "Azure.azmcp_keyvault_key_delete",
            "LaunchDarkly.api_key",
            "ThoughtSpot.license"
        ],
        "query": "List all keys stored in the specified Azure Key Vault.",
        "response_time": 309.98969078063965,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "Upstash.Set"
        ],
        "matching_tools": [
            "Upstash.Set"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Upstash.PubSub",
            "Upstash.Hash",
            "Upstash.String",
            "Upstash.ZSet",
            "LaunchDarkly.user",
            "Upstash.List",
            "Upstash.Keys",
            "PlayCanvas.user",
            "Campertunity.userProfile"
        ],
        "returned_tools": [
            "Upstash.Set",
            "Upstash.PubSub",
            "Upstash.Hash",
            "Upstash.String",
            "Upstash.ZSet",
            "LaunchDarkly.user",
            "Upstash.List",
            "Upstash.Keys",
            "PlayCanvas.user",
            "Campertunity.userProfile"
        ],
        "query": "Add user42 to online users set",
        "response_time": 290.7378673553467,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Memgraph.Graph_Visualizer"
        ],
        "matching_tools": [
            "Memgraph.Graph_Visualizer"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Query_Runner",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Procedures_Catalog",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Memgraph_Cypher_Generator",
            "Memgraph.Export_Data_Tool"
        ],
        "returned_tools": [
            "Memgraph.Graph_Visualizer",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Query_Runner",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Procedures_Catalog",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Memgraph_Cypher_Generator",
            "Memgraph.Export_Data_Tool"
        ],
        "query": "Visualize the relationships between all users and the projects they are collaborating on in the database.",
        "response_time": 332.6122760772705,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 10.0
    },
    {
        "expected_tools": [
            "JFrog.project_inspect"
        ],
        "matching_tools": [
            "JFrog.project_inspect"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "JFrog.dependency_check",
            "CodeLogic.Scanner",
            "JFrog.secrets_scan",
            "SonarQube.Show_Issue_Details",
            "JFrog.container_scan",
            "JFrog.license_compliance",
            "SonarQube.Trigger_Project_Analysis",
            "CodeLogic.Dependency_Resolver",
            "Logfire.search_python_docs"
        ],
        "returned_tools": [
            "JFrog.project_inspect",
            "JFrog.dependency_check",
            "CodeLogic.Scanner",
            "JFrog.secrets_scan",
            "SonarQube.Show_Issue_Details",
            "JFrog.container_scan",
            "JFrog.license_compliance",
            "SonarQube.Trigger_Project_Analysis",
            "CodeLogic.Dependency_Resolver",
            "Logfire.search_python_docs"
        ],
        "query": "Analyze the dependencies and metadata of the 'my-app' project to extract relevant project information.",
        "response_time": 290.2693748474121,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "CodeLogic.Scanner"
        ],
        "matching_tools": [
            "CodeLogic.Scanner"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "CodeLogic.Reporting_Engine",
            "CodeLogic.Application_Modeler",
            "CodeLogic.Dependency_Resolver",
            "CodeLogic.Graph_Generator",
            "CodeLogic.Dataflow_Analyzer",
            "GitHub.GetFileContents",
            "GitHub.ListTags",
            "JFrog.secrets_scan",
            "SonarQube.List_Projects"
        ],
        "returned_tools": [
            "CodeLogic.Scanner",
            "CodeLogic.Reporting_Engine",
            "CodeLogic.Application_Modeler",
            "CodeLogic.Dependency_Resolver",
            "CodeLogic.Graph_Generator",
            "CodeLogic.Dataflow_Analyzer",
            "GitHub.GetFileContents",
            "GitHub.ListTags",
            "JFrog.secrets_scan",
            "SonarQube.List_Projects"
        ],
        "query": "Scan the repository at https://github.com/example/project to generate a report of its application structure and list all external dependencies.",
        "response_time": 327.9907703399658,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Rember.choices"
        ],
        "matching_tools": [
            "Rember.choices"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Rember.compose",
            "Rember.extract",
            "Rember.replace",
            "Rember.list",
            "Rember.transform",
            "Rember.rewrite",
            "Riza.question_answering",
            "UnifAI.DocumentQA",
            "LINE.Confirm"
        ],
        "returned_tools": [
            "Rember.compose",
            "Rember.choices",
            "Rember.extract",
            "Rember.replace",
            "Rember.list",
            "Rember.transform",
            "Rember.rewrite",
            "Riza.question_answering",
            "UnifAI.DocumentQA",
            "LINE.Confirm"
        ],
        "query": "Which of the following is the capital city of France? A) Berlin B) Madrid C) Paris D) Rome",
        "response_time": 311.5115165710449,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.14
    },
    {
        "expected_tools": [
            "Hiveflow.Data_Connector"
        ],
        "matching_tools": [
            "Hiveflow.Data_Connector"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hiveflow.Workflow_Engine",
            "Hiveflow.Knowledge_Base",
            "Nutrient.REST_API",
            "Hiveflow.User_-_Access_Management",
            "Azure.azmcp_postgres_database_list",
            "Hiveflow.Search",
            "Linear.API",
            "NanoVMs.Create_Deployment",
            "Linear.Actions"
        ],
        "returned_tools": [
            "Hiveflow.Data_Connector",
            "Hiveflow.Workflow_Engine",
            "Hiveflow.Knowledge_Base",
            "Nutrient.REST_API",
            "Hiveflow.User_-_Access_Management",
            "Azure.azmcp_postgres_database_list",
            "Hiveflow.Search",
            "Linear.API",
            "NanoVMs.Create_Deployment",
            "Linear.Actions"
        ],
        "query": "Set up a connection to an external PostgreSQL database and ingest customer transaction data into MCP.",
        "response_time": 301.5398979187012,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 6.14
    },
    {
        "expected_tools": [
            "GitHub.SearchCode"
        ],
        "matching_tools": [
            "GitHub.SearchCode"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.SearchPullRequests",
            "GitHub.ListBranches",
            "GitHub.GetFileContents",
            "GitHub.GetCodeScanningAlert",
            "GitHub.GetMe",
            "GitHub.SearchRepositories",
            "GitHub.GetCommit",
            "GitHub.ListPullRequests",
            "GitHub.ListSecretScanningAlerts"
        ],
        "returned_tools": [
            "GitHub.SearchCode",
            "GitHub.SearchPullRequests",
            "GitHub.ListBranches",
            "GitHub.GetFileContents",
            "GitHub.GetCodeScanningAlert",
            "GitHub.GetMe",
            "GitHub.SearchRepositories",
            "GitHub.GetCommit",
            "GitHub.ListPullRequests",
            "GitHub.ListSecretScanningAlerts"
        ],
        "query": "Find all instances of 'JWT authentication' implementation in Python repositories.",
        "response_time": 323.57335090637207,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_search_index_list"
        ],
        "matching_tools": [
            "Azure.azmcp_search_index_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_search_service_list",
            "Azure.azmcp_search_index_query",
            "Hiveflow.Search",
            "Azure.azmcp_search_index_create",
            "OpenSearch.search",
            "Azure.azmcp_postgres_database_list",
            "Azure.azmcp_search_index_delete",
            "Hyperbrowser.web_browser",
            "Shortcut.List"
        ],
        "returned_tools": [
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_search_service_list",
            "Azure.azmcp_search_index_query",
            "Hiveflow.Search",
            "Azure.azmcp_search_index_create",
            "OpenSearch.search",
            "Azure.azmcp_postgres_database_list",
            "Azure.azmcp_search_index_delete",
            "Hyperbrowser.web_browser",
            "Shortcut.List"
        ],
        "query": "List all search indexes available in the Azure search service.",
        "response_time": 340.8079147338867,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.57
    },
    {
        "expected_tools": [
            "fetchSERP.Google_News"
        ],
        "matching_tools": [
            "fetchSERP.Google_News"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "fetchSERP.Google_Scholar",
            "fetchSERP.Google_Search",
            "fetchSERP.Google_Images",
            "fetchSERP.Google_Videos",
            "fetchSERP.Google_Maps",
            "fetchSERP.Google_Shopping",
            "GitHub.ListCommits",
            "Logfire.ask_openai_chat",
            "ThoughtSpot.upgrade"
        ],
        "returned_tools": [
            "fetchSERP.Google_Scholar",
            "fetchSERP.Google_Search",
            "fetchSERP.Google_Images",
            "fetchSERP.Google_Videos",
            "fetchSERP.Google_News",
            "fetchSERP.Google_Maps",
            "fetchSERP.Google_Shopping",
            "GitHub.ListCommits",
            "Logfire.ask_openai_chat",
            "ThoughtSpot.upgrade"
        ],
        "query": "latest developments in artificial intelligence 2024",
        "response_time": 280.18999099731445,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Logfire.ask_openai_chat"
        ],
        "matching_tools": [
            "Logfire.ask_openai_chat"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Logfire.search_python_docs",
            "Logfire.ask_chat_google",
            "Logfire.ask_groq_llama3",
            "Logfire.list_python_packages",
            "Logfire.ask_ollama_chat",
            "Logfire.get_function_doc",
            "Riza.classification",
            "Hyperbrowser.text_comparison",
            "Octagon.classify"
        ],
        "returned_tools": [
            "Logfire.search_python_docs",
            "Logfire.ask_openai_chat",
            "Logfire.ask_chat_google",
            "Logfire.ask_groq_llama3",
            "Logfire.list_python_packages",
            "Logfire.ask_ollama_chat",
            "Logfire.get_function_doc",
            "Riza.classification",
            "Hyperbrowser.text_comparison",
            "Octagon.classify"
        ],
        "query": "Can you explain the difference between supervised and unsupervised machine learning?",
        "response_time": 325.49500465393066,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "Yunxin.Statistics_-_Monitoring"
        ],
        "matching_tools": [
            "Yunxin.Statistics_-_Monitoring"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Yunxin.User_Management",
            "Yunxin.Media_Control",
            "Yunxin.Permission_-_Role_Management",
            "Yunxin.Room_Management",
            "Liveblocks.admin_get_user_roles",
            "Drata.Access_Reviews",
            "Yunxin.Notification_-_Callback",
            "Liveblocks.get_room_info",
            "Liveblocks.list_rooms"
        ],
        "returned_tools": [
            "Yunxin.Statistics_-_Monitoring",
            "Yunxin.User_Management",
            "Yunxin.Media_Control",
            "Yunxin.Permission_-_Role_Management",
            "Yunxin.Room_Management",
            "Liveblocks.admin_get_user_roles",
            "Drata.Access_Reviews",
            "Yunxin.Notification_-_Callback",
            "Liveblocks.get_room_info",
            "Liveblocks.list_rooms"
        ],
        "query": "Retrieve the real-time number of active users and rooms in the system over the past 24 hours.",
        "response_time": 311.12122535705566,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_workspace_open_folder"
        ],
        "matching_tools": [
            "VSCode.vscode_workspace_open_folder"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_workspace_list_folders",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_fs_write_file",
            "VSCode.vscode_git_pull",
            "VSCode.vscode_editor_format_document",
            "VSCode.vscode_terminal_list",
            "VSCode.vscode_editor_get_selection"
        ],
        "returned_tools": [
            "VSCode.vscode_workspace_open_folder",
            "VSCode.vscode_workspace_list_folders",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_fs_write_file",
            "VSCode.vscode_git_pull",
            "VSCode.vscode_editor_format_document",
            "VSCode.vscode_terminal_list",
            "VSCode.vscode_editor_get_selection"
        ],
        "query": "Open the 'my_project' folder into the current VSCode workspace.",
        "response_time": 294.9483394622803,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.GetTag"
        ],
        "matching_tools": [
            "GitHub.GetTag"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetCommit",
            "GitHub.GetNotificationDetails",
            "GitHub.GetFileContents",
            "GitHub.ListTags",
            "GitHub.GetMe",
            "GitHub.GetWorkflowRun",
            "GitHub.CreateOrUpdateFile",
            "GitHub.SearchOrgs",
            "GitHub.GetPullRequest"
        ],
        "returned_tools": [
            "GitHub.GetTag",
            "GitHub.GetCommit",
            "GitHub.GetNotificationDetails",
            "GitHub.GetFileContents",
            "GitHub.ListTags",
            "GitHub.GetMe",
            "GitHub.GetWorkflowRun",
            "GitHub.CreateOrUpdateFile",
            "GitHub.SearchOrgs",
            "GitHub.GetPullRequest"
        ],
        "query": "Get details about the 'v2.0.1' tag in the 'octocat/Hello-World' repository.",
        "response_time": 284.7771644592285,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Drata.Asset_Inventory"
        ],
        "matching_tools": [
            "Drata.Asset_Inventory"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Drata.Access_Reviews",
            "Drata.Evidence_Collection",
            "Drata.Continuous_Control_Monitoring",
            "Drata.Vendor_Risk_Management",
            "NanoVMs.List_Deployments",
            "Drata.Policy_Management",
            "SonarQube.List_Projects",
            "GitHub.ListBranches",
            "Azure.azmcp_resourcegroup_list"
        ],
        "returned_tools": [
            "Drata.Asset_Inventory",
            "Drata.Access_Reviews",
            "Drata.Evidence_Collection",
            "Drata.Continuous_Control_Monitoring",
            "Drata.Vendor_Risk_Management",
            "NanoVMs.List_Deployments",
            "Drata.Policy_Management",
            "SonarQube.List_Projects",
            "GitHub.ListBranches",
            "Azure.azmcp_resourcegroup_list"
        ],
        "query": "List all cloud and on-premise assets currently inventoried in our organization.",
        "response_time": 334.2161178588867,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "Nutrient.Health_Checking_Tool"
        ],
        "matching_tools": [
            "Nutrient.Health_Checking_Tool"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Nutrient.REST_API",
            "Nutrient.DWS_MCP_Server",
            "Nutrient.NodeController",
            "OpenSearch.get_cluster_state",
            "Nutrient.ResourceController",
            "Nutrient.GRPC_API",
            "ThoughtSpot.cluster",
            "Memgraph.Graph_Visualizer",
            "ThoughtSpot.admin"
        ],
        "returned_tools": [
            "Nutrient.Health_Checking_Tool",
            "Nutrient.REST_API",
            "Nutrient.DWS_MCP_Server",
            "Nutrient.NodeController",
            "OpenSearch.get_cluster_state",
            "Nutrient.ResourceController",
            "Nutrient.GRPC_API",
            "ThoughtSpot.cluster",
            "Memgraph.Graph_Visualizer",
            "ThoughtSpot.admin"
        ],
        "query": "Fetch the current health status of all managed nodes and services in the system.",
        "response_time": 1556.5869808197021,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.29
    },
    {
        "expected_tools": [
            "fetchSERP.Google_Maps"
        ],
        "matching_tools": [
            "fetchSERP.Google_Maps"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "fetchSERP.Google_Search",
            "fetchSERP.Google_Videos",
            "fetchSERP.Google_Images",
            "fetchSERP.Google_Shopping",
            "fetchSERP.Google_Scholar",
            "Hyperbolic.site_search",
            "Hiveflow.Search",
            "fetchSERP.Google_News",
            "Azure.azmcp_search_index_create"
        ],
        "returned_tools": [
            "fetchSERP.Google_Search",
            "fetchSERP.Google_Maps",
            "fetchSERP.Google_Videos",
            "fetchSERP.Google_Images",
            "fetchSERP.Google_Shopping",
            "fetchSERP.Google_Scholar",
            "Hyperbolic.site_search",
            "Hiveflow.Search",
            "fetchSERP.Google_News",
            "Azure.azmcp_search_index_create"
        ],
        "query": "Find the top-rated Italian restaurants near Times Square, New York City.",
        "response_time": 291.7981147766113,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Netdata.alarms_unsilence"
        ],
        "matching_tools": [
            "Netdata.alarms_unsilence"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Netdata.alarms_list",
            "Netdata.alarms_silence",
            "Netdata.netdata_info",
            "Netdata.netdata_config",
            "Netdata.log_tail",
            "Netdata.system_info",
            "Netdata.data_query",
            "Netdata.netdata_stats",
            "Azure.azmcp_appconfig_kv_unlock"
        ],
        "returned_tools": [
            "Netdata.alarms_unsilence",
            "Netdata.alarms_list",
            "Netdata.alarms_silence",
            "Netdata.netdata_info",
            "Netdata.netdata_config",
            "Netdata.log_tail",
            "Netdata.system_info",
            "Netdata.data_query",
            "Netdata.netdata_stats",
            "Azure.azmcp_appconfig_kv_unlock"
        ],
        "query": "Unsilence all previously silenced alarms on the Netdata monitoring system to immediately re-enable alert notifications.",
        "response_time": 363.9402389526367,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.43
    },
    {
        "expected_tools": [
            "YepCode.rest"
        ],
        "matching_tools": [
            "YepCode.rest"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "YepCode.rabbitmq",
            "YepCode.webhook",
            "Zapier.Webhooks",
            "GitHub.GetPullRequest",
            "Hyperbolic.wikidata",
            "Netdata.data_query",
            "fetchSERP.Google_Maps",
            "Hunter.Traceroute",
            "Hyperbolic.web_search"
        ],
        "returned_tools": [
            "YepCode.rabbitmq",
            "YepCode.webhook",
            "YepCode.rest",
            "Zapier.Webhooks",
            "GitHub.GetPullRequest",
            "Hyperbolic.wikidata",
            "Netdata.data_query",
            "fetchSERP.Google_Maps",
            "Hunter.Traceroute",
            "Hyperbolic.web_search"
        ],
        "query": "Send a GET request to https://api.openweathermap.org/data/2.5/weather?q=London&appid=YOUR_API_KEY to retrieve the current weather data for London.",
        "response_time": 311.0668659210205,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Notion.get_user"
        ],
        "matching_tools": [
            "Notion.get_user"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "SonarQube.Show_Issue_Details",
            "Notion.get_database",
            "Liveblocks.admin_get_user_roles",
            "LINE.Profile",
            "Notion.get_block",
            "Notion.search_users",
            "PlayCanvas.user",
            "GitHub.GetMe",
            "HubSpot.Contact_Insights"
        ],
        "returned_tools": [
            "Notion.get_user",
            "SonarQube.Show_Issue_Details",
            "Notion.get_database",
            "Liveblocks.admin_get_user_roles",
            "LINE.Profile",
            "Notion.get_block",
            "Notion.search_users",
            "PlayCanvas.user",
            "GitHub.GetMe",
            "HubSpot.Contact_Insights"
        ],
        "query": "Retrieve detailed information about the user with ID '12345' in Notion.",
        "response_time": 317.04020500183105,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.57
    },
    {
        "expected_tools": [
            "NanoVMs.List_Deployments"
        ],
        "matching_tools": [
            "NanoVMs.List_Deployments"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "NanoVMs.Describe_Deployment",
            "NanoVMs.SSH_Management",
            "NanoVMs.MCP_Image_Management",
            "NanoVMs.Create_Deployment",
            "NanoVMs.Delete_Deployment",
            "SonarQube.List_Projects",
            "Nutrient.DWS_MCP_Server",
            "Linear.API",
            "LaunchDarkly.feature_flag"
        ],
        "returned_tools": [
            "NanoVMs.List_Deployments",
            "NanoVMs.Describe_Deployment",
            "NanoVMs.SSH_Management",
            "NanoVMs.MCP_Image_Management",
            "NanoVMs.Create_Deployment",
            "NanoVMs.Delete_Deployment",
            "SonarQube.List_Projects",
            "Nutrient.DWS_MCP_Server",
            "Linear.API",
            "LaunchDarkly.feature_flag"
        ],
        "query": "List all current MCP deployments along with their statuses.",
        "response_time": 308.5975646972656,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.14
    },
    {
        "expected_tools": [
            "OpenSearch.index_document"
        ],
        "matching_tools": [
            "OpenSearch.index_document"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpenSearch.search",
            "OpenSearch.update_mapping",
            "LINE.Profile",
            "OpenSearch.bulk",
            "OpenSearch.analyze_text",
            "PlayCanvas.user",
            "Campertunity.userProfile",
            "OpenSearch.get_cluster_state",
            "OpenSearch.get_aliases"
        ],
        "returned_tools": [
            "OpenSearch.index_document",
            "OpenSearch.search",
            "OpenSearch.update_mapping",
            "LINE.Profile",
            "OpenSearch.bulk",
            "OpenSearch.analyze_text",
            "PlayCanvas.user",
            "Campertunity.userProfile",
            "OpenSearch.get_cluster_state",
            "OpenSearch.get_aliases"
        ],
        "query": "Index a new user profile document with fields for username, email, and registration date into the 'users' index.",
        "response_time": 323.65894317626953,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "klusterai.Metrics"
        ],
        "matching_tools": [
            "klusterai.Metrics"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "klusterai.Ordering",
            "klusterai.Filters",
            "klusterai.Joins",
            "klusterai.Profiling",
            "klusterai.Grouping",
            "klusterai.Limit",
            "OpenSearch.get_cluster_state",
            "Logfire.search_python_docs",
            "OpenSearch.get_mapping"
        ],
        "returned_tools": [
            "klusterai.Metrics",
            "klusterai.Ordering",
            "klusterai.Filters",
            "klusterai.Joins",
            "klusterai.Profiling",
            "klusterai.Grouping",
            "klusterai.Limit",
            "OpenSearch.get_cluster_state",
            "Logfire.search_python_docs",
            "OpenSearch.get_mapping"
        ],
        "query": "What is the average order value for the past month?",
        "response_time": 2785.459280014038,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "GitHub.CancelWorkflowRun"
        ],
        "matching_tools": [
            "GitHub.CancelWorkflowRun"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.DeleteWorkflowRunLogs",
            "GitHub.DismissNotification",
            "GitHub.GetWorkflowRun",
            "GitHub.RerunWorkflowRun",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.ListWorkflowRuns",
            "GitHub.ListWorkflowRunArtifacts",
            "GitHub.RerunFailedJobs",
            "GitHub.GetWorkflowRunLogs"
        ],
        "returned_tools": [
            "GitHub.CancelWorkflowRun",
            "GitHub.DeleteWorkflowRunLogs",
            "GitHub.DismissNotification",
            "GitHub.GetWorkflowRun",
            "GitHub.RerunWorkflowRun",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.ListWorkflowRuns",
            "GitHub.ListWorkflowRunArtifacts",
            "GitHub.RerunFailedJobs",
            "GitHub.GetWorkflowRunLogs"
        ],
        "query": "Cancel the workflow run with ID 123456 in the repository 'octocat/Hello-World'.",
        "response_time": 331.90321922302246,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.71
    },
    {
        "expected_tools": [
            "OpsLevel.code/license"
        ],
        "matching_tools": [
            "OpsLevel.code/license"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "JFrog.license_compliance",
            "GitHub.SearchOrgs",
            "OpsLevel.code/ci",
            "ThoughtSpot.license",
            "GitHub.ListBranches",
            "OpsLevel.security/codeql",
            "OpsLevel.docs/readme",
            "OpsLevel.actions/github_actions",
            "GitHub.ListTags"
        ],
        "returned_tools": [
            "OpsLevel.code/license",
            "JFrog.license_compliance",
            "GitHub.SearchOrgs",
            "OpsLevel.code/ci",
            "ThoughtSpot.license",
            "GitHub.ListBranches",
            "OpsLevel.security/codeql",
            "OpsLevel.docs/readme",
            "OpsLevel.actions/github_actions",
            "GitHub.ListTags"
        ],
        "query": "List all repositories in our organization that do not have a detected license file or have an unknown license type.",
        "response_time": 354.0632724761963,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "OpenSearch.bulk"
        ],
        "matching_tools": [
            "OpenSearch.bulk"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpenSearch.index_document",
            "OpenSearch.update_mapping",
            "OpenSearch.search",
            "OpenSearch.get_mapping",
            "OpenSearch.get_aliases",
            "OpenSearch.get_cluster_state",
            "Hiveflow.Search",
            "fetchSERP.Google_Shopping",
            "OpenSearch.delete_document"
        ],
        "returned_tools": [
            "OpenSearch.index_document",
            "OpenSearch.bulk",
            "OpenSearch.update_mapping",
            "OpenSearch.search",
            "OpenSearch.get_mapping",
            "OpenSearch.get_aliases",
            "OpenSearch.get_cluster_state",
            "Hiveflow.Search",
            "fetchSERP.Google_Shopping",
            "OpenSearch.delete_document"
        ],
        "query": "Index a batch of 500 new product documents into the 'products' index and update the price field for 200 existing products in a single request.",
        "response_time": 309.77511405944824,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Linear.Actions"
        ],
        "matching_tools": [
            "Linear.Actions"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Linear.API",
            "Linear.Schemas",
            "Linear.Audit_Logs",
            "NanoVMs.Create_Deployment",
            "DevRev.priority_detection",
            "DevRev.ticket_categorization",
            "HubSpot.Ticket_Management",
            "LaunchDarkly.api_key",
            "LaunchDarkly.project"
        ],
        "returned_tools": [
            "Linear.Actions",
            "Linear.API",
            "Linear.Schemas",
            "Linear.Audit_Logs",
            "NanoVMs.Create_Deployment",
            "DevRev.priority_detection",
            "DevRev.ticket_categorization",
            "HubSpot.Ticket_Management",
            "LaunchDarkly.api_key",
            "LaunchDarkly.project"
        ],
        "query": "Create a new action to automatically assign high-priority tickets to the support team in MCP.",
        "response_time": 2151.3020992279053,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "GitHub.ListAvailableToolsets"
        ],
        "matching_tools": [
            "GitHub.ListAvailableToolsets"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetToolsetsTools",
            "GitHub.EnableToolset",
            "Hyperbrowser.bash",
            "GitHub.ListWorkflowRuns",
            "VSCode.vscode_extension_list",
            "VSCode.vscode_task_list",
            "OpsLevel.security/codeql",
            "Logfire.list_python_packages",
            "GitHub.ListWorkflows"
        ],
        "returned_tools": [
            "GitHub.ListAvailableToolsets",
            "GitHub.GetToolsetsTools",
            "GitHub.EnableToolset",
            "Hyperbrowser.bash",
            "GitHub.ListWorkflowRuns",
            "VSCode.vscode_extension_list",
            "VSCode.vscode_task_list",
            "OpsLevel.security/codeql",
            "Logfire.list_python_packages",
            "GitHub.ListWorkflows"
        ],
        "query": "List all toolsets that can be enabled dynamically in the current environment.",
        "response_time": 301.65791511535645,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.86
    },
    {
        "expected_tools": [
            "OctoEverywhere.PrinterMainboard"
        ],
        "matching_tools": [
            "OctoEverywhere.PrinterMainboard"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OctoEverywhere.GCodeTerminal",
            "OctoEverywhere.Knowledge",
            "OctoEverywhere.Printer",
            "OctoEverywhere.System",
            "OctoEverywhere.Timelapse",
            "ThoughtSpot.upgrade",
            "Netdata.netdata_info",
            "OpenSearch.get_cluster_state",
            "ThoughtSpot.license"
        ],
        "returned_tools": [
            "OctoEverywhere.PrinterMainboard",
            "OctoEverywhere.GCodeTerminal",
            "OctoEverywhere.Knowledge",
            "OctoEverywhere.Printer",
            "OctoEverywhere.System",
            "OctoEverywhere.Timelapse",
            "ThoughtSpot.upgrade",
            "Netdata.netdata_info",
            "OpenSearch.get_cluster_state",
            "ThoughtSpot.license"
        ],
        "query": "What is the current firmware version installed on my 3D printer's mainboard?",
        "response_time": 292.8740978240967,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_git_commit"
        ],
        "matching_tools": [
            "VSCode.vscode_git_commit"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_task_run",
            "VSCode.vscode_settings_update",
            "VSCode.vscode_git_status",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_git_diff",
            "VSCode.vscode_git_push",
            "VSCode.vscode_git_log",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_git_pull"
        ],
        "returned_tools": [
            "VSCode.vscode_git_commit",
            "VSCode.vscode_task_run",
            "VSCode.vscode_settings_update",
            "VSCode.vscode_git_status",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_git_diff",
            "VSCode.vscode_git_push",
            "VSCode.vscode_git_log",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_git_pull"
        ],
        "query": "Commit all currently staged changes with the message 'Fix bug in user authentication flow'.",
        "response_time": 320.4522132873535,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Nutrient.GRPC_API"
        ],
        "matching_tools": [
            "Nutrient.GRPC_API"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Nutrient.DWS_MCP_Server",
            "Nutrient.NodeController",
            "Nutrient.REST_API",
            "Nutrient.ResourceController",
            "ZIZAI Recruitment.settings",
            "NanoVMs.Create_Deployment",
            "Nutrient.Health_Checking_Tool",
            "NanoVMs.Delete_Deployment",
            "LaunchDarkly.account"
        ],
        "returned_tools": [
            "Nutrient.GRPC_API",
            "Nutrient.DWS_MCP_Server",
            "Nutrient.NodeController",
            "Nutrient.REST_API",
            "Nutrient.ResourceController",
            "ZIZAI Recruitment.settings",
            "NanoVMs.Create_Deployment",
            "Nutrient.Health_Checking_Tool",
            "NanoVMs.Delete_Deployment",
            "LaunchDarkly.account"
        ],
        "query": "Provision a new MCP server instance with default configuration settings.",
        "response_time": 304.1694164276123,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "Sophtron.GetStatements"
        ],
        "matching_tools": [
            "Sophtron.GetStatements"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Sophtron.GetAccounts",
            "Sophtron.GetTransactions",
            "Sophtron.VerifyAccount",
            "LaunchDarkly.account",
            "Hyperbolic.wikidata",
            "Sophtron.GetHoldings",
            "Netdata.data_query",
            "Sophtron.GetCreditScore",
            "TextIn.invoice_ocr"
        ],
        "returned_tools": [
            "Sophtron.GetStatements",
            "Sophtron.GetAccounts",
            "Sophtron.GetTransactions",
            "Sophtron.VerifyAccount",
            "LaunchDarkly.account",
            "Hyperbolic.wikidata",
            "Sophtron.GetHoldings",
            "Netdata.data_query",
            "Sophtron.GetCreditScore",
            "TextIn.invoice_ocr"
        ],
        "query": "Retrieve all electronic statements for checking account 123456789 from January 1, 2023 to December 31, 2023.",
        "response_time": 316.82825088500977,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Upstash.ZSet"
        ],
        "matching_tools": [
            "Upstash.ZSet"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Upstash.List",
            "Upstash.Set",
            "klusterai.Ordering",
            "Rember.choices",
            "Upstash.PubSub",
            "Upstash.Hash",
            "PlayCanvas.user",
            "Upstash.String",
            "Auth0.Audience_Listing"
        ],
        "returned_tools": [
            "Upstash.ZSet",
            "Upstash.List",
            "Upstash.Set",
            "klusterai.Ordering",
            "Rember.choices",
            "Upstash.PubSub",
            "Upstash.Hash",
            "PlayCanvas.user",
            "Upstash.String",
            "Auth0.Audience_Listing"
        ],
        "query": "List the top 10 players by their scores in the leaderboard.",
        "response_time": 310.31274795532227,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.14
    },
    {
        "expected_tools": [
            "OpenSearch.get_aliases"
        ],
        "matching_tools": [
            "OpenSearch.get_aliases"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpenSearch.index_document",
            "OpenSearch.search",
            "OpenSearch.get_cluster_state",
            "OpenSearch.get_mapping",
            "OpenSearch.bulk",
            "OpenSearch.update_mapping",
            "OpenSearch.analyze_text",
            "OpenSearch.delete_index",
            "OpenSearch.delete_document"
        ],
        "returned_tools": [
            "OpenSearch.get_aliases",
            "OpenSearch.index_document",
            "OpenSearch.search",
            "OpenSearch.get_cluster_state",
            "OpenSearch.get_mapping",
            "OpenSearch.bulk",
            "OpenSearch.update_mapping",
            "OpenSearch.analyze_text",
            "OpenSearch.delete_index",
            "OpenSearch.delete_document"
        ],
        "query": "List all index aliases currently configured in the OpenSearch cluster.",
        "response_time": 344.50435638427734,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "OctoEverywhere.Knowledge"
        ],
        "matching_tools": [
            "OctoEverywhere.Knowledge"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OctoEverywhere.Printer",
            "OctoEverywhere.GCodeTerminal",
            "OctoEverywhere.PrinterMainboard",
            "OctoEverywhere.System",
            "OctoEverywhere.Timelapse",
            "Netdata.data_query",
            "klusterai.Metrics",
            "Drata.Access_Reviews",
            "Auth0.Policies"
        ],
        "returned_tools": [
            "OctoEverywhere.Knowledge",
            "OctoEverywhere.Printer",
            "OctoEverywhere.GCodeTerminal",
            "OctoEverywhere.PrinterMainboard",
            "OctoEverywhere.System",
            "OctoEverywhere.Timelapse",
            "Netdata.data_query",
            "klusterai.Metrics",
            "Drata.Access_Reviews",
            "Auth0.Policies"
        ],
        "query": "What are the main features of OctoEverywhere?",
        "response_time": 293.06769371032715,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.86
    },
    {
        "expected_tools": [
            "CodeLogic.Reporting_Engine"
        ],
        "matching_tools": [
            "CodeLogic.Reporting_Engine"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "CodeLogic.Scanner",
            "CodeLogic.Graph_Generator",
            "CodeLogic.Application_Modeler",
            "CodeLogic.Dataflow_Analyzer",
            "CodeLogic.Dependency_Resolver",
            "Twilio.reporting",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Memgraph_Data_Retriever",
            "Drata.Evidence_Collection"
        ],
        "returned_tools": [
            "CodeLogic.Reporting_Engine",
            "CodeLogic.Scanner",
            "CodeLogic.Graph_Generator",
            "CodeLogic.Application_Modeler",
            "CodeLogic.Dataflow_Analyzer",
            "CodeLogic.Dependency_Resolver",
            "Twilio.reporting",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Memgraph_Data_Retriever",
            "Drata.Evidence_Collection"
        ],
        "query": "Generate a report summarizing the results of the latest codebase scan, including dependency graphs and risk analyses, for the upcoming audit.",
        "response_time": 320.223331451416,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "klusterai.Ordering"
        ],
        "matching_tools": [
            "klusterai.Ordering"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "klusterai.Grouping",
            "klusterai.Filters",
            "klusterai.Profiling",
            "klusterai.Metrics",
            "Rember.choices",
            "klusterai.Joins",
            "Upstash.ZSet",
            "fetchSERP.Google_Shopping",
            "klusterai.Limit"
        ],
        "returned_tools": [
            "klusterai.Ordering",
            "klusterai.Grouping",
            "klusterai.Filters",
            "klusterai.Profiling",
            "klusterai.Metrics",
            "Rember.choices",
            "klusterai.Joins",
            "Upstash.ZSet",
            "fetchSERP.Google_Shopping",
            "klusterai.Limit"
        ],
        "query": "Show me the top 5 products sorted by sales volume in descending order.",
        "response_time": 316.356897354126,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.71
    },
    {
        "expected_tools": [
            "SonarQube.Get_Project_Metrics"
        ],
        "matching_tools": [
            "SonarQube.Get_Project_Metrics"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "SonarQube.Trigger_Project_Analysis",
            "SonarQube.List_Issues",
            "SonarQube.Show_Issue_Details",
            "GitHub.GetCodeScanningAlert",
            "SonarQube.Show_Quality_Gate_Details",
            "GitHub.ListCodeScanningAlerts",
            "SonarQube.List_Projects",
            "Netdata.data_query",
            "OpsLevel.docs/readme"
        ],
        "returned_tools": [
            "SonarQube.Get_Project_Metrics",
            "SonarQube.Trigger_Project_Analysis",
            "SonarQube.List_Issues",
            "SonarQube.Show_Issue_Details",
            "GitHub.GetCodeScanningAlert",
            "SonarQube.Show_Quality_Gate_Details",
            "GitHub.ListCodeScanningAlerts",
            "SonarQube.List_Projects",
            "Netdata.data_query",
            "OpsLevel.docs/readme"
        ],
        "query": "Get the latest code quality metrics, including bugs, vulnerabilities, code smells, coverage, and duplications, for the project named 'MyApp'.",
        "response_time": 305.57751655578613,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Rember.list"
        ],
        "matching_tools": [
            "Rember.list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Rember.compose",
            "Rember.choices",
            "Rember.replace",
            "Yunxin.Recording_-_Playback",
            "Rember.extract",
            "Azure.azmcp_resourcegroup_list",
            "Rember.rewrite",
            "ThoughtSpot.license",
            "Azure.azmcp_kusto_cluster_list"
        ],
        "returned_tools": [
            "Rember.compose",
            "Rember.choices",
            "Rember.replace",
            "Rember.list",
            "Yunxin.Recording_-_Playback",
            "Rember.extract",
            "Azure.azmcp_resourcegroup_list",
            "Rember.rewrite",
            "ThoughtSpot.license",
            "Azure.azmcp_kusto_cluster_list"
        ],
        "query": "List all the features included in the premium subscription plan.",
        "response_time": 376.2016296386719,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 3.0
    },
    {
        "expected_tools": [
            "GitHub.SearchOrgs"
        ],
        "matching_tools": [
            "GitHub.SearchOrgs"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.SearchCode",
            "GitHub.SearchRepositories",
            "GitHub.ListAvailableToolsets",
            "GitHub.RequestCopilotReview",
            "GitHub.SearchPullRequests",
            "GitHub.SearchIssues",
            "GitHub.GetFileContents",
            "GitHub.ForkRepository",
            "GitHub.CreateOrUpdateFile"
        ],
        "returned_tools": [
            "GitHub.SearchOrgs",
            "GitHub.SearchCode",
            "GitHub.SearchRepositories",
            "GitHub.ListAvailableToolsets",
            "GitHub.RequestCopilotReview",
            "GitHub.SearchPullRequests",
            "GitHub.SearchIssues",
            "GitHub.GetFileContents",
            "GitHub.ForkRepository",
            "GitHub.CreateOrUpdateFile"
        ],
        "query": "Find the machine learning org in GitHub",
        "response_time": 305.1719665527344,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Liveblocks.send_user_message"
        ],
        "matching_tools": [
            "Liveblocks.send_user_message"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Tianji.notification",
            "Liveblocks.admin_set_user_roles",
            "Liveblocks.get_user_presence",
            "Liveblocks.admin_get_user_roles",
            "LINE.Confirm",
            "Liveblocks.admin_remove_user_roles",
            "Liveblocks.get_room_info",
            "Liveblocks.list_rooms",
            "Liveblocks.user_kick"
        ],
        "returned_tools": [
            "Liveblocks.send_user_message",
            "Tianji.notification",
            "Liveblocks.admin_set_user_roles",
            "Liveblocks.get_user_presence",
            "Liveblocks.admin_get_user_roles",
            "LINE.Confirm",
            "Liveblocks.admin_remove_user_roles",
            "Liveblocks.get_room_info",
            "Liveblocks.list_rooms",
            "Liveblocks.user_kick"
        ],
        "query": "Send a notification message to user123 informing them that their document has been approved.",
        "response_time": 318.74942779541016,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "SonarQube.Check_Quality_Gate"
        ],
        "matching_tools": [
            "SonarQube.Check_Quality_Gate"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "SonarQube.Show_Quality_Gate_Details",
            "SonarQube.List_Quality_Gates",
            "SonarQube.Trigger_Project_Analysis",
            "SonarQube.Show_Issue_Details",
            "SonarQube.List_Projects",
            "SonarQube.Get_Project_Metrics",
            "SonarQube.List_Issues",
            "CodeLogic.Dependency_Resolver",
            "OpsLevel.code/test"
        ],
        "returned_tools": [
            "SonarQube.Show_Quality_Gate_Details",
            "SonarQube.Check_Quality_Gate",
            "SonarQube.List_Quality_Gates",
            "SonarQube.Trigger_Project_Analysis",
            "SonarQube.Show_Issue_Details",
            "SonarQube.List_Projects",
            "SonarQube.Get_Project_Metrics",
            "SonarQube.List_Issues",
            "CodeLogic.Dependency_Resolver",
            "OpsLevel.code/test"
        ],
        "query": "Check if the 'my-app' project passed the quality gate in SonarQube for the latest build.",
        "response_time": 366.11199378967285,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.86
    },
    {
        "expected_tools": [
            "JFrog.iac_scan"
        ],
        "matching_tools": [
            "JFrog.iac_scan"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "JFrog.secrets_scan",
            "JFrog.container_scan",
            "JFrog.dependency_check",
            "JFrog.license_compliance",
            "Drata.Continuous_Control_Monitoring",
            "JFrog.project_inspect",
            "WaveSpeed.Port_Scan",
            "OpsLevel.security/codeql",
            "SonarQube.Get_Project_Metrics"
        ],
        "returned_tools": [
            "JFrog.iac_scan",
            "JFrog.secrets_scan",
            "JFrog.container_scan",
            "JFrog.dependency_check",
            "JFrog.license_compliance",
            "Drata.Continuous_Control_Monitoring",
            "JFrog.project_inspect",
            "WaveSpeed.Port_Scan",
            "OpsLevel.security/codeql",
            "SonarQube.Get_Project_Metrics"
        ],
        "query": "Scan this Terraform configuration file for any security vulnerabilities or misconfigurations.",
        "response_time": 310.5809688568115,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "fetchSERP.Google_Scholar"
        ],
        "matching_tools": [
            "fetchSERP.Google_Scholar"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "fetchSERP.Google_Search",
            "fetchSERP.Google_Images",
            "fetchSERP.Google_Videos",
            "fetchSERP.Google_Shopping",
            "Memgraph.Memgraph_Cypher_Generator",
            "Memgraph.Cypher_QA_Chain",
            "fetchSERP.Google_News",
            "Memgraph.Memgraph_Data_Retriever",
            "fetchSERP.Google_Maps"
        ],
        "returned_tools": [
            "fetchSERP.Google_Scholar",
            "fetchSERP.Google_Search",
            "fetchSERP.Google_Images",
            "fetchSERP.Google_Videos",
            "fetchSERP.Google_Shopping",
            "Memgraph.Memgraph_Cypher_Generator",
            "Memgraph.Cypher_QA_Chain",
            "fetchSERP.Google_News",
            "Memgraph.Memgraph_Data_Retriever",
            "fetchSERP.Google_Maps"
        ],
        "query": "latest research on machine learning algorithms for natural language processing",
        "response_time": 296.39577865600586,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "LINE.Image"
        ],
        "matching_tools": [
            "LINE.Image"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "LINE.Confirm",
            "LINE.Buttons",
            "LINE.Carousel",
            "Upstash.PubSub",
            "LINE.Echo",
            "VSCode.vscode_copilot_chat_send",
            "Liveblocks.send_user_message",
            "Campertunity.messaging",
            "UnifAI.OCR"
        ],
        "returned_tools": [
            "LINE.Image",
            "LINE.Confirm",
            "LINE.Buttons",
            "LINE.Carousel",
            "Upstash.PubSub",
            "LINE.Echo",
            "VSCode.vscode_copilot_chat_send",
            "Liveblocks.send_user_message",
            "Campertunity.messaging",
            "UnifAI.OCR"
        ],
        "query": "Show me a sample image message that can be sent via the LINE platform.",
        "response_time": 347.05567359924316,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "GitHub.CreateIssue"
        ],
        "matching_tools": [
            "GitHub.CreateIssue"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetIssue",
            "GitHub.UpdateIssue",
            "GitHub.AssignCopilotToIssue",
            "GitHub.SearchIssues",
            "GitHub.GetIssueComments",
            "GitHub.AddIssueComment",
            "GitHub.CreatePullRequest",
            "GitHub.CreateOrUpdateFile",
            "GitHub.CreateRepository"
        ],
        "returned_tools": [
            "GitHub.CreateIssue",
            "GitHub.GetIssue",
            "GitHub.UpdateIssue",
            "GitHub.AssignCopilotToIssue",
            "GitHub.SearchIssues",
            "GitHub.GetIssueComments",
            "GitHub.AddIssueComment",
            "GitHub.CreatePullRequest",
            "GitHub.CreateOrUpdateFile",
            "GitHub.CreateRepository"
        ],
        "query": "Create a new issue in the repository 'octocat/Hello-World' with the title 'Bug: Application crashes on startup' and the description 'Steps to reproduce: 1. Open the app 2. Observe crash. Expected behavior: App should launch successfully.'",
        "response_time": 651.1867046356201,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.57
    },
    {
        "expected_tools": [
            "fetchSERP.Google_Search"
        ],
        "matching_tools": [
            "fetchSERP.Google_Search"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "fetchSERP.Google_Scholar",
            "fetchSERP.Google_Videos",
            "fetchSERP.Google_Images",
            "fetchSERP.Google_News",
            "fetchSERP.Google_Maps",
            "fetchSERP.Google_Shopping",
            "GitHub.ListCommits",
            "Logfire.ask_openai_chat",
            "OpenSearch.index_document"
        ],
        "returned_tools": [
            "fetchSERP.Google_Scholar",
            "fetchSERP.Google_Search",
            "fetchSERP.Google_Videos",
            "fetchSERP.Google_Images",
            "fetchSERP.Google_News",
            "fetchSERP.Google_Maps",
            "fetchSERP.Google_Shopping",
            "GitHub.ListCommits",
            "Logfire.ask_openai_chat",
            "OpenSearch.index_document"
        ],
        "query": "latest advancements in artificial intelligence 2024",
        "response_time": 295.9475517272949,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Hunter.Whois_Lookup"
        ],
        "matching_tools": [
            "Hunter.Whois_Lookup"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "WaveSpeed.Whois",
            "Hunter.DNS_Lookup",
            "Hunter.SSL_Check",
            "Hunter.IP_Lookup",
            "Hunter.Traceroute",
            "Nutrient.Health_Checking_Tool",
            "GitHub.GetMe",
            "Hunter.Ping",
            "Hyperbolic.site_search"
        ],
        "returned_tools": [
            "Hunter.Whois_Lookup",
            "WaveSpeed.Whois",
            "Hunter.DNS_Lookup",
            "Hunter.SSL_Check",
            "Hunter.IP_Lookup",
            "Hunter.Traceroute",
            "Nutrient.Health_Checking_Tool",
            "GitHub.GetMe",
            "Hunter.Ping",
            "Hyperbolic.site_search"
        ],
        "query": "Get the WHOIS registration details for the domain example.com",
        "response_time": 307.92951583862305,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "Azure.azmcp_cosmos_database_list"
        ],
        "matching_tools": [
            "Azure.azmcp_cosmos_database_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_cosmos_account_list",
            "Azure.azmcp_cosmos_container_list",
            "Azure.azmcp_cosmos_database_container_item_query",
            "Azure.azmcp_kusto_database_list",
            "Azure.azmcp_cosmos_database_container_item_insert",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_search_index_query",
            "Azure.azmcp_postgres_server_list"
        ],
        "returned_tools": [
            "Azure.azmcp_cosmos_database_list",
            "Azure.azmcp_cosmos_account_list",
            "Azure.azmcp_cosmos_container_list",
            "Azure.azmcp_cosmos_database_container_item_query",
            "Azure.azmcp_kusto_database_list",
            "Azure.azmcp_cosmos_database_container_item_insert",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_search_index_query",
            "Azure.azmcp_postgres_server_list"
        ],
        "query": "List all databases under the Cosmos DB account named 'my-cosmos-account'.",
        "response_time": 313.6579990386963,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_search_index_create"
        ],
        "matching_tools": [
            "Azure.azmcp_search_index_create"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_search_index_query",
            "OpenSearch.update_mapping",
            "Azure.azmcp_search_service_list",
            "OpenSearch.index_document",
            "Milvus.Index_Management",
            "Upstash.String",
            "Hiveflow.Search",
            "Tianji.search"
        ],
        "returned_tools": [
            "Azure.azmcp_search_index_create",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_search_index_query",
            "OpenSearch.update_mapping",
            "Azure.azmcp_search_service_list",
            "OpenSearch.index_document",
            "Milvus.Index_Management",
            "Upstash.String",
            "Hiveflow.Search",
            "Tianji.search"
        ],
        "query": "Create a new search index for the 'products' collection with fields: product_id (string), name (string), description (string), price (double), and category (string).",
        "response_time": 311.98906898498535,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Logfire.ask_groq_llama3"
        ],
        "matching_tools": [
            "Logfire.ask_groq_llama3"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Logfire.search_python_docs",
            "Logfire.list_python_packages",
            "Logfire.ask_openai_chat",
            "Logfire.ask_chat_google",
            "Logfire.get_function_doc",
            "Logfire.ask_ollama_chat",
            "Nutrient.ResourceController",
            "Hyperbrowser.text_comparison",
            "Netdata.data_query"
        ],
        "returned_tools": [
            "Logfire.search_python_docs",
            "Logfire.ask_groq_llama3",
            "Logfire.list_python_packages",
            "Logfire.ask_openai_chat",
            "Logfire.ask_chat_google",
            "Logfire.get_function_doc",
            "Logfire.ask_ollama_chat",
            "Nutrient.ResourceController",
            "Hyperbrowser.text_comparison",
            "Netdata.data_query"
        ],
        "query": "What are the main differences between renewable and non-renewable energy sources?",
        "response_time": 313.34662437438965,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.43
    },
    {
        "expected_tools": [
            "GitHub.SubmitPendingPullRequestReview"
        ],
        "matching_tools": [
            "GitHub.SubmitPendingPullRequestReview"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.CreatePendingPullRequestReview",
            "GitHub.GetPullRequestReviews",
            "GitHub.RequestCopilotReview",
            "GitHub.SearchPullRequests",
            "GitHub.GetPullRequest",
            "GitHub.ListPullRequests",
            "GitHub.MergePullRequest"
        ],
        "returned_tools": [
            "GitHub.SubmitPendingPullRequestReview",
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.CreatePendingPullRequestReview",
            "GitHub.GetPullRequestReviews",
            "GitHub.RequestCopilotReview",
            "GitHub.SearchPullRequests",
            "GitHub.GetPullRequest",
            "GitHub.ListPullRequests",
            "GitHub.MergePullRequest"
        ],
        "query": "Submit my pending review for pull request #42 in the repository 'octocat/Hello-World'.",
        "response_time": 307.9807758331299,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.GetIssueComments"
        ],
        "matching_tools": [
            "GitHub.GetIssueComments"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetPullRequestComments",
            "GitHub.GetIssue",
            "GitHub.SearchIssues",
            "GitHub.AddIssueComment",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "SonarQube.Show_Issue_Details",
            "GitHub.ListIssues",
            "GitHub.GetFileContents",
            "GitHub.AssignCopilotToIssue"
        ],
        "returned_tools": [
            "GitHub.GetIssueComments",
            "GitHub.GetPullRequestComments",
            "GitHub.GetIssue",
            "GitHub.SearchIssues",
            "GitHub.AddIssueComment",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "SonarQube.Show_Issue_Details",
            "GitHub.ListIssues",
            "GitHub.GetFileContents",
            "GitHub.AssignCopilotToIssue"
        ],
        "query": "Retrieve all comments on issue #42 in the octocat/Hello-World repository.",
        "response_time": 287.77623176574707,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.GetCommit"
        ],
        "matching_tools": [
            "GitHub.GetCommit"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetCodeScanningAlert",
            "GitHub.GetTag",
            "GitHub.GetFileContents",
            "GitHub.GetSecretScanningAlert",
            "GitHub.GetPullRequestDiff",
            "GitHub.ListCommits",
            "GitHub.GetMe",
            "GitHub.GetPullRequestStatus",
            "GitHub.ListTags"
        ],
        "returned_tools": [
            "GitHub.GetCommit",
            "GitHub.GetCodeScanningAlert",
            "GitHub.GetTag",
            "GitHub.GetFileContents",
            "GitHub.GetSecretScanningAlert",
            "GitHub.GetPullRequestDiff",
            "GitHub.ListCommits",
            "GitHub.GetMe",
            "GitHub.GetPullRequestStatus",
            "GitHub.ListTags"
        ],
        "query": "Retrieve the details of the commit with SHA 'a1b2c3d4e5f6g7h8i9j0' in the repository 'octocat/Hello-World'.",
        "response_time": 2103.984832763672,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.29
    },
    {
        "expected_tools": [
            "Twilio.plugin_management"
        ],
        "matching_tools": [
            "Twilio.plugin_management"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Twilio.config_management",
            "ThoughtSpot.upgrade",
            "Twilio.toolbelt",
            "GitHub.UpdateIssue",
            "VSCode.vscode_settings_update",
            "Twilio.access_management",
            "Twilio.project_templates",
            "Linear.Actions",
            "VSCode.vscode_extension_list"
        ],
        "returned_tools": [
            "Twilio.plugin_management",
            "Twilio.config_management",
            "ThoughtSpot.upgrade",
            "Twilio.toolbelt",
            "GitHub.UpdateIssue",
            "VSCode.vscode_settings_update",
            "Twilio.access_management",
            "Twilio.project_templates",
            "Linear.Actions",
            "VSCode.vscode_extension_list"
        ],
        "query": "How do I update all installed Twilio CLI plugins to their latest versions?",
        "response_time": 299.2422580718994,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "Hiveflow.User_-_Access_Management"
        ],
        "matching_tools": [
            "Hiveflow.User_-_Access_Management"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Liveblocks.admin_get_user_roles",
            "LaunchDarkly.user",
            "Hiveflow.Knowledge_Base",
            "Auth0.Permissions",
            "Auth0.Policies",
            "Hiveflow.Workflow_Engine",
            "Hiveflow.Data_Connector",
            "Yunxin.User_Management",
            "Liveblocks.admin_set_user_roles"
        ],
        "returned_tools": [
            "Hiveflow.User_-_Access_Management",
            "Liveblocks.admin_get_user_roles",
            "LaunchDarkly.user",
            "Hiveflow.Knowledge_Base",
            "Auth0.Permissions",
            "Auth0.Policies",
            "Hiveflow.Workflow_Engine",
            "Hiveflow.Data_Connector",
            "Yunxin.User_Management",
            "Liveblocks.admin_set_user_roles"
        ],
        "query": "List all users with admin roles and their current permissions for MCP resources.",
        "response_time": 367.6130771636963,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "Shortcut.List"
        ],
        "matching_tools": [
            "Shortcut.List"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Shortcut.Ask",
            "Shortcut.Update",
            "Shortcut.Create",
            "Shortcut.Summarize",
            "SonarQube.List_Projects",
            "Shortcut.Delete",
            "Shortcut.Comment",
            "VSCode.vscode_workspace_list_folders",
            "HubSpot.CRM_Search"
        ],
        "returned_tools": [
            "Shortcut.Ask",
            "Shortcut.List",
            "Shortcut.Update",
            "Shortcut.Create",
            "Shortcut.Summarize",
            "SonarQube.List_Projects",
            "Shortcut.Delete",
            "Shortcut.Comment",
            "VSCode.vscode_workspace_list_folders",
            "HubSpot.CRM_Search"
        ],
        "query": "List all open stories assigned to me.",
        "response_time": 653.1867980957031,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "LINE.Buttons"
        ],
        "matching_tools": [
            "LINE.Buttons"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Liveblocks.send_user_message",
            "LINE.Confirm",
            "VSCode.vscode_copilot_chat_send",
            "YepCode.rabbitmq",
            "Linear.Actions",
            "LINE.Image",
            "Upstash.PubSub",
            "LINE.Profile",
            "LINE.Carousel"
        ],
        "returned_tools": [
            "LINE.Buttons",
            "Liveblocks.send_user_message",
            "LINE.Confirm",
            "VSCode.vscode_copilot_chat_send",
            "YepCode.rabbitmq",
            "Linear.Actions",
            "LINE.Image",
            "Upstash.PubSub",
            "LINE.Profile",
            "LINE.Carousel"
        ],
        "query": "Send a message to a user with buttons for 'View Profile', 'Settings', and 'Help', each triggering a different action.",
        "response_time": 319.0460205078125,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_workspace_close_folder"
        ],
        "matching_tools": [
            "VSCode.vscode_workspace_close_folder"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_terminal_close",
            "VSCode.vscode_fs_delete_file",
            "VSCode.vscode_workspace_list_folders",
            "VSCode.vscode_workspace_open_folder",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_debug_stop",
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_fs_read_file",
            "GitHub.DeleteFile"
        ],
        "returned_tools": [
            "VSCode.vscode_workspace_close_folder",
            "VSCode.vscode_terminal_close",
            "VSCode.vscode_fs_delete_file",
            "VSCode.vscode_workspace_list_folders",
            "VSCode.vscode_workspace_open_folder",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_debug_stop",
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_fs_read_file",
            "GitHub.DeleteFile"
        ],
        "query": "Close the 'my_project' folder from the current VSCode workspace.",
        "response_time": 289.3640995025635,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Tianji.vote"
        ],
        "matching_tools": [
            "Tianji.vote"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Tianji.comment",
            "Tianji.search",
            "Tianji.notification",
            "Tianji.answer",
            "Tianji.question",
            "AllVoiceLab.QA",
            "Octagon.ask_retrieval",
            "GitHub.AddIssueComment",
            "UnifAI.DocumentQA"
        ],
        "returned_tools": [
            "Tianji.vote",
            "Tianji.comment",
            "Tianji.search",
            "Tianji.notification",
            "Tianji.answer",
            "Tianji.question",
            "AllVoiceLab.QA",
            "Octagon.ask_retrieval",
            "GitHub.AddIssueComment",
            "UnifAI.DocumentQA"
        ],
        "query": "How can I upvote an answer that I found helpful on this platform?",
        "response_time": 284.0094566345215,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 3.0
    },
    {
        "expected_tools": [
            "GitHub.RerunWorkflowRun"
        ],
        "matching_tools": [
            "GitHub.RerunWorkflowRun"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetWorkflowRun",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.RunWorkflow",
            "GitHub.ListWorkflowRuns",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.ListWorkflowRunArtifacts",
            "GitHub.ListWorkflowJobs",
            "GitHub.GetWorkflowRunUsage",
            "GitHub.ListTags"
        ],
        "returned_tools": [
            "GitHub.RerunWorkflowRun",
            "GitHub.GetWorkflowRun",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.RunWorkflow",
            "GitHub.ListWorkflowRuns",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.ListWorkflowRunArtifacts",
            "GitHub.ListWorkflowJobs",
            "GitHub.GetWorkflowRunUsage",
            "GitHub.ListTags"
        ],
        "query": "Rerun the workflow run with ID 123456 in the repository 'octocat/Hello-World'.",
        "response_time": 310.2130889892578,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.86
    },
    {
        "expected_tools": [
            "JFrog.container_scan"
        ],
        "matching_tools": [
            "JFrog.container_scan"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "JFrog.iac_scan",
            "JFrog.secrets_scan",
            "JFrog.dependency_check",
            "JFrog.license_compliance",
            "GitHub.ListSecretScanningAlerts",
            "WaveSpeed.Port_Scan",
            "Nutrient.Health_Checking_Tool",
            "JFrog.project_inspect",
            "OpsLevel.security/codeql"
        ],
        "returned_tools": [
            "JFrog.iac_scan",
            "JFrog.container_scan",
            "JFrog.secrets_scan",
            "JFrog.dependency_check",
            "JFrog.license_compliance",
            "GitHub.ListSecretScanningAlerts",
            "WaveSpeed.Port_Scan",
            "Nutrient.Health_Checking_Tool",
            "JFrog.project_inspect",
            "OpsLevel.security/codeql"
        ],
        "query": "Scan the Docker image 'myapp:latest' for known security vulnerabilities.",
        "response_time": 396.1460590362549,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "GitHub.ListSecretScanningAlerts"
        ],
        "matching_tools": [
            "GitHub.ListSecretScanningAlerts"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.ListCodeScanningAlerts",
            "GitHub.GetSecretScanningAlert",
            "GitHub.GetCodeScanningAlert",
            "JFrog.secrets_scan",
            "GitHub.ListNotifications",
            "GitHub.MarkAllNotificationsRead",
            "OpsLevel.security/codeql",
            "GitHub.SearchCode",
            "GitHub.SearchOrgs"
        ],
        "returned_tools": [
            "GitHub.ListSecretScanningAlerts",
            "GitHub.ListCodeScanningAlerts",
            "GitHub.GetSecretScanningAlert",
            "GitHub.GetCodeScanningAlert",
            "JFrog.secrets_scan",
            "GitHub.ListNotifications",
            "GitHub.MarkAllNotificationsRead",
            "OpsLevel.security/codeql",
            "GitHub.SearchCode",
            "GitHub.SearchOrgs"
        ],
        "query": "List all secret scanning alerts for the repository 'octocat/Hello-World'.",
        "response_time": 322.2341537475586,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.ListTags"
        ],
        "matching_tools": [
            "GitHub.ListTags"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetTag",
            "GitHub.SearchCode",
            "GitHub.CreateOrUpdateFile",
            "SonarQube.List_Projects",
            "GitHub.ListAvailableToolsets",
            "GitHub.ListWorkflowRuns",
            "GitHub.SearchOrgs",
            "GitHub.ListCodeScanningAlerts",
            "CodeLogic.Dependency_Resolver"
        ],
        "returned_tools": [
            "GitHub.ListTags",
            "GitHub.GetTag",
            "GitHub.SearchCode",
            "GitHub.CreateOrUpdateFile",
            "SonarQube.List_Projects",
            "GitHub.ListAvailableToolsets",
            "GitHub.ListWorkflowRuns",
            "GitHub.SearchOrgs",
            "GitHub.ListCodeScanningAlerts",
            "CodeLogic.Dependency_Resolver"
        ],
        "query": "List all tags for the repository 'tensorflow/tensorflow'.",
        "response_time": 292.39606857299805,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "CoinGecko.coin_market_cap"
        ],
        "matching_tools": [
            "CoinGecko.coin_market_cap"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "CoinGecko.coin_market_chart",
            "CoinGecko.coin_price",
            "CoinGecko.exchange_info",
            "CoinGecko.simple_coin_info",
            "CoinGecko.coin_historical_price",
            "OpenSearch.get_mapping",
            "OpenSearch.analyze_text",
            "OctoEverywhere.Knowledge",
            "Nutrient.Health_Checking_Tool"
        ],
        "returned_tools": [
            "CoinGecko.coin_market_cap",
            "CoinGecko.coin_market_chart",
            "CoinGecko.coin_price",
            "CoinGecko.exchange_info",
            "CoinGecko.simple_coin_info",
            "CoinGecko.coin_historical_price",
            "OpenSearch.get_mapping",
            "OpenSearch.analyze_text",
            "OctoEverywhere.Knowledge",
            "Nutrient.Health_Checking_Tool"
        ],
        "query": "What is the current market capitalization of Bitcoin and Ethereum?",
        "response_time": 322.864294052124,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.71
    },
    {
        "expected_tools": [
            "DevRev.sentiment_analysis"
        ],
        "matching_tools": [
            "DevRev.sentiment_analysis"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "DevRev.ticket_categorization",
            "HubSpot.Ticket_Management",
            "DevRev.priority_detection",
            "GitHub.AssignCopilotToIssue",
            "GitHub.CreateIssue",
            "CodeLogic.Dependency_Resolver",
            "DevRev.summarization",
            "DevRev.entity_extraction",
            "DevRev.translation"
        ],
        "returned_tools": [
            "DevRev.sentiment_analysis",
            "DevRev.ticket_categorization",
            "HubSpot.Ticket_Management",
            "DevRev.priority_detection",
            "GitHub.AssignCopilotToIssue",
            "GitHub.CreateIssue",
            "CodeLogic.Dependency_Resolver",
            "DevRev.summarization",
            "DevRev.entity_extraction",
            "DevRev.translation"
        ],
        "query": "Analyze the sentiment of the following customer support ticket: 'I'm really frustrated that my issue hasn't been resolved after multiple attempts. Please fix this as soon as possible.'",
        "response_time": 296.9987392425537,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "Globalping.dns"
        ],
        "matching_tools": [
            "Globalping.dns"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Globalping.ping",
            "Globalping.mtr",
            "WaveSpeed.Ping",
            "Globalping.tcp",
            "Globalping.http",
            "WaveSpeed.Traceroute",
            "WaveSpeed.DNS_Lookup",
            "Hunter.Ping",
            "Globalping.trace"
        ],
        "returned_tools": [
            "Globalping.dns",
            "Globalping.ping",
            "Globalping.mtr",
            "WaveSpeed.Ping",
            "Globalping.tcp",
            "Globalping.http",
            "WaveSpeed.Traceroute",
            "WaveSpeed.DNS_Lookup",
            "Hunter.Ping",
            "Globalping.trace"
        ],
        "query": "Check the propagation status and latency of the 'A' record for example.com from multiple global locations.",
        "response_time": 310.7318878173828,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "SonarQube.List_Issues"
        ],
        "matching_tools": [
            "SonarQube.List_Issues"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "SonarQube.Get_Project_Metrics",
            "SonarQube.Show_Issue_Details",
            "Shortcut.Ask",
            "SonarQube.List_Projects",
            "SonarQube.Show_Quality_Gate_Details",
            "GitHub.ListCodeScanningAlerts",
            "SonarQube.Trigger_Project_Analysis",
            "JFrog.dependency_check",
            "GitHub.ListSecretScanningAlerts"
        ],
        "returned_tools": [
            "SonarQube.List_Issues",
            "SonarQube.Get_Project_Metrics",
            "SonarQube.Show_Issue_Details",
            "Shortcut.Ask",
            "SonarQube.List_Projects",
            "SonarQube.Show_Quality_Gate_Details",
            "GitHub.ListCodeScanningAlerts",
            "SonarQube.Trigger_Project_Analysis",
            "JFrog.dependency_check",
            "GitHub.ListSecretScanningAlerts"
        ],
        "query": "List all open bugs and vulnerabilities for the project 'my-app', sorted by severity in descending order.",
        "response_time": 331.92992210388184,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.57
    },
    {
        "expected_tools": [
            "Liveblocks.admin_remove_user_roles"
        ],
        "matching_tools": [
            "Liveblocks.admin_remove_user_roles"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Liveblocks.admin_set_user_roles",
            "Liveblocks.admin_get_user_roles",
            "Liveblocks.user_kick",
            "Liveblocks.list_rooms",
            "Liveblocks.get_room_info",
            "Yunxin.Permission_-_Role_Management",
            "Liveblocks.get_user_presence",
            "Liveblocks.send_user_message",
            "LaunchDarkly.user"
        ],
        "returned_tools": [
            "Liveblocks.admin_remove_user_roles",
            "Liveblocks.admin_set_user_roles",
            "Liveblocks.admin_get_user_roles",
            "Liveblocks.user_kick",
            "Liveblocks.list_rooms",
            "Liveblocks.get_room_info",
            "Yunxin.Permission_-_Role_Management",
            "Liveblocks.get_user_presence",
            "Liveblocks.send_user_message",
            "LaunchDarkly.user"
        ],
        "query": "Remove the 'moderator' and 'editor' roles from user 'user123' in room 'room456'.",
        "response_time": 292.51885414123535,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_storage_account_list"
        ],
        "matching_tools": [
            "Azure.azmcp_storage_account_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_storage_container_list",
            "Azure.azmcp_cosmos_account_list",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_subscription_list",
            "Azure.azmcp_cosmos_database_list",
            "Azure.azmcp_resourcegroup_list",
            "Azure.azmcp_storage_blob_list",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_cosmos_container_list"
        ],
        "returned_tools": [
            "Azure.azmcp_storage_account_list",
            "Azure.azmcp_storage_container_list",
            "Azure.azmcp_cosmos_account_list",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_subscription_list",
            "Azure.azmcp_cosmos_database_list",
            "Azure.azmcp_resourcegroup_list",
            "Azure.azmcp_storage_blob_list",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_cosmos_container_list"
        ],
        "query": "List all Azure Storage accounts in my subscription.",
        "response_time": 302.89745330810547,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.43
    },
    {
        "expected_tools": [
            "HubSpot.Ticket_Management"
        ],
        "matching_tools": [
            "HubSpot.Ticket_Management"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "HubSpot.CRM_Search",
            "HubSpot.Contact_Insights",
            "DevRev.priority_detection",
            "DevRev.ticket_categorization",
            "HubSpot.Workflow_Insights",
            "HubSpot.Marketing_Email_Analytics",
            "Shortcut.List",
            "GitHub.ListAvailableToolsets",
            "klusterai.Profiling"
        ],
        "returned_tools": [
            "HubSpot.Ticket_Management",
            "HubSpot.CRM_Search",
            "HubSpot.Contact_Insights",
            "DevRev.priority_detection",
            "DevRev.ticket_categorization",
            "HubSpot.Workflow_Insights",
            "HubSpot.Marketing_Email_Analytics",
            "Shortcut.List",
            "GitHub.ListAvailableToolsets",
            "klusterai.Profiling"
        ],
        "query": "Show all open customer service tickets assigned to John Doe with high priority.",
        "response_time": 310.3642463684082,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "UnifAI.OCR"
        ],
        "matching_tools": [
            "UnifAI.OCR"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "TextIn.ocr",
            "TextIn.printer_paper_recognition",
            "UnifAI.ImageDescription",
            "UnifAI.ImageQuestionAnswering",
            "TextIn.table_recognition",
            "UnifAI.DocumentQA",
            "fetchSERP.Google_Images",
            "TextIn.id_ocr",
            "Hyperbrowser.web_browser"
        ],
        "returned_tools": [
            "UnifAI.OCR",
            "TextIn.ocr",
            "TextIn.printer_paper_recognition",
            "UnifAI.ImageDescription",
            "UnifAI.ImageQuestionAnswering",
            "TextIn.table_recognition",
            "UnifAI.DocumentQA",
            "fetchSERP.Google_Images",
            "TextIn.id_ocr",
            "Hyperbrowser.web_browser"
        ],
        "query": "Extract all the text from this scanned image of a handwritten letter.",
        "response_time": 309.9815845489502,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.71
    },
    {
        "expected_tools": [
            "Linear.Computed_Fields"
        ],
        "matching_tools": [
            "Linear.Computed_Fields"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Linear.Schemas",
            "Linear.Data_Loading",
            "Linear.Actions",
            "klusterai.Metrics",
            "OpenSearch.update_mapping",
            "OpenSearch.get_mapping",
            "Azure.azmcp_kusto_query",
            "Zapier.Code_by_Zapier",
            "Memgraph.Visual_Query_Builder"
        ],
        "returned_tools": [
            "Linear.Computed_Fields",
            "Linear.Schemas",
            "Linear.Data_Loading",
            "Linear.Actions",
            "klusterai.Metrics",
            "OpenSearch.update_mapping",
            "OpenSearch.get_mapping",
            "Azure.azmcp_kusto_query",
            "Zapier.Code_by_Zapier",
            "Memgraph.Visual_Query_Builder"
        ],
        "query": "How can I define a field in my database that automatically calculates the total price based on quantity and unit price without storing the value directly?",
        "response_time": 309.02981758117676,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 6.43
    },
    {
        "expected_tools": [
            "Hiveflow.Prompt_Templates"
        ],
        "matching_tools": [
            "Hiveflow.Prompt_Templates"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hiveflow.Workflow_Engine",
            "Hiveflow.Knowledge_Base",
            "Riza.text_completion",
            "Hiveflow.Search",
            "DevRev.summarization",
            "Riza.summarization",
            "AllVoiceLab.Summarizer",
            "Tianji.question",
            "UnifAI.DocumentQA"
        ],
        "returned_tools": [
            "Hiveflow.Prompt_Templates",
            "Hiveflow.Workflow_Engine",
            "Hiveflow.Knowledge_Base",
            "Riza.text_completion",
            "Hiveflow.Search",
            "DevRev.summarization",
            "Riza.summarization",
            "AllVoiceLab.Summarizer",
            "Tianji.question",
            "UnifAI.DocumentQA"
        ],
        "query": "Create a reusable prompt template for summarizing research articles in the field of artificial intelligence.",
        "response_time": 352.9677391052246,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Campertunity.bookCamp"
        ],
        "matching_tools": [
            "Campertunity.bookCamp"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Campertunity.searchCamps",
            "Campertunity.listMyCamps",
            "Campertunity.messaging",
            "Campertunity.reviews",
            "Campertunity.userProfile",
            "Hyperbolic.book_search",
            "ThoughtSpot.license",
            "fetchSERP.Google_Images",
            "Hyperbolic.web_search"
        ],
        "returned_tools": [
            "Campertunity.bookCamp",
            "Campertunity.searchCamps",
            "Campertunity.listMyCamps",
            "Campertunity.messaging",
            "Campertunity.reviews",
            "Campertunity.userProfile",
            "Hyperbolic.book_search",
            "ThoughtSpot.license",
            "fetchSERP.Google_Images",
            "Hyperbolic.web_search"
        ],
        "query": "Book a campsite at Jasper National Park for 2 adults and 1 child from July 15th to July 18th, 2024.",
        "response_time": 2608.5684299468994,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.57
    },
    {
        "expected_tools": [
            "Nutrient.DWS_MCP_Server"
        ],
        "matching_tools": [
            "Nutrient.DWS_MCP_Server"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Nutrient.Health_Checking_Tool",
            "Nutrient.NodeController",
            "OpenSearch.get_cluster_state",
            "Nutrient.REST_API",
            "Nutrient.ResourceController",
            "Nutrient.GRPC_API",
            "ThoughtSpot.cluster",
            "Netdata.data_query",
            "GitHub.GetFileContents"
        ],
        "returned_tools": [
            "Nutrient.Health_Checking_Tool",
            "Nutrient.DWS_MCP_Server",
            "Nutrient.NodeController",
            "OpenSearch.get_cluster_state",
            "Nutrient.REST_API",
            "Nutrient.ResourceController",
            "Nutrient.GRPC_API",
            "ThoughtSpot.cluster",
            "Netdata.data_query",
            "GitHub.GetFileContents"
        ],
        "query": "Retrieve the current health status and configuration of all connected nodes in the Nutrient DWS system.",
        "response_time": 297.4879741668701,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "AllVoiceLab.Document_Analyzer"
        ],
        "matching_tools": [
            "AllVoiceLab.Document_Analyzer"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "AllVoiceLab.QA",
            "AllVoiceLab.Summarizer",
            "AllVoiceLab.Text_to_Speech_TTS",
            "AllVoiceLab.Speech_to_Text_STT",
            "OpsLevel.docs/readme",
            "SonarQube.Show_Issue_Details",
            "AllVoiceLab.Voice_Translation",
            "OpenSearch.search",
            "TextIn.printer_paper_recognition"
        ],
        "returned_tools": [
            "AllVoiceLab.Document_Analyzer",
            "AllVoiceLab.QA",
            "AllVoiceLab.Summarizer",
            "AllVoiceLab.Text_to_Speech_TTS",
            "AllVoiceLab.Speech_to_Text_STT",
            "OpsLevel.docs/readme",
            "SonarQube.Show_Issue_Details",
            "AllVoiceLab.Voice_Translation",
            "OpenSearch.search",
            "TextIn.printer_paper_recognition"
        ],
        "query": "Analyze this research paper to identify its main topics, assess the quality of its content, and outline its structural organization.",
        "response_time": 2277.0822048187256,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "Liveblocks.admin_get_user_roles"
        ],
        "matching_tools": [
            "Liveblocks.admin_get_user_roles"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Liveblocks.admin_set_user_roles",
            "Liveblocks.admin_remove_user_roles",
            "Liveblocks.get_user_presence",
            "Liveblocks.user_kick",
            "Liveblocks.send_user_message",
            "Liveblocks.get_room_info",
            "Liveblocks.list_rooms",
            "LaunchDarkly.user",
            "Yunxin.Permission_-_Role_Management"
        ],
        "returned_tools": [
            "Liveblocks.admin_get_user_roles",
            "Liveblocks.admin_set_user_roles",
            "Liveblocks.admin_remove_user_roles",
            "Liveblocks.get_user_presence",
            "Liveblocks.user_kick",
            "Liveblocks.send_user_message",
            "Liveblocks.get_room_info",
            "Liveblocks.list_rooms",
            "LaunchDarkly.user",
            "Yunxin.Permission_-_Role_Management"
        ],
        "query": "What roles does user 'john.doe@example.com' have in room 'project-alpha'?",
        "response_time": 293.5922145843506,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.GetPullRequestComments"
        ],
        "matching_tools": [
            "GitHub.GetPullRequestComments"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetIssueComments",
            "GitHub.GetPullRequest",
            "GitHub.SearchPullRequests",
            "GitHub.GetPullRequestReviews",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.GetPullRequestStatus",
            "GitHub.GetPullRequestDiff",
            "GitHub.ListPullRequests",
            "GitHub.MergePullRequest"
        ],
        "returned_tools": [
            "GitHub.GetPullRequestComments",
            "GitHub.GetIssueComments",
            "GitHub.GetPullRequest",
            "GitHub.SearchPullRequests",
            "GitHub.GetPullRequestReviews",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.GetPullRequestStatus",
            "GitHub.GetPullRequestDiff",
            "GitHub.ListPullRequests",
            "GitHub.MergePullRequest"
        ],
        "query": "Retrieve all comments on pull request #42 in the repository octocat/Hello-World.",
        "response_time": 511.84940338134766,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.43
    },
    {
        "expected_tools": [
            "NanoVMs.SSH_Management"
        ],
        "matching_tools": [
            "NanoVMs.SSH_Management"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "NanoVMs.Create_Deployment",
            "NanoVMs.Describe_Deployment",
            "Azure.azmcp_keyvault_key_create",
            "NanoVMs.List_Deployments",
            "LaunchDarkly.api_key",
            "NanoVMs.MCP_Image_Management",
            "Cloudinary.mcp_authentication",
            "Azure.azmcp_appconfig_kv_set",
            "LaunchDarkly.user"
        ],
        "returned_tools": [
            "NanoVMs.SSH_Management",
            "NanoVMs.Create_Deployment",
            "NanoVMs.Describe_Deployment",
            "Azure.azmcp_keyvault_key_create",
            "NanoVMs.List_Deployments",
            "LaunchDarkly.api_key",
            "NanoVMs.MCP_Image_Management",
            "Cloudinary.mcp_authentication",
            "Azure.azmcp_appconfig_kv_set",
            "LaunchDarkly.user"
        ],
        "query": "Add a new public SSH key to the MCP deployment for user access.",
        "response_time": 332.8111171722412,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_postgres_database_list"
        ],
        "matching_tools": [
            "Azure.azmcp_postgres_database_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_postgres_server_list",
            "Azure.azmcp_postgres_table_query",
            "Azure.azmcp_resourcegroup_list",
            "Azure.azmcp_kusto_database_list",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_search_index_query",
            "Azure.azmcp_cosmos_database_list",
            "Azure.azmcp_kusto_cluster_list",
            "Azure.azmcp_subscription_list"
        ],
        "returned_tools": [
            "Azure.azmcp_postgres_database_list",
            "Azure.azmcp_postgres_server_list",
            "Azure.azmcp_postgres_table_query",
            "Azure.azmcp_resourcegroup_list",
            "Azure.azmcp_kusto_database_list",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_search_index_query",
            "Azure.azmcp_cosmos_database_list",
            "Azure.azmcp_kusto_cluster_list",
            "Azure.azmcp_subscription_list"
        ],
        "query": "List all databases on the PostgreSQL server named 'my-postgres-server' in the resource group 'my-resource-group'.",
        "response_time": 292.74773597717285,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "WaveSpeed.Port_Scan"
        ],
        "matching_tools": [
            "WaveSpeed.Port_Scan"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "WaveSpeed.Ping",
            "WaveSpeed.Traceroute",
            "Globalping.tcp",
            "WaveSpeed.DNS_Lookup",
            "WaveSpeed.Whois",
            "WaveSpeed.GeoIP",
            "Hunter.Traceroute",
            "Hunter.Ping",
            "Globalping.ping"
        ],
        "returned_tools": [
            "WaveSpeed.Port_Scan",
            "WaveSpeed.Ping",
            "WaveSpeed.Traceroute",
            "Globalping.tcp",
            "WaveSpeed.DNS_Lookup",
            "WaveSpeed.Whois",
            "WaveSpeed.GeoIP",
            "Hunter.Traceroute",
            "Hunter.Ping",
            "Globalping.ping"
        ],
        "query": "Scan the host 192.168.1.10 for open TCP and UDP ports to identify running services.",
        "response_time": 290.9562587738037,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.29
    },
    {
        "expected_tools": [
            "Azure.azmcp_servicebus_queue_list"
        ],
        "matching_tools": [
            "Azure.azmcp_servicebus_queue_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_servicebus_namespace_list",
            "Azure.azmcp_servicebus_message_receive",
            "Azure.azmcp_servicebus_message_send",
            "Azure.azmcp_postgres_server_list",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_search_index_query",
            "Azure.azmcp_postgres_database_list",
            "Azure.azmcp_storage_container_list",
            "Upstash.List"
        ],
        "returned_tools": [
            "Azure.azmcp_servicebus_queue_list",
            "Azure.azmcp_servicebus_namespace_list",
            "Azure.azmcp_servicebus_message_receive",
            "Azure.azmcp_servicebus_message_send",
            "Azure.azmcp_postgres_server_list",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_search_index_query",
            "Azure.azmcp_postgres_database_list",
            "Azure.azmcp_storage_container_list",
            "Upstash.List"
        ],
        "query": "List all queues in the Service Bus namespace 'my-namespace'.",
        "response_time": 300.39072036743164,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "OpenSearch.delete_document"
        ],
        "matching_tools": [
            "OpenSearch.delete_document"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpenSearch.delete_index",
            "OpenSearch.bulk",
            "OpenSearch.index_document",
            "OpenSearch.search",
            "Azure.azmcp_search_index_delete",
            "GitHub.DeleteFile",
            "Azure.azmcp_cosmos_database_container_item_delete",
            "VSCode.vscode_fs_delete_file",
            "Campertunity.userProfile"
        ],
        "returned_tools": [
            "OpenSearch.delete_document",
            "OpenSearch.delete_index",
            "OpenSearch.bulk",
            "OpenSearch.index_document",
            "OpenSearch.search",
            "Azure.azmcp_search_index_delete",
            "GitHub.DeleteFile",
            "Azure.azmcp_cosmos_database_container_item_delete",
            "VSCode.vscode_fs_delete_file",
            "Campertunity.userProfile"
        ],
        "query": "Delete the document with ID '12345' from the 'user_profiles' index due to incorrect user information.",
        "response_time": 385.21528244018555,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.43
    },
    {
        "expected_tools": [
            "OpsLevel.actions/github_actions"
        ],
        "matching_tools": [
            "OpsLevel.actions/github_actions"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpsLevel.code/ci",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.GetWorkflowRun",
            "OpsLevel.code/license",
            "GitHub.ListWorkflowRuns",
            "GitHub.ListWorkflowJobs",
            "OpsLevel.security/codeql",
            "OpsLevel.docs/readme",
            "OpsLevel.docs/contributing"
        ],
        "returned_tools": [
            "OpsLevel.actions/github_actions",
            "OpsLevel.code/ci",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.GetWorkflowRun",
            "OpsLevel.code/license",
            "GitHub.ListWorkflowRuns",
            "GitHub.ListWorkflowJobs",
            "OpsLevel.security/codeql",
            "OpsLevel.docs/readme",
            "OpsLevel.docs/contributing"
        ],
        "query": "Does the repository contain any GitHub Actions workflows, and if so, how many workflow files are present?",
        "response_time": 289.98637199401855,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "GitHub.DeleteFile"
        ],
        "matching_tools": [
            "GitHub.DeleteFile"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_fs_delete_file",
            "Shortcut.Delete",
            "VSCode.vscode_workspace_close_folder",
            "GitHub.CreateOrUpdateFile",
            "GitHub.DeleteWorkflowRunLogs",
            "PlayCanvas.branch",
            "Logfire.search_python_docs",
            "GitHub.DeletePendingPullRequestReview",
            "GitHub.GetFileContents"
        ],
        "returned_tools": [
            "GitHub.DeleteFile",
            "VSCode.vscode_fs_delete_file",
            "Shortcut.Delete",
            "VSCode.vscode_workspace_close_folder",
            "GitHub.CreateOrUpdateFile",
            "GitHub.DeleteWorkflowRunLogs",
            "PlayCanvas.branch",
            "Logfire.search_python_docs",
            "GitHub.DeletePendingPullRequestReview",
            "GitHub.GetFileContents"
        ],
        "query": "Delete the file 'docs/old_readme.md' from the repository 'username/project' on the 'main' branch.",
        "response_time": 313.7516975402832,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.AddIssueComment"
        ],
        "matching_tools": [
            "GitHub.AddIssueComment"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.GetIssueComments",
            "Tianji.comment",
            "GitHub.GetIssue",
            "Shortcut.Comment",
            "GitHub.SearchIssues",
            "GitHub.CreateIssue",
            "GitHub.UpdateIssue",
            "GitHub.AssignCopilotToIssue"
        ],
        "returned_tools": [
            "GitHub.AddIssueComment",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.GetIssueComments",
            "Tianji.comment",
            "GitHub.GetIssue",
            "Shortcut.Comment",
            "GitHub.SearchIssues",
            "GitHub.CreateIssue",
            "GitHub.UpdateIssue",
            "GitHub.AssignCopilotToIssue"
        ],
        "query": "Add a comment to issue #42 in the repository 'octocat/Hello-World' stating that the bug has been reproduced and is being investigated.",
        "response_time": 340.9700393676758,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "LINE.Confirm"
        ],
        "matching_tools": [
            "LINE.Confirm"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "LaunchDarkly.account",
            "Auth0.Policies",
            "Sophtron.GetAccounts",
            "YepCode.redis",
            "PlayCanvas.branch",
            "Shortcut.Delete",
            "LINE.Profile",
            "Sophtron.VerifyAccount",
            "GitHub.DeleteWorkflowRunLogs"
        ],
        "returned_tools": [
            "LaunchDarkly.account",
            "Auth0.Policies",
            "Sophtron.GetAccounts",
            "LINE.Confirm",
            "YepCode.redis",
            "PlayCanvas.branch",
            "Shortcut.Delete",
            "LINE.Profile",
            "Sophtron.VerifyAccount",
            "GitHub.DeleteWorkflowRunLogs"
        ],
        "query": "Would you like to proceed with deleting your account? (Yes/No)",
        "response_time": 277.1880626678467,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 2.29
    },
    {
        "expected_tools": [
            "Memgraph.Export_Data_Tool"
        ],
        "matching_tools": [
            "Memgraph.Export_Data_Tool"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Memgraph.Import_Data_Tool",
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Procedures_Catalog",
            "Memgraph.Query_Runner",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Memgraph_Cypher_Generator"
        ],
        "returned_tools": [
            "Memgraph.Export_Data_Tool",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Procedures_Catalog",
            "Memgraph.Query_Runner",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Memgraph_Cypher_Generator"
        ],
        "query": "Export the entire Memgraph database to a JSON file for backup purposes.",
        "response_time": 328.5069465637207,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.86
    },
    {
        "expected_tools": [
            "Notion.search_databases"
        ],
        "matching_tools": [],
        "missing_tools": [
            "Notion.search_databases"
        ],
        "unexpected_tools": [
            "LaunchDarkly.project",
            "PlayCanvas.branch",
            "PlayCanvas.project",
            "Twilio.project_templates",
            "LaunchDarkly.environment",
            "SonarQube.Trigger_Project_Analysis",
            "Shortcut.Summarize",
            "Notion.create_page",
            "Notion.create_comment",
            "Notion.create_database"
        ],
        "returned_tools": [
            "LaunchDarkly.project",
            "PlayCanvas.branch",
            "PlayCanvas.project",
            "Twilio.project_templates",
            "LaunchDarkly.environment",
            "SonarQube.Trigger_Project_Analysis",
            "Shortcut.Summarize",
            "Notion.create_page",
            "Notion.create_comment",
            "Notion.create_database"
        ],
        "query": "project management templates",
        "response_time": 275.99072456359863,
        "match": false,
        "match_top_1": false,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.0,
        "recall_metric": 0.0,
        "judge_metric": 4.86
    },
    {
        "expected_tools": [
            "Octagon.extract"
        ],
        "matching_tools": [
            "Octagon.extract"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Octagon.ask_retrieval",
            "Octagon.ask_calculator",
            "Octagon.classify",
            "Octagon.summarize",
            "Hyperbrowser.web_browser",
            "Octagon.ask_code",
            "Rember.extract",
            "fetchSERP.Google_News",
            "DevRev.entity_extraction"
        ],
        "returned_tools": [
            "Octagon.extract",
            "Octagon.ask_retrieval",
            "Octagon.ask_calculator",
            "Octagon.classify",
            "Octagon.summarize",
            "Hyperbrowser.web_browser",
            "Octagon.ask_code",
            "Rember.extract",
            "fetchSERP.Google_News",
            "DevRev.entity_extraction"
        ],
        "query": "Extract all dates and names of people mentioned in the following news article.",
        "response_time": 304.09812927246094,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.ListWorkflowRunArtifacts"
        ],
        "matching_tools": [
            "GitHub.ListWorkflowRunArtifacts"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.GetWorkflowRun",
            "GitHub.ListWorkflowRuns",
            "GitHub.GetFileContents",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.ListCommits",
            "GitHub.ListWorkflowJobs",
            "GitHub.RunWorkflow",
            "GitHub.SearchOrgs"
        ],
        "returned_tools": [
            "GitHub.ListWorkflowRunArtifacts",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.GetWorkflowRun",
            "GitHub.ListWorkflowRuns",
            "GitHub.GetFileContents",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.ListCommits",
            "GitHub.ListWorkflowJobs",
            "GitHub.RunWorkflow",
            "GitHub.SearchOrgs"
        ],
        "query": "List all artifacts generated during the latest workflow run for the repository 'octocat/Hello-World'.",
        "response_time": 308.60161781311035,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.29
    },
    {
        "expected_tools": [
            "LaunchDarkly.api_key"
        ],
        "matching_tools": [
            "LaunchDarkly.api_key"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Nutrient.REST_API",
            "LaunchDarkly.account",
            "Azure.azmcp_appconfig_kv_list",
            "LaunchDarkly.project",
            "LaunchDarkly.feature_flag",
            "Azure.azmcp_appconfig_kv_show",
            "Nutrient.GRPC_API",
            "Azure.azmcp_keyvault_key_list",
            "Linear.API"
        ],
        "returned_tools": [
            "LaunchDarkly.api_key",
            "Nutrient.REST_API",
            "LaunchDarkly.account",
            "Azure.azmcp_appconfig_kv_list",
            "LaunchDarkly.project",
            "LaunchDarkly.feature_flag",
            "Azure.azmcp_appconfig_kv_show",
            "Nutrient.GRPC_API",
            "Azure.azmcp_keyvault_key_list",
            "Linear.API"
        ],
        "query": "List all active API keys for the MCP server.",
        "response_time": 292.88172721862793,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "GitHub.SearchRepositories"
        ],
        "matching_tools": [
            "GitHub.SearchRepositories"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetCommit",
            "GitHub.SearchCode",
            "GitHub.ListBranches",
            "GitHub.GetTag",
            "GitHub.CreateBranch",
            "GitHub.ListTags",
            "GitHub.ListAvailableToolsets",
            "GitHub.CreateOrUpdateFile",
            "GitHub.SearchIssues"
        ],
        "returned_tools": [
            "GitHub.GetCommit",
            "GitHub.SearchCode",
            "GitHub.ListBranches",
            "GitHub.GetTag",
            "GitHub.CreateBranch",
            "GitHub.ListTags",
            "GitHub.ListAvailableToolsets",
            "GitHub.CreateOrUpdateFile",
            "GitHub.SearchRepositories",
            "GitHub.SearchIssues"
        ],
        "query": "What repos support machine learning image classification?",
        "response_time": 284.93452072143555,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "Linear.Schemas"
        ],
        "matching_tools": [
            "Linear.Schemas"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Memgraph.Graph_Schema_Viewer",
            "Linear.API",
            "Milvus.Schema_Management",
            "Linear.Permissions",
            "PlayCanvas.entity",
            "Linear.Data_Loading",
            "Linear.Audit_Logs",
            "LaunchDarkly.project",
            "CodeLogic.Application_Modeler"
        ],
        "returned_tools": [
            "Linear.Schemas",
            "Memgraph.Graph_Schema_Viewer",
            "Linear.API",
            "Milvus.Schema_Management",
            "Linear.Permissions",
            "PlayCanvas.entity",
            "Linear.Data_Loading",
            "Linear.Audit_Logs",
            "LaunchDarkly.project",
            "CodeLogic.Application_Modeler"
        ],
        "query": "Define the data schema for a project management system, including entities such as Project, Task, User, and their relationships.",
        "response_time": 300.7354736328125,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 4.57
    },
    {
        "expected_tools": [
            "WaveSpeed.GeoIP"
        ],
        "matching_tools": [
            "WaveSpeed.GeoIP"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "WaveSpeed.DNS_Lookup",
            "WaveSpeed.Ping",
            "WaveSpeed.Whois",
            "Hunter.IP_Lookup",
            "WaveSpeed.Traceroute",
            "Hunter.DNS_Lookup",
            "WaveSpeed.Port_Scan",
            "Globalping.tcp",
            "Hyperbrowser.web_browser"
        ],
        "returned_tools": [
            "WaveSpeed.GeoIP",
            "WaveSpeed.DNS_Lookup",
            "WaveSpeed.Ping",
            "WaveSpeed.Whois",
            "Hunter.IP_Lookup",
            "WaveSpeed.Traceroute",
            "Hunter.DNS_Lookup",
            "WaveSpeed.Port_Scan",
            "Globalping.tcp",
            "Hyperbrowser.web_browser"
        ],
        "query": "Find the geographic location, including country and city, for the IP address 203.0.113.45.",
        "response_time": 313.89737129211426,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_terminal_create"
        ],
        "matching_tools": [
            "VSCode.vscode_terminal_create"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_terminal_run_command",
            "Hyperbrowser.bash",
            "VSCode.vscode_terminal_list",
            "Hyperbolic.terminal",
            "VSCode.vscode_git_create_branch",
            "VSCode.vscode_task_run",
            "GitHub.CreateBranch",
            "VSCode.vscode_git_push",
            "VSCode.vscode_git_commit"
        ],
        "returned_tools": [
            "VSCode.vscode_terminal_create",
            "VSCode.vscode_terminal_run_command",
            "Hyperbrowser.bash",
            "VSCode.vscode_terminal_list",
            "Hyperbolic.terminal",
            "VSCode.vscode_git_create_branch",
            "VSCode.vscode_task_run",
            "GitHub.CreateBranch",
            "VSCode.vscode_git_push",
            "VSCode.vscode_git_commit"
        ],
        "query": "Create a new terminal instance in VSCode to run shell commands.",
        "response_time": 298.35963249206543,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Auth0.Permissions"
        ],
        "matching_tools": [
            "Auth0.Permissions"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Auth0.Policies",
            "Auth0.Entitlements",
            "Auth0.Audience_Listing",
            "Auth0.Resource_Registration",
            "LaunchDarkly.user",
            "Hiveflow.User_-_Access_Management",
            "Liveblocks.admin_get_user_roles",
            "Yunxin.Permission_-_Role_Management",
            "Linear.Permissions"
        ],
        "returned_tools": [
            "Auth0.Permissions",
            "Auth0.Policies",
            "Auth0.Entitlements",
            "Auth0.Audience_Listing",
            "Auth0.Resource_Registration",
            "LaunchDarkly.user",
            "Hiveflow.User_-_Access_Management",
            "Liveblocks.admin_get_user_roles",
            "Yunxin.Permission_-_Role_Management",
            "Linear.Permissions"
        ],
        "query": "List all permissions that can be granted to a user for accessing the project management resource.",
        "response_time": 400.67505836486816,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "LINE.Carousel"
        ],
        "matching_tools": [
            "LINE.Carousel"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "LINE.Buttons",
            "fetchSERP.Google_Shopping",
            "klusterai.Grouping",
            "HubSpot.CRM_Search",
            "klusterai.Ordering",
            "Klaviyo.Catalogs",
            "LINE.Confirm",
            "LINE.Image",
            "OpenSearch.search"
        ],
        "returned_tools": [
            "LINE.Carousel",
            "LINE.Buttons",
            "fetchSERP.Google_Shopping",
            "klusterai.Grouping",
            "HubSpot.CRM_Search",
            "klusterai.Ordering",
            "Klaviyo.Catalogs",
            "LINE.Confirm",
            "LINE.Image",
            "OpenSearch.search"
        ],
        "query": "Show me a carousel of the top 5 trending products with buttons to view details or purchase each one.",
        "response_time": 318.5713291168213,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "NanoVMs.Describe_Deployment"
        ],
        "matching_tools": [
            "NanoVMs.Describe_Deployment"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "NanoVMs.Create_Deployment",
            "NanoVMs.List_Deployments",
            "NanoVMs.MCP_Image_Management",
            "NanoVMs.SSH_Management",
            "NanoVMs.Delete_Deployment",
            "Azure.azmcp_appconfig_account_list",
            "GitHub.GetWorkflowRunUsage",
            "Azure.azmcp_appconfig_kv_show",
            "Azure.azmcp_appconfig_kv_list"
        ],
        "returned_tools": [
            "NanoVMs.Describe_Deployment",
            "NanoVMs.Create_Deployment",
            "NanoVMs.List_Deployments",
            "NanoVMs.MCP_Image_Management",
            "NanoVMs.SSH_Management",
            "NanoVMs.Delete_Deployment",
            "Azure.azmcp_appconfig_account_list",
            "GitHub.GetWorkflowRunUsage",
            "Azure.azmcp_appconfig_kv_show",
            "Azure.azmcp_appconfig_kv_list"
        ],
        "query": "Get detailed information about the current configuration, resource usage, and runtime status of the deployment named 'web-app-prod'.",
        "response_time": 295.076847076416,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Sophtron.GetTransactions"
        ],
        "matching_tools": [
            "Sophtron.GetTransactions"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Sophtron.GetStatements",
            "Sophtron.GetAccounts",
            "Sophtron.VerifyAccount",
            "Hyperbolic.wikidata",
            "LaunchDarkly.account",
            "TextIn.invoice_ocr",
            "Sophtron.GetHoldings",
            "Netdata.data_query",
            "Sophtron.InitiateTransfer"
        ],
        "returned_tools": [
            "Sophtron.GetTransactions",
            "Sophtron.GetStatements",
            "Sophtron.GetAccounts",
            "Sophtron.VerifyAccount",
            "Hyperbolic.wikidata",
            "LaunchDarkly.account",
            "TextIn.invoice_ocr",
            "Sophtron.GetHoldings",
            "Netdata.data_query",
            "Sophtron.InitiateTransfer"
        ],
        "query": "Retrieve all transaction records for account 123456789 from January 1, 2024 to March 31, 2024.",
        "response_time": 331.38322830200195,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Riza.summarization"
        ],
        "matching_tools": [
            "Riza.summarization"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "AllVoiceLab.Summarizer",
            "DevRev.summarization",
            "Riza.classification",
            "Riza.text_completion",
            "Riza.text_editing",
            "Octagon.summarize",
            "Riza.chat",
            "Riza.question_answering",
            "OpenSearch.search"
        ],
        "returned_tools": [
            "Riza.summarization",
            "AllVoiceLab.Summarizer",
            "DevRev.summarization",
            "Riza.classification",
            "Riza.text_completion",
            "Riza.text_editing",
            "Octagon.summarize",
            "Riza.chat",
            "Riza.question_answering",
            "OpenSearch.search"
        ],
        "query": "Summarize the main points from this 10-page research article on climate change impacts.",
        "response_time": 307.9965114593506,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "AWS.Convert_AWS_Step_Functions_Amazon_States_Language_(ASL)_to_YAML"
        ],
        "matching_tools": [
            "AWS.Convert_AWS_Step_Functions_Amazon_States_Language_(ASL)_to_YAML"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "AWS.Convert_AWS_Step_Functions_YAML_to_ASL_JSON",
            "AWS.Convert_CDK_StepFunction_Constructs_to_MCP_YAML",
            "AWS.Local_Simulation_of_Step_Functions_Workflows",
            "AWS.Validate_State_Machine_Definitions",
            "Rember.transform",
            "AWS.Workflow_Coverage_and_Step_Analysis",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Export_Data_Tool",
            "YepCode.webhook"
        ],
        "returned_tools": [
            "AWS.Convert_AWS_Step_Functions_Amazon_States_Language_(ASL)_to_YAML",
            "AWS.Convert_AWS_Step_Functions_YAML_to_ASL_JSON",
            "AWS.Convert_CDK_StepFunction_Constructs_to_MCP_YAML",
            "AWS.Local_Simulation_of_Step_Functions_Workflows",
            "AWS.Validate_State_Machine_Definitions",
            "Rember.transform",
            "AWS.Workflow_Coverage_and_Step_Analysis",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Export_Data_Tool",
            "YepCode.webhook"
        ],
        "query": "Convert the following AWS Step Functions definition from Amazon States Language (ASL) JSON format to YAML format.",
        "response_time": 292.7711009979248,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.29
    },
    {
        "expected_tools": [
            "GitHub.ListIssues"
        ],
        "matching_tools": [
            "GitHub.ListIssues"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetIssue",
            "SonarQube.List_Issues",
            "GitHub.GetIssueComments",
            "GitHub.SearchIssues",
            "GitHub.ListCodeScanningAlerts",
            "VSCode.vscode_task_list",
            "Shortcut.Ask",
            "VSCode.vscode_task_run",
            "GitHub.AssignCopilotToIssue"
        ],
        "returned_tools": [
            "GitHub.GetIssue",
            "SonarQube.List_Issues",
            "GitHub.GetIssueComments",
            "GitHub.SearchIssues",
            "GitHub.ListCodeScanningAlerts",
            "GitHub.ListIssues",
            "VSCode.vscode_task_list",
            "Shortcut.Ask",
            "VSCode.vscode_task_run",
            "GitHub.AssignCopilotToIssue"
        ],
        "query": "List all open issues in the microsoft/vscode repository labeled as 'bug'.",
        "response_time": 282.50718116760254,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_git_status"
        ],
        "matching_tools": [
            "VSCode.vscode_git_status"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_git_log",
            "VSCode.vscode_git_diff",
            "VSCode.vscode_git_branch_list",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_git_pull",
            "VSCode.vscode_git_commit",
            "VSCode.vscode_fs_delete_file",
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_git_push"
        ],
        "returned_tools": [
            "VSCode.vscode_git_status",
            "VSCode.vscode_git_log",
            "VSCode.vscode_git_diff",
            "VSCode.vscode_git_branch_list",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_git_pull",
            "VSCode.vscode_git_commit",
            "VSCode.vscode_fs_delete_file",
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_git_push"
        ],
        "query": "Show the current git status to see which files have been modified, added, or deleted in the working directory and staging area.",
        "response_time": 405.00736236572266,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "Yunxin.Notification_-_Callback"
        ],
        "matching_tools": [
            "Yunxin.Notification_-_Callback"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "YepCode.webhook",
            "Yunxin.Permission_-_Role_Management",
            "Zapier.Webhooks",
            "Yunxin.Media_Control",
            "Yunxin.Room_Management",
            "Yunxin.User_Management",
            "Linear.Webhooks",
            "Yunxin.Statistics_-_Monitoring",
            "Liveblocks.send_user_message"
        ],
        "returned_tools": [
            "Yunxin.Notification_-_Callback",
            "YepCode.webhook",
            "Yunxin.Permission_-_Role_Management",
            "Zapier.Webhooks",
            "Yunxin.Media_Control",
            "Yunxin.Room_Management",
            "Yunxin.User_Management",
            "Linear.Webhooks",
            "Yunxin.Statistics_-_Monitoring",
            "Liveblocks.send_user_message"
        ],
        "query": "How can I set up a webhook to receive notifications when a user leaves a chat room?",
        "response_time": 287.5528335571289,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Klaviyo.Flows"
        ],
        "matching_tools": [
            "Klaviyo.Flows"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Klaviyo.Templates",
            "Klaviyo.Events",
            "Klaviyo.Lists_and_Segments",
            "Zapier.Email_Parser",
            "Klaviyo.Profiles",
            "Auth0.Entitlements",
            "Twilio.project_templates",
            "Tianji.question",
            "Klaviyo.Catalogs"
        ],
        "returned_tools": [
            "Klaviyo.Templates",
            "Klaviyo.Flows",
            "Klaviyo.Events",
            "Klaviyo.Lists_and_Segments",
            "Zapier.Email_Parser",
            "Klaviyo.Profiles",
            "Auth0.Entitlements",
            "Twilio.project_templates",
            "Tianji.question",
            "Klaviyo.Catalogs"
        ],
        "query": "How can I set up an automated welcome email flow for new subscribers in Klaviyo?",
        "response_time": 321.6819763183594,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "TextIn.speech_recognition"
        ],
        "matching_tools": [
            "TextIn.speech_recognition"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "UnifAI.SpeechRecognition",
            "AllVoiceLab.Speech_to_Text_STT",
            "TextIn.ocr",
            "AllVoiceLab.Voice_Translation",
            "TextIn.id_ocr",
            "TextIn.printer_paper_recognition",
            "DevRev.translation",
            "AllVoiceLab.Text_to_Speech_TTS",
            "UnifAI.OCR"
        ],
        "returned_tools": [
            "TextIn.speech_recognition",
            "UnifAI.SpeechRecognition",
            "AllVoiceLab.Speech_to_Text_STT",
            "TextIn.ocr",
            "AllVoiceLab.Voice_Translation",
            "TextIn.id_ocr",
            "TextIn.printer_paper_recognition",
            "DevRev.translation",
            "AllVoiceLab.Text_to_Speech_TTS",
            "UnifAI.OCR"
        ],
        "query": "Transcribe the audio recording of the meeting into written text.",
        "response_time": 367.60473251342773,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "Azure.azmcp_appconfig_kv_lock"
        ],
        "matching_tools": [
            "Azure.azmcp_appconfig_kv_lock"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_appconfig_kv_unlock",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_appconfig_kv_set",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_appconfig_kv_show",
            "Netdata.netdata_config",
            "Azure.azmcp_appconfig_kv_delete",
            "Azure.azmcp_keyvault_key_list",
            "Azure.azmcp_cli_command_run"
        ],
        "returned_tools": [
            "Azure.azmcp_appconfig_kv_lock",
            "Azure.azmcp_appconfig_kv_unlock",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_appconfig_kv_set",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_appconfig_kv_show",
            "Netdata.netdata_config",
            "Azure.azmcp_appconfig_kv_delete",
            "Azure.azmcp_keyvault_key_list",
            "Azure.azmcp_cli_command_run"
        ],
        "query": "Lock the configuration key 'AppSettings:DatabaseConnectionString' in Azure App Configuration to prevent further edits.",
        "response_time": 286.5469455718994,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Hunter.IP_Lookup"
        ],
        "matching_tools": [
            "Hunter.IP_Lookup"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hunter.DNS_Lookup",
            "WaveSpeed.GeoIP",
            "Hunter.Traceroute",
            "WaveSpeed.Whois",
            "Hunter.Whois_Lookup",
            "Hunter.Ping",
            "WaveSpeed.Ping",
            "Globalping.dns",
            "Netdata.system_info"
        ],
        "returned_tools": [
            "Hunter.IP_Lookup",
            "Hunter.DNS_Lookup",
            "WaveSpeed.GeoIP",
            "Hunter.Traceroute",
            "WaveSpeed.Whois",
            "Hunter.Whois_Lookup",
            "Hunter.Ping",
            "WaveSpeed.Ping",
            "Globalping.dns",
            "Netdata.system_info"
        ],
        "query": "Find the geolocation and owner of the IP address 192.168.1.1",
        "response_time": 286.9093418121338,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.71
    },
    {
        "expected_tools": [
            "Tianji.notification"
        ],
        "matching_tools": [
            "Tianji.notification"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Tianji.comment",
            "Liveblocks.send_user_message",
            "Tianji.question",
            "Tianji.answer",
            "Tianji.search",
            "Shortcut.Comment",
            "Notion.create_comment",
            "Tianji.vote",
            "Upstash.PubSub"
        ],
        "returned_tools": [
            "Tianji.notification",
            "Tianji.comment",
            "Liveblocks.send_user_message",
            "Tianji.question",
            "Tianji.answer",
            "Tianji.search",
            "Shortcut.Comment",
            "Notion.create_comment",
            "Tianji.vote",
            "Upstash.PubSub"
        ],
        "query": "Send a notification to user123 about a new comment on their post.",
        "response_time": 323.7922191619873,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.CreateAndSubmitPullRequestReview"
        ],
        "matching_tools": [
            "GitHub.CreateAndSubmitPullRequestReview"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.SubmitPendingPullRequestReview",
            "GitHub.GetPullRequestReviews",
            "GitHub.CreatePendingPullRequestReview",
            "GitHub.RequestCopilotReview",
            "GitHub.GetPullRequestComments",
            "GitHub.GetPullRequest",
            "GitHub.MergePullRequest",
            "GitHub.GetPullRequestStatus"
        ],
        "returned_tools": [
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.SubmitPendingPullRequestReview",
            "GitHub.GetPullRequestReviews",
            "GitHub.CreatePendingPullRequestReview",
            "GitHub.RequestCopilotReview",
            "GitHub.GetPullRequestComments",
            "GitHub.GetPullRequest",
            "GitHub.MergePullRequest",
            "GitHub.GetPullRequestStatus"
        ],
        "query": "Submit a review for pull request #42 in the repository 'octocat/Hello-World' with comments and an approval decision.",
        "response_time": 297.5502014160156,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Netdata.netdata_config"
        ],
        "matching_tools": [
            "Netdata.netdata_config"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Netdata.netdata_info",
            "Netdata.system_info",
            "Netdata.data_query",
            "Netdata.netdata_stats",
            "Netdata.log_tail",
            "Memgraph.Graph_Schema_Viewer",
            "Netdata.alarms_unsilence",
            "Netdata.alarms_silence",
            "Netdata.alarms_list"
        ],
        "returned_tools": [
            "Netdata.netdata_config",
            "Netdata.netdata_info",
            "Netdata.system_info",
            "Netdata.data_query",
            "Netdata.netdata_stats",
            "Netdata.log_tail",
            "Memgraph.Graph_Schema_Viewer",
            "Netdata.alarms_unsilence",
            "Netdata.alarms_silence",
            "Netdata.alarms_list"
        ],
        "query": "Show the complete current Netdata configuration.",
        "response_time": 277.28915214538574,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.29
    },
    {
        "expected_tools": [
            "GitHub.CreateOrUpdateFile"
        ],
        "matching_tools": [
            "GitHub.CreateOrUpdateFile"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_terminal_create",
            "GitHub.CreateRepository",
            "GitHub.CreateBranch",
            "VSCode.vscode_git_create_branch",
            "GitHub.CreatePullRequest",
            "GitHub.ListTags",
            "GitHub.CreateAndSubmitPullRequestReview",
            "OpsLevel.docs/readme",
            "GitHub.PushFiles"
        ],
        "returned_tools": [
            "VSCode.vscode_terminal_create",
            "GitHub.CreateOrUpdateFile",
            "GitHub.CreateRepository",
            "GitHub.CreateBranch",
            "VSCode.vscode_git_create_branch",
            "GitHub.CreatePullRequest",
            "GitHub.ListTags",
            "GitHub.CreateAndSubmitPullRequestReview",
            "OpsLevel.docs/readme",
            "GitHub.PushFiles"
        ],
        "query": "Create a new README.md file in the main branch of the repository 'octocat/Hello-World' with the content 'Welcome to Hello-World!'",
        "response_time": 337.89968490600586,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_servicebus_namespace_list"
        ],
        "matching_tools": [
            "Azure.azmcp_servicebus_namespace_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_servicebus_queue_list",
            "Azure.azmcp_servicebus_message_receive",
            "Azure.azmcp_servicebus_message_send",
            "Azure.azmcp_subscription_list",
            "Azure.azmcp_resourcegroup_list",
            "Azure.azmcp_search_service_list",
            "Azure.azmcp_search_index_list",
            "ThoughtSpot.license",
            "Azure.azmcp_appconfig_kv_list"
        ],
        "returned_tools": [
            "Azure.azmcp_servicebus_namespace_list",
            "Azure.azmcp_servicebus_queue_list",
            "Azure.azmcp_servicebus_message_receive",
            "Azure.azmcp_servicebus_message_send",
            "Azure.azmcp_subscription_list",
            "Azure.azmcp_resourcegroup_list",
            "Azure.azmcp_search_service_list",
            "Azure.azmcp_search_index_list",
            "ThoughtSpot.license",
            "Azure.azmcp_appconfig_kv_list"
        ],
        "query": "List all Service Bus namespaces in my Azure subscription.",
        "response_time": 296.7374324798584,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.29
    },
    {
        "expected_tools": [
            "Logfire.ask_ollama_chat"
        ],
        "matching_tools": [
            "Logfire.ask_ollama_chat"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Logfire.search_python_docs",
            "Logfire.ask_openai_chat",
            "Logfire.list_python_packages",
            "Logfire.ask_groq_llama3",
            "Logfire.ask_chat_google",
            "Logfire.get_function_doc",
            "AWS.Local_Simulation_of_Step_Functions_Workflows",
            "Cloudinary.mcp_logging",
            "Nutrient.Health_Checking_Tool"
        ],
        "returned_tools": [
            "Logfire.search_python_docs",
            "Logfire.ask_ollama_chat",
            "Logfire.ask_openai_chat",
            "Logfire.list_python_packages",
            "Logfire.ask_groq_llama3",
            "Logfire.ask_chat_google",
            "Logfire.get_function_doc",
            "AWS.Local_Simulation_of_Step_Functions_Workflows",
            "Cloudinary.mcp_logging",
            "Nutrient.Health_Checking_Tool"
        ],
        "query": "What are the privacy benefits of using locally hosted AI models compared to cloud-based solutions?",
        "response_time": 477.3263931274414,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 3.43
    },
    {
        "expected_tools": [
            "Linear.Webhooks"
        ],
        "matching_tools": [
            "Linear.Webhooks"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "YepCode.webhook",
            "Linear.Actions",
            "Yunxin.Notification_-_Callback",
            "Zapier.Webhooks",
            "Linear.API",
            "GitHub.RunWorkflow",
            "Twilio.project_templates",
            "Linear.Data_Loading",
            "Linear.Audit_Logs"
        ],
        "returned_tools": [
            "Linear.Webhooks",
            "YepCode.webhook",
            "Linear.Actions",
            "Yunxin.Notification_-_Callback",
            "Zapier.Webhooks",
            "Linear.API",
            "GitHub.RunWorkflow",
            "Twilio.project_templates",
            "Linear.Data_Loading",
            "Linear.Audit_Logs"
        ],
        "query": "How can I set up an HTTP webhook to be triggered when a new issue is created in my Linear workspace?",
        "response_time": 324.83768463134766,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_keyvault_key_delete"
        ],
        "matching_tools": [
            "Azure.azmcp_keyvault_key_delete"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_appconfig_kv_delete",
            "Upstash.String",
            "Upstash.Keys",
            "Azure.azmcp_search_index_delete",
            "Azure.azmcp_keyvault_key_list",
            "Azure.azmcp_keyvault_key_get",
            "Shortcut.Delete",
            "Azure.azmcp_cosmos_database_container_item_delete",
            "Azure.azmcp_appconfig_kv_set"
        ],
        "returned_tools": [
            "Azure.azmcp_keyvault_key_delete",
            "Azure.azmcp_appconfig_kv_delete",
            "Upstash.String",
            "Upstash.Keys",
            "Azure.azmcp_search_index_delete",
            "Azure.azmcp_keyvault_key_list",
            "Azure.azmcp_keyvault_key_get",
            "Shortcut.Delete",
            "Azure.azmcp_cosmos_database_container_item_delete",
            "Azure.azmcp_appconfig_kv_set"
        ],
        "query": "Delete the key named 'MyEncryptionKey' from the Key Vault named 'ProductionSecrets'.",
        "response_time": 339.8268222808838,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.57
    },
    {
        "expected_tools": [
            "Campertunity.searchCamps"
        ],
        "matching_tools": [
            "Campertunity.searchCamps"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Campertunity.bookCamp",
            "Campertunity.listMyCamps",
            "Campertunity.messaging",
            "Campertunity.reviews",
            "Hyperbolic.site_search",
            "Campertunity.userProfile",
            "GitHub.GetMe",
            "Riza.classification",
            "HubSpot.CRM_Search"
        ],
        "returned_tools": [
            "Campertunity.searchCamps",
            "Campertunity.bookCamp",
            "Campertunity.listMyCamps",
            "Campertunity.messaging",
            "Campertunity.reviews",
            "Hyperbolic.site_search",
            "Campertunity.userProfile",
            "GitHub.GetMe",
            "Riza.classification",
            "HubSpot.CRM_Search"
        ],
        "query": "Find available campsites near Banff National Park with lake access and pet-friendly amenities for the weekend of July 15-17, under $100 per night.",
        "response_time": 320.67418098449707,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Hyperbolic.python"
        ],
        "matching_tools": [
            "Hyperbolic.python"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hyperbolic.wikidata",
            "Hyperbolic.terminal",
            "Hyperbolic.web_search",
            "Octagon.ask_calculator",
            "Hyperbolic.book_search",
            "Hyperbolic.site_search",
            "Hyperbrowser.text_comparison",
            "GitHub.GetPullRequestDiff",
            "Hyperbrowser.python"
        ],
        "returned_tools": [
            "Hyperbolic.python",
            "Hyperbolic.wikidata",
            "Hyperbolic.terminal",
            "Hyperbolic.web_search",
            "Octagon.ask_calculator",
            "Hyperbolic.book_search",
            "Hyperbolic.site_search",
            "Hyperbrowser.text_comparison",
            "GitHub.GetPullRequestDiff",
            "Hyperbrowser.python"
        ],
        "query": "Calculate the standard deviation of the following list of numbers: [12, 15, 20, 22, 25].",
        "response_time": 305.35149574279785,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.14
    },
    {
        "expected_tools": [
            "GitHub.PushFiles"
        ],
        "matching_tools": [
            "GitHub.PushFiles"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.CreateOrUpdateFile",
            "GitHub.GetFileContents",
            "GitHub.UpdatePullRequest",
            "VSCode.vscode_git_push",
            "GitHub.MergePullRequest",
            "GitHub.UpdatePullRequestBranch",
            "GitHub.UpdateIssue",
            "GitHub.GetPullRequestFiles",
            "GitHub.ListCommits"
        ],
        "returned_tools": [
            "GitHub.CreateOrUpdateFile",
            "GitHub.PushFiles",
            "GitHub.GetFileContents",
            "GitHub.UpdatePullRequest",
            "VSCode.vscode_git_push",
            "GitHub.MergePullRequest",
            "GitHub.UpdatePullRequestBranch",
            "GitHub.UpdateIssue",
            "GitHub.GetPullRequestFiles",
            "GitHub.ListCommits"
        ],
        "query": "Push the updated README.md and main.py files from my local project directory to the 'feature/update-docs' branch of the 'myusername/myproject' GitHub repository.",
        "response_time": 294.52013969421387,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "WaveSpeed.DNS_Lookup"
        ],
        "matching_tools": [
            "WaveSpeed.DNS_Lookup"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "WaveSpeed.Whois",
            "WaveSpeed.Traceroute",
            "WaveSpeed.GeoIP",
            "WaveSpeed.Port_Scan",
            "WaveSpeed.Ping",
            "Hunter.DNS_Lookup",
            "Globalping.dns",
            "Hunter.Whois_Lookup",
            "Sophtron.GetTransactions"
        ],
        "returned_tools": [
            "WaveSpeed.DNS_Lookup",
            "WaveSpeed.Whois",
            "WaveSpeed.Traceroute",
            "WaveSpeed.GeoIP",
            "WaveSpeed.Port_Scan",
            "WaveSpeed.Ping",
            "Hunter.DNS_Lookup",
            "Globalping.dns",
            "Hunter.Whois_Lookup",
            "Sophtron.GetTransactions"
        ],
        "query": "What are the A and MX records for the domain example.com?",
        "response_time": 313.30180168151855,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "fetchSERP.Google_Images"
        ],
        "matching_tools": [
            "fetchSERP.Google_Images"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "fetchSERP.Google_Videos",
            "fetchSERP.Google_Search",
            "fetchSERP.Google_Scholar",
            "fetchSERP.Google_Maps",
            "fetchSERP.Google_Shopping",
            "fetchSERP.Google_News",
            "GitHub.GetFileContents",
            "Hyperbolic.site_search",
            "OpsLevel.code/license"
        ],
        "returned_tools": [
            "fetchSERP.Google_Videos",
            "fetchSERP.Google_Search",
            "fetchSERP.Google_Images",
            "fetchSERP.Google_Scholar",
            "fetchSERP.Google_Maps",
            "fetchSERP.Google_Shopping",
            "fetchSERP.Google_News",
            "GitHub.GetFileContents",
            "Hyperbolic.site_search",
            "OpsLevel.code/license"
        ],
        "query": "photos of the Eiffel Tower at night",
        "response_time": 288.0589962005615,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.29
    },
    {
        "expected_tools": [
            "ThoughtSpot.admin"
        ],
        "matching_tools": [
            "ThoughtSpot.admin"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "ThoughtSpot.license",
            "ThoughtSpot.upgrade",
            "ThoughtSpot.backup",
            "ThoughtSpot.analytics",
            "ThoughtSpot.cluster",
            "ThoughtSpot.service",
            "GitHub.GetMe",
            "Yunxin.User_Management",
            "Yunxin.Permission_-_Role_Management"
        ],
        "returned_tools": [
            "ThoughtSpot.admin",
            "ThoughtSpot.license",
            "ThoughtSpot.upgrade",
            "ThoughtSpot.backup",
            "ThoughtSpot.analytics",
            "ThoughtSpot.cluster",
            "ThoughtSpot.service",
            "GitHub.GetMe",
            "Yunxin.User_Management",
            "Yunxin.Permission_-_Role_Management"
        ],
        "query": "Reset the password for user 'jdoe'.",
        "response_time": 277.3253917694092,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "Riza.question_answering"
        ],
        "matching_tools": [
            "Riza.question_answering"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Riza.classification",
            "Riza.summarization",
            "Riza.text_editing",
            "Riza.chat",
            "Riza.text_completion",
            "Netdata.data_query",
            "Nutrient.REST_API",
            "Rember.choices",
            "OpsLevel.code/test"
        ],
        "returned_tools": [
            "Riza.classification",
            "Riza.summarization",
            "Riza.text_editing",
            "Riza.chat",
            "Riza.question_answering",
            "Riza.text_completion",
            "Netdata.data_query",
            "Nutrient.REST_API",
            "Rember.choices",
            "OpsLevel.code/test"
        ],
        "query": "What are the main arguments presented in the provided article about climate change?",
        "response_time": 279.54745292663574,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.86
    },
    {
        "expected_tools": [
            "Hyperbrowser.file_manager"
        ],
        "matching_tools": [
            "Hyperbrowser.file_manager"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hyperbrowser.web_browser",
            "Hyperbrowser.bash",
            "Hyperbrowser.python",
            "VSCode.vscode_fs_list_directory",
            "Hyperbrowser.code_editor",
            "Hyperbolic.book_search",
            "SonarQube.List_Projects",
            "VSCode.vscode_workspace_list_folders",
            "Hyperbolic.site_search"
        ],
        "returned_tools": [
            "Hyperbrowser.file_manager",
            "Hyperbrowser.web_browser",
            "Hyperbrowser.bash",
            "Hyperbrowser.python",
            "VSCode.vscode_fs_list_directory",
            "Hyperbrowser.code_editor",
            "Hyperbolic.book_search",
            "SonarQube.List_Projects",
            "VSCode.vscode_workspace_list_folders",
            "Hyperbolic.site_search"
        ],
        "query": "List all files in the 'project_data' directory.",
        "response_time": 308.0873489379883,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 10.0
    },
    {
        "expected_tools": [
            "GitHub.GetPullRequestReviews"
        ],
        "matching_tools": [
            "GitHub.GetPullRequestReviews"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.GetPullRequest",
            "GitHub.SubmitPendingPullRequestReview",
            "GitHub.GetPullRequestComments",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.ListPullRequests",
            "GitHub.MergePullRequest",
            "GitHub.CreatePendingPullRequestReview",
            "GitHub.RequestCopilotReview"
        ],
        "returned_tools": [
            "GitHub.GetPullRequestReviews",
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.GetPullRequest",
            "GitHub.SubmitPendingPullRequestReview",
            "GitHub.GetPullRequestComments",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.ListPullRequests",
            "GitHub.MergePullRequest",
            "GitHub.CreatePendingPullRequestReview",
            "GitHub.RequestCopilotReview"
        ],
        "query": "List all reviews submitted to pull request #42 in the repository octocat/Hello-World.",
        "response_time": 300.17662048339844,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.29
    },
    {
        "expected_tools": [
            "AWS.Convert_AWS_Step_Functions_YAML_to_ASL_JSON"
        ],
        "matching_tools": [
            "AWS.Convert_AWS_Step_Functions_YAML_to_ASL_JSON"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "AWS.Convert_AWS_Step_Functions_Amazon_States_Language_(ASL)_to_YAML",
            "AWS.Local_Simulation_of_Step_Functions_Workflows",
            "AWS.Convert_CDK_StepFunction_Constructs_to_MCP_YAML",
            "AWS.Validate_State_Machine_Definitions",
            "Rember.transform",
            "AWS.Workflow_Coverage_and_Step_Analysis",
            "Shortcut.Update",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Export_Data_Tool"
        ],
        "returned_tools": [
            "AWS.Convert_AWS_Step_Functions_YAML_to_ASL_JSON",
            "AWS.Convert_AWS_Step_Functions_Amazon_States_Language_(ASL)_to_YAML",
            "AWS.Local_Simulation_of_Step_Functions_Workflows",
            "AWS.Convert_CDK_StepFunction_Constructs_to_MCP_YAML",
            "AWS.Validate_State_Machine_Definitions",
            "Rember.transform",
            "AWS.Workflow_Coverage_and_Step_Analysis",
            "Shortcut.Update",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Export_Data_Tool"
        ],
        "query": "Convert the following AWS Step Functions workflow written in YAML to the standard ASL/JSON format for deployment.",
        "response_time": 308.43162536621094,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Cloudinary.mcp_transformations"
        ],
        "matching_tools": [
            "Cloudinary.mcp_transformations"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Cloudinary.mcp_logging",
            "Cloudinary.mcp_upload",
            "Cloudinary.mcp_proxy",
            "Cloudinary.mcp_metadata",
            "NanoVMs.MCP_Image_Management",
            "NanoVMs.Create_Deployment",
            "Cloudinary.mcp_authentication",
            "fetchSERP.Google_Images",
            "Linear.API"
        ],
        "returned_tools": [
            "Cloudinary.mcp_transformations",
            "Cloudinary.mcp_logging",
            "Cloudinary.mcp_upload",
            "Cloudinary.mcp_proxy",
            "Cloudinary.mcp_metadata",
            "NanoVMs.MCP_Image_Management",
            "NanoVMs.Create_Deployment",
            "Cloudinary.mcp_authentication",
            "fetchSERP.Google_Images",
            "Linear.API"
        ],
        "query": "How can I resize an image to 800x600 pixels and apply a grayscale filter using Cloudinary MCP transformations?",
        "response_time": 319.07081604003906,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Rember.transform"
        ],
        "matching_tools": [
            "Rember.transform"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Memgraph.Import_Data_Tool",
            "Rember.compose",
            "Rember.extract",
            "Memgraph.Export_Data_Tool",
            "Rember.list",
            "TextIn.table_recognition",
            "Rember.choices",
            "Rember.replace",
            "Rember.rewrite"
        ],
        "returned_tools": [
            "Rember.transform",
            "Memgraph.Import_Data_Tool",
            "Rember.compose",
            "Rember.extract",
            "Memgraph.Export_Data_Tool",
            "Rember.list",
            "TextIn.table_recognition",
            "Rember.choices",
            "Rember.replace",
            "Rember.rewrite"
        ],
        "query": "Convert the following JSON data into CSV format: [{\"name\": \"Alice\", \"age\": 30}, {\"name\": \"Bob\", \"age\": 25}].",
        "response_time": 283.10179710388184,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 5.71
    },
    {
        "expected_tools": [
            "Linear.Data_Loading"
        ],
        "matching_tools": [
            "Linear.Data_Loading"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Memgraph.Import_Data_Tool",
            "Milvus.Data_Import_Export",
            "Linear.Computed_Fields",
            "OpenSearch.bulk",
            "TextIn.table_recognition",
            "Linear.Schemas",
            "Linear.Actions",
            "VSCode.vscode_fs_read_file",
            "Linear.API"
        ],
        "returned_tools": [
            "Memgraph.Import_Data_Tool",
            "Linear.Data_Loading",
            "Milvus.Data_Import_Export",
            "Linear.Computed_Fields",
            "OpenSearch.bulk",
            "TextIn.table_recognition",
            "Linear.Schemas",
            "Linear.Actions",
            "VSCode.vscode_fs_read_file",
            "Linear.API"
        ],
        "query": "How can I bulk import a CSV file containing user data into the system?",
        "response_time": 302.7350902557373,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 6.0
    },
    {
        "expected_tools": [
            "Notion.get_block"
        ],
        "matching_tools": [
            "Notion.get_block"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Notion.get_database",
            "Notion.search_blocks",
            "GitHub.GetFileContents",
            "GitHub.GetCommit",
            "Notion.get_user",
            "Notion.search_databases",
            "Notion.query_database",
            "Notion.update_database",
            "GitHub.GetCodeScanningAlert"
        ],
        "returned_tools": [
            "Notion.get_block",
            "Notion.get_database",
            "Notion.search_blocks",
            "GitHub.GetFileContents",
            "GitHub.GetCommit",
            "Notion.get_user",
            "Notion.search_databases",
            "Notion.query_database",
            "Notion.update_database",
            "GitHub.GetCodeScanningAlert"
        ],
        "query": "Retrieve the details of the Notion block with the ID 'b3f2c4e1-8a2d-4e5b-9c3d-2d1a7e6f5b4c'.",
        "response_time": 806.5032958984375,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Campertunity.userProfile"
        ],
        "matching_tools": [
            "Campertunity.userProfile"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Campertunity.messaging",
            "Campertunity.bookCamp",
            "Campertunity.reviews",
            "Campertunity.searchCamps",
            "Campertunity.listMyCamps",
            "Cloudinary.mcp_logging",
            "klusterai.Profiling",
            "Liveblocks.get_room_info",
            "klusterai.Grouping"
        ],
        "returned_tools": [
            "Campertunity.userProfile",
            "Campertunity.messaging",
            "Campertunity.bookCamp",
            "Campertunity.reviews",
            "Campertunity.searchCamps",
            "Campertunity.listMyCamps",
            "Cloudinary.mcp_logging",
            "klusterai.Profiling",
            "Liveblocks.get_room_info",
            "klusterai.Grouping"
        ],
        "query": "Show my booking history and saved favorite campsites.",
        "response_time": 287.43839263916016,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 6.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_cosmos_account_list"
        ],
        "matching_tools": [
            "Azure.azmcp_cosmos_account_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_cosmos_database_list",
            "Azure.azmcp_cosmos_container_list",
            "Azure.azmcp_cosmos_database_container_item_query",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_cosmos_database_container_item_insert",
            "Azure.azmcp_kusto_database_list",
            "Azure.azmcp_subscription_list",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_search_index_list"
        ],
        "returned_tools": [
            "Azure.azmcp_cosmos_account_list",
            "Azure.azmcp_cosmos_database_list",
            "Azure.azmcp_cosmos_container_list",
            "Azure.azmcp_cosmos_database_container_item_query",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_cosmos_database_container_item_insert",
            "Azure.azmcp_kusto_database_list",
            "Azure.azmcp_subscription_list",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_search_index_list"
        ],
        "query": "List all available Cosmos DB accounts in my Azure subscription.",
        "response_time": 284.98315811157227,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Drata.Policy_Management"
        ],
        "matching_tools": [
            "Drata.Policy_Management"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Drata.Access_Reviews",
            "Drata.Evidence_Collection",
            "Auth0.Policies",
            "Drata.Vendor_Risk_Management",
            "Drata.Continuous_Control_Monitoring",
            "Drata.Asset_Inventory",
            "Auth0.Audience_Listing",
            "Liveblocks.admin_get_user_roles",
            "GitHub.GetMe"
        ],
        "returned_tools": [
            "Drata.Policy_Management",
            "Drata.Access_Reviews",
            "Drata.Evidence_Collection",
            "Auth0.Policies",
            "Drata.Vendor_Risk_Management",
            "Drata.Continuous_Control_Monitoring",
            "Drata.Asset_Inventory",
            "Auth0.Audience_Listing",
            "Liveblocks.admin_get_user_roles",
            "GitHub.GetMe"
        ],
        "query": "Show me the current list of published security policies and which employees have acknowledged them.",
        "response_time": 301.2816905975342,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 6.86
    },
    {
        "expected_tools": [
            "LaunchDarkly.project"
        ],
        "matching_tools": [
            "LaunchDarkly.project"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "NanoVMs.Create_Deployment",
            "LaunchDarkly.user",
            "LaunchDarkly.api_key",
            "LaunchDarkly.environment",
            "LaunchDarkly.account",
            "LaunchDarkly.feature_flag",
            "Linear.Actions",
            "Klaviyo.Profiles",
            "Twilio.project_templates"
        ],
        "returned_tools": [
            "LaunchDarkly.project",
            "NanoVMs.Create_Deployment",
            "LaunchDarkly.user",
            "LaunchDarkly.api_key",
            "LaunchDarkly.environment",
            "LaunchDarkly.account",
            "LaunchDarkly.feature_flag",
            "Linear.Actions",
            "Klaviyo.Profiles",
            "Twilio.project_templates"
        ],
        "query": "Create a new project in MCP named 'UserAnalytics' with a description 'Project for tracking user analytics data'.",
        "response_time": 292.45996475219727,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 0.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_editor_get_selection"
        ],
        "matching_tools": [
            "VSCode.vscode_editor_get_selection"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_editor_replace_selection",
            "VSCode.vscode_editor_insert_text",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_fs_write_file",
            "Hyperbrowser.code_editor",
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_editor_format_document",
            "VSCode.vscode_workspace_list_folders"
        ],
        "returned_tools": [
            "VSCode.vscode_editor_get_selection",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_editor_replace_selection",
            "VSCode.vscode_editor_insert_text",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_fs_write_file",
            "Hyperbrowser.code_editor",
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_editor_format_document",
            "VSCode.vscode_workspace_list_folders"
        ],
        "query": "What is the currently selected text in the active VSCode editor window?",
        "response_time": 308.6230754852295,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.71
    },
    {
        "expected_tools": [
            "Notion.update_database"
        ],
        "matching_tools": [
            "Notion.update_database"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.UpdateIssue",
            "LaunchDarkly.project",
            "Notion.search_databases",
            "OpenSearch.update_mapping",
            "Notion.create_database",
            "Shortcut.Update",
            "Notion.get_database",
            "Notion.search_blocks",
            "SonarQube.Trigger_Project_Analysis"
        ],
        "returned_tools": [
            "Notion.update_database",
            "GitHub.UpdateIssue",
            "LaunchDarkly.project",
            "Notion.search_databases",
            "OpenSearch.update_mapping",
            "Notion.create_database",
            "Shortcut.Update",
            "Notion.get_database",
            "Notion.search_blocks",
            "SonarQube.Trigger_Project_Analysis"
        ],
        "query": "Update the title and description of the 'Project Tasks' database to reflect the new project scope and objectives.",
        "response_time": 333.96267890930176,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_appconfig_kv_set"
        ],
        "matching_tools": [
            "Azure.azmcp_appconfig_kv_set"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_appconfig_kv_show",
            "LaunchDarkly.feature_flag",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_appconfig_account_list",
            "Nutrient.NodeController",
            "Azure.azmcp_keyvault_key_get",
            "Azure.azmcp_keyvault_key_list",
            "Azure.azmcp_appconfig_kv_lock",
            "VSCode.vscode_settings_update"
        ],
        "returned_tools": [
            "Azure.azmcp_appconfig_kv_set",
            "Azure.azmcp_appconfig_kv_show",
            "LaunchDarkly.feature_flag",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_appconfig_account_list",
            "Nutrient.NodeController",
            "Azure.azmcp_keyvault_key_get",
            "Azure.azmcp_keyvault_key_list",
            "Azure.azmcp_appconfig_kv_lock",
            "VSCode.vscode_settings_update"
        ],
        "query": "Update the value of the key 'AppTheme' to 'DarkMode' in the Azure App Configuration store.",
        "response_time": 383.0282688140869,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_monitor_query_metrics"
        ],
        "matching_tools": [
            "Azure.azmcp_monitor_query_metrics"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Netdata.netdata_stats",
            "Netdata.data_query",
            "Azure.azmcp_search_index_query",
            "Azure.azmcp_search_service_list",
            "Azure.azmcp_appconfig_kv_show",
            "Azure.azmcp_monitor_query_logs",
            "Azure.azmcp_keyvault_key_get",
            "NanoVMs.Describe_Deployment",
            "Azure.azmcp_appconfig_kv_list"
        ],
        "returned_tools": [
            "Netdata.netdata_stats",
            "Netdata.data_query",
            "Azure.azmcp_monitor_query_metrics",
            "Azure.azmcp_search_index_query",
            "Azure.azmcp_search_service_list",
            "Azure.azmcp_appconfig_kv_show",
            "Azure.azmcp_monitor_query_logs",
            "Azure.azmcp_keyvault_key_get",
            "NanoVMs.Describe_Deployment",
            "Azure.azmcp_appconfig_kv_list"
        ],
        "query": "Retrieve the current CPU and memory usage metrics for the virtual machine named 'prod-webserver-01' in the 'East US' region for the past 30 minutes.",
        "response_time": 310.1305961608887,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.71
    },
    {
        "expected_tools": [
            "OpsLevel.security/codeql"
        ],
        "matching_tools": [
            "OpsLevel.security/codeql"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpsLevel.code/license",
            "OpsLevel.code/ci",
            "OpsLevel.actions/github_actions",
            "OpsLevel.docs/readme",
            "OpsLevel.code/test",
            "GitHub.ListAvailableToolsets",
            "GitHub.GetCodeScanningAlert",
            "OpsLevel.docs/contributing",
            "GitHub.ListCodeScanningAlerts"
        ],
        "returned_tools": [
            "OpsLevel.security/codeql",
            "OpsLevel.code/license",
            "OpsLevel.code/ci",
            "OpsLevel.actions/github_actions",
            "OpsLevel.docs/readme",
            "OpsLevel.code/test",
            "GitHub.ListAvailableToolsets",
            "GitHub.GetCodeScanningAlert",
            "OpsLevel.docs/contributing",
            "GitHub.ListCodeScanningAlerts"
        ],
        "query": "Is GitHub CodeQL static analysis security scanning configured and enabled for this repository?",
        "response_time": 318.0422782897949,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Hunter.Ping"
        ],
        "matching_tools": [
            "Hunter.Ping"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "WaveSpeed.Ping",
            "Globalping.ping",
            "Globalping.dns",
            "WaveSpeed.Port_Scan",
            "Globalping.mtr",
            "WaveSpeed.Traceroute",
            "Hunter.DNS_Lookup",
            "Hunter.Traceroute",
            "Globalping.tcp"
        ],
        "returned_tools": [
            "WaveSpeed.Ping",
            "Hunter.Ping",
            "Globalping.ping",
            "Globalping.dns",
            "WaveSpeed.Port_Scan",
            "Globalping.mtr",
            "WaveSpeed.Traceroute",
            "Hunter.DNS_Lookup",
            "Hunter.Traceroute",
            "Globalping.tcp"
        ],
        "query": "Ping google.com to check if the host is reachable and measure network latency.",
        "response_time": 303.07817459106445,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 10.0
    },
    {
        "expected_tools": [
            "ThoughtSpot.analytics"
        ],
        "matching_tools": [
            "ThoughtSpot.analytics"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "CodeLogic.Reporting_Engine",
            "ThoughtSpot.backup",
            "ThoughtSpot.upgrade",
            "ThoughtSpot.license",
            "ThoughtSpot.admin",
            "AllVoiceLab.Summarizer",
            "Twilio.reporting",
            "klusterai.Grouping",
            "klusterai.Profiling"
        ],
        "returned_tools": [
            "ThoughtSpot.analytics",
            "CodeLogic.Reporting_Engine",
            "ThoughtSpot.backup",
            "ThoughtSpot.upgrade",
            "ThoughtSpot.license",
            "ThoughtSpot.admin",
            "AllVoiceLab.Summarizer",
            "Twilio.reporting",
            "klusterai.Grouping",
            "klusterai.Profiling"
        ],
        "query": "Generate a report showing monthly sales trends for the past year segmented by product category.",
        "response_time": 295.7437038421631,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_appconfig_kv_unlock"
        ],
        "matching_tools": [
            "Azure.azmcp_appconfig_kv_unlock"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "LaunchDarkly.feature_flag",
            "Azure.azmcp_appconfig_kv_show",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_appconfig_kv_lock",
            "Azure.azmcp_appconfig_kv_set",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_keyvault_key_get",
            "Azure.azmcp_keyvault_key_list",
            "Azure.azmcp_cli_command_run"
        ],
        "returned_tools": [
            "LaunchDarkly.feature_flag",
            "Azure.azmcp_appconfig_kv_unlock",
            "Azure.azmcp_appconfig_kv_show",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_appconfig_kv_lock",
            "Azure.azmcp_appconfig_kv_set",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_keyvault_key_get",
            "Azure.azmcp_keyvault_key_list",
            "Azure.azmcp_cli_command_run"
        ],
        "query": "Unlock the key 'AppSettings:FeatureFlag' in the Azure App Configuration store.",
        "response_time": 655.332088470459,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Auth0.Resource_Registration"
        ],
        "matching_tools": [
            "Auth0.Resource_Registration"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Auth0.Entitlements",
            "Auth0.Policies",
            "Auth0.Permissions",
            "Auth0.Identities",
            "Nutrient.REST_API",
            "LaunchDarkly.api_key",
            "Cloudinary.mcp_authentication",
            "Linear.API",
            "Azure.azmcp_search_index_create"
        ],
        "returned_tools": [
            "Auth0.Resource_Registration",
            "Auth0.Entitlements",
            "Auth0.Policies",
            "Auth0.Permissions",
            "Auth0.Identities",
            "Nutrient.REST_API",
            "LaunchDarkly.api_key",
            "Cloudinary.mcp_authentication",
            "Linear.API",
            "Azure.azmcp_search_index_create"
        ],
        "query": "Register a new API endpoint for controlled access using Auth0.",
        "response_time": 308.3994388580322,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Milvus.Data_Import_Export"
        ],
        "matching_tools": [
            "Milvus.Data_Import_Export"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Memgraph.Import_Data_Tool",
            "Milvus.Schema_Management",
            "Milvus.Search_and_Query",
            "Milvus.Index_Management",
            "Milvus.Collection_Management",
            "Linear.Data_Loading",
            "Milvus.Partition_Management",
            "TextIn.table_recognition",
            "OpenSearch.bulk"
        ],
        "returned_tools": [
            "Milvus.Data_Import_Export",
            "Memgraph.Import_Data_Tool",
            "Milvus.Schema_Management",
            "Milvus.Search_and_Query",
            "Milvus.Index_Management",
            "Milvus.Collection_Management",
            "Linear.Data_Loading",
            "Milvus.Partition_Management",
            "TextIn.table_recognition",
            "OpenSearch.bulk"
        ],
        "query": "How can I bulk import a CSV file containing 1 million vector embeddings into my Milvus collection and monitor the import progress?",
        "response_time": 300.5096912384033,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.14
    },
    {
        "expected_tools": [
            "Rember.replace"
        ],
        "matching_tools": [
            "Rember.replace"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Rember.rewrite",
            "Rember.compose",
            "Rember.choices",
            "Rember.list",
            "Rember.extract",
            "Riza.text_editing",
            "Rember.transform",
            "VSCode.vscode_editor_replace_selection",
            "VSCode.vscode_editor_insert_text"
        ],
        "returned_tools": [
            "Rember.replace",
            "Rember.rewrite",
            "Rember.compose",
            "Rember.choices",
            "Rember.list",
            "Rember.extract",
            "Riza.text_editing",
            "Rember.transform",
            "VSCode.vscode_editor_replace_selection",
            "VSCode.vscode_editor_insert_text"
        ],
        "query": "Replace all occurrences of the word 'dog' with 'cat' in the sentence: 'The dog chased the dog around the yard.'",
        "response_time": 401.9339084625244,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.86
    },
    {
        "expected_tools": [
            "UnifAI.SpeechRecognition"
        ],
        "matching_tools": [
            "UnifAI.SpeechRecognition"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "AllVoiceLab.Speech_to_Text_STT",
            "TextIn.speech_recognition",
            "AllVoiceLab.Voice_Translation",
            "UnifAI.OCR",
            "DevRev.translation",
            "UnifAI.DocumentQA",
            "AllVoiceLab.Text_to_Speech_TTS",
            "Yunxin.Recording_-_Playback",
            "UnifAI.Ask"
        ],
        "returned_tools": [
            "UnifAI.SpeechRecognition",
            "AllVoiceLab.Speech_to_Text_STT",
            "TextIn.speech_recognition",
            "AllVoiceLab.Voice_Translation",
            "UnifAI.OCR",
            "DevRev.translation",
            "UnifAI.DocumentQA",
            "AllVoiceLab.Text_to_Speech_TTS",
            "Yunxin.Recording_-_Playback",
            "UnifAI.Ask"
        ],
        "query": "Transcribe the audio recording of the recent team meeting into written text.",
        "response_time": 298.08878898620605,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "JFrog.license_compliance"
        ],
        "matching_tools": [
            "JFrog.license_compliance"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "JFrog.dependency_check",
            "OpsLevel.code/license",
            "JFrog.iac_scan",
            "JFrog.container_scan",
            "JFrog.secrets_scan",
            "ThoughtSpot.license",
            "JFrog.project_inspect",
            "SonarQube.List_Issues",
            "GitHub.SearchIssues"
        ],
        "returned_tools": [
            "JFrog.license_compliance",
            "JFrog.dependency_check",
            "OpsLevel.code/license",
            "JFrog.iac_scan",
            "JFrog.container_scan",
            "JFrog.secrets_scan",
            "ThoughtSpot.license",
            "JFrog.project_inspect",
            "SonarQube.List_Issues",
            "GitHub.SearchIssues"
        ],
        "query": "Check if all dependencies in the current project comply with the approved open-source license list and flag any that may cause legal issues.",
        "response_time": 473.1135368347168,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "klusterai.Filters"
        ],
        "matching_tools": [
            "klusterai.Filters"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "klusterai.Ordering",
            "klusterai.Grouping",
            "klusterai.Joins",
            "klusterai.Profiling",
            "klusterai.Metrics",
            "klusterai.Limit",
            "Sophtron.GetTransactions",
            "Klaviyo.Events",
            "HubSpot.Deal_Pipeline_Overview"
        ],
        "returned_tools": [
            "klusterai.Ordering",
            "klusterai.Grouping",
            "klusterai.Filters",
            "klusterai.Joins",
            "klusterai.Profiling",
            "klusterai.Metrics",
            "klusterai.Limit",
            "Sophtron.GetTransactions",
            "Klaviyo.Events",
            "HubSpot.Deal_Pipeline_Overview"
        ],
        "query": "Show all sales transactions from the last quarter where the product category is 'Electronics' and the sales amount is greater than $500.",
        "response_time": 324.25546646118164,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "Memgraph.Graph_Schema_Viewer"
        ],
        "matching_tools": [
            "Memgraph.Graph_Schema_Viewer"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Query_Runner",
            "Memgraph.Export_Data_Tool",
            "Linear.Schemas",
            "Memgraph.Procedures_Catalog"
        ],
        "returned_tools": [
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Query_Runner",
            "Memgraph.Export_Data_Tool",
            "Linear.Schemas",
            "Memgraph.Procedures_Catalog"
        ],
        "query": "Show me the current schema of the database, including all node labels and their relationships.",
        "response_time": 303.0393123626709,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Notion.search_blocks"
        ],
        "matching_tools": [
            "Notion.search_blocks"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Notion.get_block",
            "Notion.create_comment",
            "Notion.search_databases",
            "Notion.get_database",
            "Notion.search_users",
            "Notion.query_database",
            "Notion.update_database",
            "LaunchDarkly.project",
            "Notion.create_database"
        ],
        "returned_tools": [
            "Notion.search_blocks",
            "Notion.get_block",
            "Notion.create_comment",
            "Notion.search_databases",
            "Notion.get_database",
            "Notion.search_users",
            "Notion.query_database",
            "Notion.update_database",
            "LaunchDarkly.project",
            "Notion.create_database"
        ],
        "query": "Find all Notion blocks containing the keyword 'project deadline'.",
        "response_time": 607.9161167144775,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Notion.create_database"
        ],
        "matching_tools": [
            "Notion.create_database"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "SonarQube.Trigger_Project_Analysis",
            "Notion.create_page",
            "Shortcut.Summarize",
            "Notion.search_databases",
            "GitHub.CreateBranch",
            "Notion.query_database",
            "Notion.update_database",
            "Notion.get_database",
            "LaunchDarkly.project"
        ],
        "returned_tools": [
            "Notion.create_database",
            "SonarQube.Trigger_Project_Analysis",
            "Notion.create_page",
            "Shortcut.Summarize",
            "Notion.search_databases",
            "GitHub.CreateBranch",
            "Notion.query_database",
            "Notion.update_database",
            "Notion.get_database",
            "LaunchDarkly.project"
        ],
        "query": "Create a new Notion database to track project tasks with columns for task name, status, due date, and assignee.",
        "response_time": 335.277795791626,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.43
    },
    {
        "expected_tools": [
            "Liveblocks.admin_set_user_roles"
        ],
        "matching_tools": [
            "Liveblocks.admin_set_user_roles"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Liveblocks.admin_get_user_roles",
            "Yunxin.Permission_-_Role_Management",
            "Liveblocks.send_user_message",
            "Liveblocks.admin_remove_user_roles",
            "Liveblocks.get_user_presence",
            "Liveblocks.list_rooms",
            "Liveblocks.user_kick",
            "Liveblocks.get_room_info",
            "LaunchDarkly.user"
        ],
        "returned_tools": [
            "Liveblocks.admin_set_user_roles",
            "Liveblocks.admin_get_user_roles",
            "Yunxin.Permission_-_Role_Management",
            "Liveblocks.send_user_message",
            "Liveblocks.admin_remove_user_roles",
            "Liveblocks.get_user_presence",
            "Liveblocks.list_rooms",
            "Liveblocks.user_kick",
            "Liveblocks.get_room_info",
            "LaunchDarkly.user"
        ],
        "query": "Set the role of user 'user123' to 'admin' in room 'room456'.",
        "response_time": 299.61562156677246,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Zapier.Schedule"
        ],
        "matching_tools": [
            "Zapier.Schedule"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Zapier.Email_Parser",
            "Zapier.Webhooks",
            "Zapier.Code_by_Zapier",
            "Zapier.Delay",
            "GitHub.RunWorkflow",
            "Twilio.project_templates",
            "GitHub.GetWorkflowRun",
            "VSCode.vscode_task_run",
            "Klaviyo.Flows"
        ],
        "returned_tools": [
            "Zapier.Schedule",
            "Zapier.Email_Parser",
            "Zapier.Webhooks",
            "Zapier.Code_by_Zapier",
            "Zapier.Delay",
            "GitHub.RunWorkflow",
            "Twilio.project_templates",
            "GitHub.GetWorkflowRun",
            "VSCode.vscode_task_run",
            "Klaviyo.Flows"
        ],
        "query": "How can I set up a workflow to run every weekday at 8am?",
        "response_time": 293.0014133453369,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "NanoVMs.Delete_Deployment"
        ],
        "matching_tools": [
            "NanoVMs.Delete_Deployment"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "NanoVMs.MCP_Image_Management",
            "NanoVMs.Describe_Deployment",
            "NanoVMs.SSH_Management",
            "NanoVMs.List_Deployments",
            "Azure.azmcp_appconfig_kv_delete",
            "NanoVMs.Create_Deployment",
            "LaunchDarkly.project",
            "Auth0.Policies",
            "Shortcut.Delete"
        ],
        "returned_tools": [
            "NanoVMs.Delete_Deployment",
            "NanoVMs.MCP_Image_Management",
            "NanoVMs.Describe_Deployment",
            "NanoVMs.SSH_Management",
            "NanoVMs.List_Deployments",
            "Azure.azmcp_appconfig_kv_delete",
            "NanoVMs.Create_Deployment",
            "LaunchDarkly.project",
            "Auth0.Policies",
            "Shortcut.Delete"
        ],
        "query": "Delete the deployment named 'web-app-prod' from MCP and ensure all associated resources are cleaned up.",
        "response_time": 316.27941131591797,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.14
    },
    {
        "expected_tools": [
            "Liveblocks.list_rooms"
        ],
        "matching_tools": [
            "Liveblocks.list_rooms"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Liveblocks.get_room_info",
            "Liveblocks.admin_get_user_roles",
            "Liveblocks.admin_set_user_roles",
            "Liveblocks.get_user_presence",
            "Yunxin.Room_Management",
            "Liveblocks.admin_remove_user_roles",
            "Liveblocks.user_kick",
            "Netdata.alarms_list",
            "Nutrient.Health_Checking_Tool"
        ],
        "returned_tools": [
            "Liveblocks.list_rooms",
            "Liveblocks.get_room_info",
            "Liveblocks.admin_get_user_roles",
            "Liveblocks.admin_set_user_roles",
            "Liveblocks.get_user_presence",
            "Yunxin.Room_Management",
            "Liveblocks.admin_remove_user_roles",
            "Liveblocks.user_kick",
            "Netdata.alarms_list",
            "Nutrient.Health_Checking_Tool"
        ],
        "query": "Show me all the rooms currently managed by the server.",
        "response_time": 384.89532470703125,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "Liveblocks.get_user_presence"
        ],
        "matching_tools": [
            "Liveblocks.get_user_presence"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Liveblocks.admin_get_user_roles",
            "Liveblocks.get_room_info",
            "Liveblocks.list_rooms",
            "Liveblocks.admin_set_user_roles",
            "OpsLevel.code/license",
            "ThoughtSpot.license",
            "Liveblocks.admin_remove_user_roles",
            "Liveblocks.send_user_message",
            "Liveblocks.user_kick"
        ],
        "returned_tools": [
            "Liveblocks.get_user_presence",
            "Liveblocks.admin_get_user_roles",
            "Liveblocks.get_room_info",
            "Liveblocks.list_rooms",
            "Liveblocks.admin_set_user_roles",
            "OpsLevel.code/license",
            "ThoughtSpot.license",
            "Liveblocks.admin_remove_user_roles",
            "Liveblocks.send_user_message",
            "Liveblocks.user_kick"
        ],
        "query": "What is the current presence status of user 'john_doe' in room 'project_alpha'?",
        "response_time": 294.4059371948242,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.43
    },
    {
        "expected_tools": [
            "VSCode.vscode_copilot_agent_plan"
        ],
        "matching_tools": [
            "VSCode.vscode_copilot_agent_plan"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_copilot_agent_execute",
            "OpsLevel.code/test",
            "VSCode.vscode_debug_start",
            "VSCode.vscode_task_run",
            "VSCode.vscode_git_pull",
            "VSCode.vscode_terminal_create",
            "VSCode.vscode_git_create_branch",
            "Hyperbrowser.code_editor",
            "VSCode.vscode_fs_write_file"
        ],
        "returned_tools": [
            "VSCode.vscode_copilot_agent_plan",
            "VSCode.vscode_copilot_agent_execute",
            "OpsLevel.code/test",
            "VSCode.vscode_debug_start",
            "VSCode.vscode_task_run",
            "VSCode.vscode_git_pull",
            "VSCode.vscode_terminal_create",
            "VSCode.vscode_git_create_branch",
            "Hyperbrowser.code_editor",
            "VSCode.vscode_fs_write_file"
        ],
        "query": "Create an action plan for refactoring a legacy Python codebase to improve maintainability and add unit tests.",
        "response_time": 494.96006965637207,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_cosmos_database_container_item_query"
        ],
        "matching_tools": [
            "Azure.azmcp_cosmos_database_container_item_query"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_cosmos_container_list",
            "Azure.azmcp_cosmos_account_list",
            "Azure.azmcp_cosmos_database_list",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_cosmos_database_container_item_insert",
            "Azure.azmcp_search_index_query",
            "Netdata.alarms_list",
            "Nutrient.Health_Checking_Tool",
            "Azure.azmcp_search_service_list"
        ],
        "returned_tools": [
            "Azure.azmcp_cosmos_database_container_item_query",
            "Azure.azmcp_cosmos_container_list",
            "Azure.azmcp_cosmos_account_list",
            "Azure.azmcp_cosmos_database_list",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_cosmos_database_container_item_insert",
            "Azure.azmcp_search_index_query",
            "Netdata.alarms_list",
            "Nutrient.Health_Checking_Tool",
            "Azure.azmcp_search_service_list"
        ],
        "query": "Find all items in the Cosmos DB container where the 'status' field is 'active'.",
        "response_time": 301.42855644226074,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.86
    },
    {
        "expected_tools": [
            "LINE.Echo"
        ],
        "matching_tools": [
            "LINE.Echo"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpenSearch.get_cluster_state",
            "Hyperbolic.terminal",
            "OpsLevel.code/license",
            "OpsLevel.code/test",
            "YepCode.rabbitmq",
            "ThoughtSpot.admin",
            "Hunter.Ping",
            "OpsLevel.actions/github_actions",
            "ZIZAI Recruitment.validator"
        ],
        "returned_tools": [
            "LINE.Echo",
            "OpenSearch.get_cluster_state",
            "Hyperbolic.terminal",
            "OpsLevel.code/license",
            "OpsLevel.code/test",
            "YepCode.rabbitmq",
            "ThoughtSpot.admin",
            "Hunter.Ping",
            "OpsLevel.actions/github_actions",
            "ZIZAI Recruitment.validator"
        ],
        "query": "Test message to check if the echo tool is working properly.",
        "response_time": 289.49594497680664,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.29
    },
    {
        "expected_tools": [
            "GitHub.GetNotificationDetails"
        ],
        "matching_tools": [
            "GitHub.GetNotificationDetails"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetSecretScanningAlert",
            "GitHub.GetCodeScanningAlert",
            "GitHub.SearchRepositories",
            "GitHub.UpdatePullRequest",
            "GitHub.ManageNotificationSubscription",
            "Notion.get_database",
            "GitHub.ListNotifications",
            "GitHub.GetMe",
            "GitHub.MarkAllNotificationsRead"
        ],
        "returned_tools": [
            "GitHub.GetNotificationDetails",
            "GitHub.GetSecretScanningAlert",
            "GitHub.GetCodeScanningAlert",
            "GitHub.SearchRepositories",
            "GitHub.UpdatePullRequest",
            "GitHub.ManageNotificationSubscription",
            "Notion.get_database",
            "GitHub.ListNotifications",
            "GitHub.GetMe",
            "GitHub.MarkAllNotificationsRead"
        ],
        "query": "Get the metadata for the notification with ID 123456 from my GitHub account.",
        "response_time": 311.2027645111084,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "VSCode.vscode_workspace_list_folders"
        ],
        "matching_tools": [
            "VSCode.vscode_workspace_list_folders"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_workspace_open_folder",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_git_branch_list",
            "VSCode.vscode_terminal_list",
            "VSCode.vscode_git_status",
            "VSCode.vscode_task_list",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_settings_get"
        ],
        "returned_tools": [
            "VSCode.vscode_workspace_list_folders",
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_workspace_open_folder",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_git_branch_list",
            "VSCode.vscode_terminal_list",
            "VSCode.vscode_git_status",
            "VSCode.vscode_task_list",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_settings_get"
        ],
        "query": "List all folders currently open in my VSCode workspace.",
        "response_time": 309.645414352417,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.14
    },
    {
        "expected_tools": [
            "Hunter.SSL_Check"
        ],
        "matching_tools": [
            "Hunter.SSL_Check"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hunter.DNS_Lookup",
            "Hunter.Whois_Lookup",
            "OpsLevel.code/license",
            "ThoughtSpot.license",
            "Hunter.Traceroute",
            "Globalping.http",
            "Hunter.Ping",
            "Hunter.IP_Lookup",
            "WaveSpeed.Ping"
        ],
        "returned_tools": [
            "Hunter.SSL_Check",
            "Hunter.DNS_Lookup",
            "Hunter.Whois_Lookup",
            "OpsLevel.code/license",
            "ThoughtSpot.license",
            "Hunter.Traceroute",
            "Globalping.http",
            "Hunter.Ping",
            "Hunter.IP_Lookup",
            "WaveSpeed.Ping"
        ],
        "query": "Check the SSL certificate validity and details for the domain example.com",
        "response_time": 295.9773540496826,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.86
    },
    {
        "expected_tools": [
            "Globalping.trace"
        ],
        "matching_tools": [
            "Globalping.trace"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "WaveSpeed.Traceroute",
            "Hunter.Traceroute",
            "Globalping.tcp",
            "Globalping.mtr",
            "Globalping.ping",
            "Globalping.dns",
            "Globalping.http",
            "WaveSpeed.Ping",
            "Hunter.DNS_Lookup"
        ],
        "returned_tools": [
            "Globalping.trace",
            "WaveSpeed.Traceroute",
            "Hunter.Traceroute",
            "Globalping.tcp",
            "Globalping.mtr",
            "Globalping.ping",
            "Globalping.dns",
            "Globalping.http",
            "WaveSpeed.Ping",
            "Hunter.DNS_Lookup"
        ],
        "query": "Run a traceroute from probes in different geographic locations to www.example.com to identify network routing paths and potential bottlenecks.",
        "response_time": 308.79950523376465,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.86
    },
    {
        "expected_tools": [
            "VSCode.vscode_settings_get"
        ],
        "matching_tools": [
            "VSCode.vscode_settings_get"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_editor_format_document",
            "VSCode.vscode_settings_update",
            "VSCode.vscode_extension_list",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_terminal_list",
            "VSCode.vscode_editor_get_selection",
            "VSCode.vscode_editor_insert_text",
            "VSCode.vscode_extension_install",
            "VSCode.vscode_fs_write_file"
        ],
        "returned_tools": [
            "VSCode.vscode_settings_get",
            "VSCode.vscode_editor_format_document",
            "VSCode.vscode_settings_update",
            "VSCode.vscode_extension_list",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_terminal_list",
            "VSCode.vscode_editor_get_selection",
            "VSCode.vscode_editor_insert_text",
            "VSCode.vscode_extension_install",
            "VSCode.vscode_fs_write_file"
        ],
        "query": "What is the current value of the 'editor.fontSize' setting in VSCode?",
        "response_time": 285.7182025909424,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.43
    },
    {
        "expected_tools": [
            "Rember.compose"
        ],
        "matching_tools": [],
        "missing_tools": [
            "Rember.compose"
        ],
        "unexpected_tools": [
            "Rember.choices",
            "Riza.question_answering",
            "Hyperbrowser.web_browser",
            "Netdata.data_query",
            "UnifAI.DocumentQA",
            "AllVoiceLab.QA",
            "UnifAI.Ask",
            "OctoEverywhere.Knowledge",
            "Shortcut.Ask",
            "Tianji.answer"
        ],
        "returned_tools": [
            "Rember.choices",
            "Riza.question_answering",
            "Hyperbrowser.web_browser",
            "Netdata.data_query",
            "UnifAI.DocumentQA",
            "AllVoiceLab.QA",
            "UnifAI.Ask",
            "OctoEverywhere.Knowledge",
            "Shortcut.Ask",
            "Tianji.answer"
        ],
        "query": "Combine the following phrases into a single, coherent question: 'What are the main causes of climate change?', 'How does human activity contribute?', and 'What can individuals do to help?'",
        "response_time": 303.9426803588867,
        "match": false,
        "match_top_1": false,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.0,
        "recall_metric": 0.0,
        "judge_metric": 6.43
    },
    {
        "expected_tools": [
            "Tako.Raster"
        ],
        "matching_tools": [
            "Tako.Raster"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Tako.PSTH_Peri_Stimulus_Time_Histogram",
            "Tako.Cross_correlation",
            "Tako.Behavior",
            "Memgraph.Graph_Visualizer",
            "Tako.Trajectory",
            "Tako.Tuning",
            "Memgraph.Graph_Schema_Viewer",
            "Hyperbolic.web_search",
            "CoinGecko.coin_market_cap"
        ],
        "returned_tools": [
            "Tako.Raster",
            "Tako.PSTH_Peri_Stimulus_Time_Histogram",
            "Tako.Cross_correlation",
            "Tako.Behavior",
            "Memgraph.Graph_Visualizer",
            "Tako.Trajectory",
            "Tako.Tuning",
            "Memgraph.Graph_Schema_Viewer",
            "Hyperbolic.web_search",
            "CoinGecko.coin_market_cap"
        ],
        "query": "Show the raster plot for spike times around rewards",
        "response_time": 321.7294216156006,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.86
    },
    {
        "expected_tools": [
            "HubSpot.Workflow_Insights"
        ],
        "matching_tools": [
            "HubSpot.Workflow_Insights"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "HubSpot.Contact_Insights",
            "HubSpot.Marketing_Email_Analytics",
            "Zapier.Email_Parser",
            "HubSpot.Ticket_Management",
            "GitHub.GetWorkflowRunLogs",
            "HubSpot.CRM_Search",
            "Klaviyo.Flows",
            "Klaviyo.Events",
            "Globalping.trace"
        ],
        "returned_tools": [
            "HubSpot.Workflow_Insights",
            "HubSpot.Contact_Insights",
            "HubSpot.Marketing_Email_Analytics",
            "Zapier.Email_Parser",
            "HubSpot.Ticket_Management",
            "GitHub.GetWorkflowRunLogs",
            "HubSpot.CRM_Search",
            "Klaviyo.Flows",
            "Klaviyo.Events",
            "Globalping.trace"
        ],
        "query": "Review the execution history and automation triggers for our current email marketing workflow to identify any bottlenecks or errors.",
        "response_time": 322.0629692077637,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Shortcut.Delete"
        ],
        "matching_tools": [
            "Shortcut.Delete"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hyperbrowser.file_manager",
            "VSCode.vscode_fs_delete_file",
            "Shortcut.Update",
            "Azure.azmcp_appconfig_kv_delete",
            "Shortcut.Create",
            "Azure.azmcp_storage_blob_delete",
            "GitHub.DeleteFile",
            "Azure.azmcp_search_index_delete",
            "Shortcut.Ask"
        ],
        "returned_tools": [
            "Shortcut.Delete",
            "Hyperbrowser.file_manager",
            "VSCode.vscode_fs_delete_file",
            "Shortcut.Update",
            "Azure.azmcp_appconfig_kv_delete",
            "Shortcut.Create",
            "Azure.azmcp_storage_blob_delete",
            "GitHub.DeleteFile",
            "Azure.azmcp_search_index_delete",
            "Shortcut.Ask"
        ],
        "query": "Delete story 10234",
        "response_time": 277.70519256591797,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "OpenSearch.get_mapping"
        ],
        "matching_tools": [
            "OpenSearch.get_mapping"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpenSearch.update_mapping",
            "OpenSearch.search",
            "OpenSearch.analyze_text",
            "OpenSearch.index_document",
            "OpenSearch.get_cluster_state",
            "OpenSearch.get_aliases",
            "Hyperbolic.wikidata",
            "Memgraph.Graph_Schema_Viewer",
            "Hiveflow.Search"
        ],
        "returned_tools": [
            "OpenSearch.get_mapping",
            "OpenSearch.update_mapping",
            "OpenSearch.search",
            "OpenSearch.analyze_text",
            "OpenSearch.index_document",
            "OpenSearch.get_cluster_state",
            "OpenSearch.get_aliases",
            "Hyperbolic.wikidata",
            "Memgraph.Graph_Schema_Viewer",
            "Hiveflow.Search"
        ],
        "query": "Retrieve the field mapping and structure for the 'user_data' index to understand how user information is indexed.",
        "response_time": 323.9889144897461,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_copilot_chat_get_history"
        ],
        "matching_tools": [
            "VSCode.vscode_copilot_chat_get_history"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_copilot_chat_send",
            "VSCode.vscode_git_log",
            "VSCode.vscode_copilot_agent_execute",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_copilot_agent_plan",
            "VSCode.vscode_terminal_list",
            "GitHub.ListCommits",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_editor_get_selection"
        ],
        "returned_tools": [
            "VSCode.vscode_copilot_chat_get_history",
            "VSCode.vscode_copilot_chat_send",
            "VSCode.vscode_git_log",
            "VSCode.vscode_copilot_agent_execute",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_copilot_agent_plan",
            "VSCode.vscode_terminal_list",
            "GitHub.ListCommits",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_editor_get_selection"
        ],
        "query": "Show me the recent chat history from the Copilot panel in VSCode.",
        "response_time": 297.4591255187988,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_search_service_list"
        ],
        "matching_tools": [
            "Azure.azmcp_search_service_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_search_index_query",
            "Hiveflow.Search",
            "Azure.azmcp_subscription_list",
            "Azure.azmcp_resourcegroup_list",
            "OpenSearch.search",
            "Azure.azmcp_search_index_create",
            "ThoughtSpot.license",
            "Azure.azmcp_kusto_cluster_list"
        ],
        "returned_tools": [
            "Azure.azmcp_search_service_list",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_search_index_query",
            "Hiveflow.Search",
            "Azure.azmcp_subscription_list",
            "Azure.azmcp_resourcegroup_list",
            "OpenSearch.search",
            "Azure.azmcp_search_index_create",
            "ThoughtSpot.license",
            "Azure.azmcp_kusto_cluster_list"
        ],
        "query": "List all available AI Search services in my Azure subscription.",
        "response_time": 301.91588401794434,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "PlayCanvas.branch"
        ],
        "matching_tools": [
            "PlayCanvas.branch"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "PlayCanvas.snapshot",
            "GitHub.ListBranches",
            "PlayCanvas.project",
            "PlayCanvas.entity",
            "PlayCanvas.asset",
            "PlayCanvas.user",
            "VSCode.vscode_git_branch_list",
            "PlayCanvas.session",
            "SonarQube.List_Projects"
        ],
        "returned_tools": [
            "PlayCanvas.branch",
            "PlayCanvas.snapshot",
            "GitHub.ListBranches",
            "PlayCanvas.project",
            "PlayCanvas.entity",
            "PlayCanvas.asset",
            "PlayCanvas.user",
            "VSCode.vscode_git_branch_list",
            "PlayCanvas.session",
            "SonarQube.List_Projects"
        ],
        "query": "List all existing branches for project ID 12345.",
        "response_time": 296.19789123535156,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "AWS.Convert_CDK_StepFunction_Constructs_to_MCP_YAML"
        ],
        "matching_tools": [
            "AWS.Convert_CDK_StepFunction_Constructs_to_MCP_YAML"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "AWS.Convert_AWS_Step_Functions_Amazon_States_Language_(ASL)_to_YAML",
            "AWS.Convert_AWS_Step_Functions_YAML_to_ASL_JSON",
            "AWS.Local_Simulation_of_Step_Functions_Workflows",
            "AWS.Validate_State_Machine_Definitions",
            "Linear.Schemas",
            "AWS.Workflow_Coverage_and_Step_Analysis",
            "Hiveflow.Data_Connector",
            "NanoVMs.Create_Deployment",
            "Nutrient.REST_API"
        ],
        "returned_tools": [
            "AWS.Convert_CDK_StepFunction_Constructs_to_MCP_YAML",
            "AWS.Convert_AWS_Step_Functions_Amazon_States_Language_(ASL)_to_YAML",
            "AWS.Convert_AWS_Step_Functions_YAML_to_ASL_JSON",
            "AWS.Local_Simulation_of_Step_Functions_Workflows",
            "AWS.Validate_State_Machine_Definitions",
            "Linear.Schemas",
            "AWS.Workflow_Coverage_and_Step_Analysis",
            "Hiveflow.Data_Connector",
            "NanoVMs.Create_Deployment",
            "Nutrient.REST_API"
        ],
        "query": "Convert the following AWS CDK Step Function workflow definition into MCP-compatible YAML format.",
        "response_time": 306.3783645629883,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.86
    },
    {
        "expected_tools": [
            "VSCode.vscode_extension_install"
        ],
        "matching_tools": [
            "VSCode.vscode_extension_install"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_extension_list",
            "Logfire.list_python_packages",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_settings_update",
            "VSCode.vscode_debug_start",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_terminal_run_command",
            "VSCode.vscode_git_log",
            "Hyperbrowser.python"
        ],
        "returned_tools": [
            "VSCode.vscode_extension_install",
            "VSCode.vscode_extension_list",
            "Logfire.list_python_packages",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_settings_update",
            "VSCode.vscode_debug_start",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_terminal_run_command",
            "VSCode.vscode_git_log",
            "Hyperbrowser.python"
        ],
        "query": "Install the Python extension for Visual Studio Code.",
        "response_time": 300.3544807434082,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "AllVoiceLab.Voice_Translation"
        ],
        "matching_tools": [
            "AllVoiceLab.Voice_Translation"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "AllVoiceLab.Speech_to_Text_STT",
            "UnifAI.SpeechRecognition",
            "AllVoiceLab.Text_to_Speech_TTS",
            "TextIn.speech_recognition",
            "AllVoiceLab.QA",
            "DevRev.translation",
            "AllVoiceLab.Document_Analyzer",
            "AllVoiceLab.Summarizer",
            "Yunxin.Recording_-_Playback"
        ],
        "returned_tools": [
            "AllVoiceLab.Voice_Translation",
            "AllVoiceLab.Speech_to_Text_STT",
            "UnifAI.SpeechRecognition",
            "AllVoiceLab.Text_to_Speech_TTS",
            "TextIn.speech_recognition",
            "AllVoiceLab.QA",
            "DevRev.translation",
            "AllVoiceLab.Document_Analyzer",
            "AllVoiceLab.Summarizer",
            "Yunxin.Recording_-_Playback"
        ],
        "query": "Translate the following audio recording from Spanish to English.",
        "response_time": 284.5776081085205,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_subscription_list"
        ],
        "matching_tools": [
            "Azure.azmcp_subscription_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_resourcegroup_list",
            "Azure.azmcp_cosmos_account_list",
            "Azure.azmcp_kusto_cluster_list",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_postgres_server_list",
            "Azure.azmcp_storage_account_list",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_search_service_list",
            "Azure.azmcp_cosmos_database_list"
        ],
        "returned_tools": [
            "Azure.azmcp_subscription_list",
            "Azure.azmcp_resourcegroup_list",
            "Azure.azmcp_cosmos_account_list",
            "Azure.azmcp_kusto_cluster_list",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_postgres_server_list",
            "Azure.azmcp_storage_account_list",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_search_service_list",
            "Azure.azmcp_cosmos_database_list"
        ],
        "query": "List all available Azure subscriptions for my account.",
        "response_time": 286.90385818481445,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.71
    },
    {
        "expected_tools": [
            "OpenSearch.get_cluster_state"
        ],
        "matching_tools": [
            "OpenSearch.get_cluster_state"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpenSearch.search",
            "Nutrient.Health_Checking_Tool",
            "OpenSearch.analyze_text",
            "Nutrient.NodeController",
            "OpenSearch.index_document",
            "GitHub.GetIssue",
            "Netdata.data_query",
            "OpenSearch.bulk",
            "OpenSearch.get_mapping"
        ],
        "returned_tools": [
            "OpenSearch.get_cluster_state",
            "OpenSearch.search",
            "Nutrient.Health_Checking_Tool",
            "OpenSearch.analyze_text",
            "Nutrient.NodeController",
            "OpenSearch.index_document",
            "GitHub.GetIssue",
            "Netdata.data_query",
            "OpenSearch.bulk",
            "OpenSearch.get_mapping"
        ],
        "query": "Retrieve the current state and health of the OpenSearch cluster to diagnose any potential issues or misconfigurations.",
        "response_time": 315.39416313171387,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 6.86
    },
    {
        "expected_tools": [
            "Tako.Trajectory"
        ],
        "matching_tools": [
            "Tako.Trajectory"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Tako.Behavior",
            "Tako.PSTH_Peri_Stimulus_Time_Histogram",
            "Tako.Raster",
            "Tako.Cross_correlation",
            "Tako.Tuning",
            "Memgraph.Memgraph_Data_Retriever",
            "CodeLogic.Dataflow_Analyzer",
            "Memgraph.Graph_Schema_Viewer",
            "OpenSearch.get_cluster_state"
        ],
        "returned_tools": [
            "Tako.Trajectory",
            "Tako.Behavior",
            "Tako.PSTH_Peri_Stimulus_Time_Histogram",
            "Tako.Raster",
            "Tako.Cross_correlation",
            "Tako.Tuning",
            "Memgraph.Memgraph_Data_Retriever",
            "CodeLogic.Dataflow_Analyzer",
            "Memgraph.Graph_Schema_Viewer",
            "OpenSearch.get_cluster_state"
        ],
        "query": "Plot the animal trajectory for session 2024-06-15.",
        "response_time": 282.81426429748535,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.86
    },
    {
        "expected_tools": [
            "Twilio.project_templates"
        ],
        "matching_tools": [
            "Twilio.project_templates"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Twilio.toolbelt",
            "Klaviyo.Templates",
            "Yunxin.Notification_-_Callback",
            "Twilio.config_management",
            "LINE.Buttons",
            "GitHub.CreateOrUpdateFile",
            "Hyperbrowser.python",
            "Logfire.search_python_docs",
            "Twilio.reporting"
        ],
        "returned_tools": [
            "Twilio.project_templates",
            "Twilio.toolbelt",
            "Klaviyo.Templates",
            "Yunxin.Notification_-_Callback",
            "Twilio.config_management",
            "LINE.Buttons",
            "GitHub.CreateOrUpdateFile",
            "Hyperbrowser.python",
            "Logfire.search_python_docs",
            "Twilio.reporting"
        ],
        "query": "Show me available boilerplate templates for creating a Twilio SMS notification service in Python.",
        "response_time": 300.5235195159912,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.14
    },
    {
        "expected_tools": [
            "GitHub.GetJobLogs"
        ],
        "matching_tools": [
            "GitHub.GetJobLogs"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetWorkflowRunLogs",
            "GitHub.GetWorkflowRun",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.GetFileContents",
            "GitHub.ListWorkflowRuns",
            "GitHub.DeleteWorkflowRunLogs",
            "GitHub.GetWorkflowRunUsage",
            "GitHub.ListWorkflowRunArtifacts",
            "Netdata.log_tail"
        ],
        "returned_tools": [
            "GitHub.GetWorkflowRunLogs",
            "GitHub.GetJobLogs",
            "GitHub.GetWorkflowRun",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.GetFileContents",
            "GitHub.ListWorkflowRuns",
            "GitHub.DeleteWorkflowRunLogs",
            "GitHub.GetWorkflowRunUsage",
            "GitHub.ListWorkflowRunArtifacts",
            "Netdata.log_tail"
        ],
        "query": "Retrieve the detailed logs for the 'build-and-test' job in workflow run #456 of the repository 'octocat/Hello-World'.",
        "response_time": 355.3125858306885,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.AddPullRequestReviewCommentToPendingReview"
        ],
        "matching_tools": [
            "GitHub.AddPullRequestReviewCommentToPendingReview"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.AddIssueComment",
            "GitHub.CreatePendingPullRequestReview",
            "Tianji.comment",
            "GitHub.SubmitPendingPullRequestReview",
            "GitHub.GetPullRequestComments",
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.GetPullRequestReviews",
            "Notion.create_comment",
            "GitHub.RequestCopilotReview"
        ],
        "returned_tools": [
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.AddIssueComment",
            "GitHub.CreatePendingPullRequestReview",
            "Tianji.comment",
            "GitHub.SubmitPendingPullRequestReview",
            "GitHub.GetPullRequestComments",
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.GetPullRequestReviews",
            "Notion.create_comment",
            "GitHub.RequestCopilotReview"
        ],
        "query": "Add an inline comment to a pending review on pull request #42 in the repository 'octocat/Hello-World' at file 'app.js' line 15 with the comment 'Please refactor this function for readability.'",
        "response_time": 307.09004402160645,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.43
    },
    {
        "expected_tools": [
            "GitHub.GetPullRequest"
        ],
        "matching_tools": [
            "GitHub.GetPullRequest"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetCommit",
            "GitHub.SearchPullRequests",
            "GitHub.GetPullRequestStatus",
            "GitHub.GetPullRequestDiff",
            "GitHub.MergePullRequest",
            "GitHub.GetPullRequestComments",
            "GitHub.ListPullRequests",
            "GitHub.GetPullRequestReviews",
            "GitHub.GetTag"
        ],
        "returned_tools": [
            "GitHub.GetPullRequest",
            "GitHub.GetCommit",
            "GitHub.SearchPullRequests",
            "GitHub.GetPullRequestStatus",
            "GitHub.GetPullRequestDiff",
            "GitHub.MergePullRequest",
            "GitHub.GetPullRequestComments",
            "GitHub.ListPullRequests",
            "GitHub.GetPullRequestReviews",
            "GitHub.GetTag"
        ],
        "query": "Retrieve the details of pull request number 42 in the repository 'octocat/Hello-World'.",
        "response_time": 307.50131607055664,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "klusterai.Joins"
        ],
        "matching_tools": [
            "klusterai.Joins"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "klusterai.Ordering",
            "klusterai.Profiling",
            "klusterai.Filters",
            "klusterai.Grouping",
            "ThoughtSpot.cluster",
            "klusterai.Metrics",
            "klusterai.Limit",
            "Sophtron.GetTransactions",
            "Klaviyo.Events"
        ],
        "returned_tools": [
            "klusterai.Joins",
            "klusterai.Ordering",
            "klusterai.Profiling",
            "klusterai.Filters",
            "klusterai.Grouping",
            "ThoughtSpot.cluster",
            "klusterai.Metrics",
            "klusterai.Limit",
            "Sophtron.GetTransactions",
            "Klaviyo.Events"
        ],
        "query": "Join customer orders with payment records to display order details alongside payment status.",
        "response_time": 281.60619735717773,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.43
    },
    {
        "expected_tools": [
            "DevRev.ticket_categorization"
        ],
        "matching_tools": [
            "DevRev.ticket_categorization"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "DevRev.sentiment_analysis",
            "HubSpot.Ticket_Management",
            "DevRev.priority_detection",
            "Riza.classification",
            "Cloudinary.mcp_upload",
            "DevRev.translation",
            "DevRev.entity_extraction",
            "Azure.azmcp_storage_blob_upload",
            "CodeLogic.Dependency_Resolver"
        ],
        "returned_tools": [
            "DevRev.ticket_categorization",
            "DevRev.sentiment_analysis",
            "HubSpot.Ticket_Management",
            "DevRev.priority_detection",
            "Riza.classification",
            "Cloudinary.mcp_upload",
            "DevRev.translation",
            "DevRev.entity_extraction",
            "Azure.azmcp_storage_blob_upload",
            "CodeLogic.Dependency_Resolver"
        ],
        "query": "Classify the following customer support ticket into the appropriate category: 'The app crashes every time I try to upload a photo.'",
        "response_time": 314.04972076416016,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_task_list"
        ],
        "matching_tools": [
            "VSCode.vscode_task_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_task_run",
            "VSCode.vscode_workspace_list_folders",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_terminal_list",
            "VSCode.vscode_git_branch_list",
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_debug_start",
            "VSCode.vscode_fs_read_file"
        ],
        "returned_tools": [
            "VSCode.vscode_task_list",
            "VSCode.vscode_task_run",
            "VSCode.vscode_workspace_list_folders",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_terminal_list",
            "VSCode.vscode_git_branch_list",
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_debug_start",
            "VSCode.vscode_fs_read_file"
        ],
        "query": "List all available tasks configured in the current VSCode workspace.",
        "response_time": 311.154842376709,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "AllVoiceLab.QA"
        ],
        "matching_tools": [
            "AllVoiceLab.QA"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "AllVoiceLab.Text_to_Speech_TTS",
            "AllVoiceLab.Speech_to_Text_STT",
            "AllVoiceLab.Summarizer",
            "AllVoiceLab.Voice_Translation",
            "AllVoiceLab.Document_Analyzer",
            "UnifAI.SpeechRecognition",
            "DevRev.summarization",
            "TextIn.speech_recognition",
            "OpsLevel.code/test"
        ],
        "returned_tools": [
            "AllVoiceLab.Text_to_Speech_TTS",
            "AllVoiceLab.Speech_to_Text_STT",
            "AllVoiceLab.Summarizer",
            "AllVoiceLab.QA",
            "AllVoiceLab.Voice_Translation",
            "AllVoiceLab.Document_Analyzer",
            "UnifAI.SpeechRecognition",
            "DevRev.summarization",
            "TextIn.speech_recognition",
            "OpsLevel.code/test"
        ],
        "query": "What are the main findings discussed in the provided research document?",
        "response_time": 305.8457374572754,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "DevRev.summarization"
        ],
        "matching_tools": [
            "DevRev.summarization"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "DevRev.sentiment_analysis",
            "DevRev.priority_detection",
            "Riza.summarization",
            "Octagon.summarize",
            "DevRev.translation",
            "AllVoiceLab.Summarizer",
            "DevRev.entity_extraction",
            "DevRev.ticket_categorization",
            "Shortcut.Summarize"
        ],
        "returned_tools": [
            "DevRev.summarization",
            "DevRev.sentiment_analysis",
            "DevRev.priority_detection",
            "Riza.summarization",
            "Octagon.summarize",
            "DevRev.translation",
            "AllVoiceLab.Summarizer",
            "DevRev.entity_extraction",
            "DevRev.ticket_categorization",
            "Shortcut.Summarize"
        ],
        "query": "Summarize the main points from this 10-page project proposal document.",
        "response_time": 304.98576164245605,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Netdata.alarms_silence"
        ],
        "matching_tools": [
            "Netdata.alarms_silence"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Netdata.alarms_unsilence",
            "Netdata.alarms_list",
            "Netdata.netdata_info",
            "Netdata.netdata_config",
            "Netdata.netdata_stats",
            "Netdata.system_info",
            "Netdata.log_tail",
            "Netdata.data_query",
            "WaveSpeed.Traceroute"
        ],
        "returned_tools": [
            "Netdata.alarms_silence",
            "Netdata.alarms_unsilence",
            "Netdata.alarms_list",
            "Netdata.netdata_info",
            "Netdata.netdata_config",
            "Netdata.netdata_stats",
            "Netdata.system_info",
            "Netdata.log_tail",
            "Netdata.data_query",
            "WaveSpeed.Traceroute"
        ],
        "query": "Silence the 'disk_space_low' alarm on the Netdata agent for the next 2 hours.",
        "response_time": 370.3744411468506,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "OpenSearch.analyze_text"
        ],
        "matching_tools": [
            "OpenSearch.analyze_text"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpenSearch.search",
            "OpenSearch.get_mapping",
            "OpenSearch.get_cluster_state",
            "OpenSearch.index_document",
            "TextIn.ocr",
            "OpenSearch.update_mapping",
            "OpenSearch.get_aliases",
            "Hiveflow.Search",
            "Riza.classification"
        ],
        "returned_tools": [
            "OpenSearch.analyze_text",
            "OpenSearch.search",
            "OpenSearch.get_mapping",
            "OpenSearch.get_cluster_state",
            "OpenSearch.index_document",
            "TextIn.ocr",
            "OpenSearch.update_mapping",
            "OpenSearch.get_aliases",
            "Hiveflow.Search",
            "Riza.classification"
        ],
        "query": "Analyze the text 'quick brown fox jumps over the lazy dog' using the standard analyzer to see how it will be tokenized and indexed.",
        "response_time": 309.340238571167,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Notion.get_database"
        ],
        "matching_tools": [
            "Notion.get_database"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Notion.query_database",
            "Netdata.data_query",
            "Notion.update_database",
            "GitHub.GetNotificationDetails",
            "Azure.azmcp_keyvault_key_get",
            "Notion.get_block",
            "Notion.search_databases",
            "GitHub.GetFileContents",
            "Memgraph.Graph_Schema_Viewer"
        ],
        "returned_tools": [
            "Notion.get_database",
            "Notion.query_database",
            "Netdata.data_query",
            "Notion.update_database",
            "GitHub.GetNotificationDetails",
            "Azure.azmcp_keyvault_key_get",
            "Notion.get_block",
            "Notion.search_databases",
            "GitHub.GetFileContents",
            "Memgraph.Graph_Schema_Viewer"
        ],
        "query": "Retrieve the metadata for the Notion database with ID 'abc123'.",
        "response_time": 296.3860034942627,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Milvus.Partition_Management"
        ],
        "matching_tools": [
            "Milvus.Partition_Management"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Milvus.Schema_Management",
            "Milvus.Search_and_Query",
            "Milvus.Collection_Management",
            "Milvus.Index_Management",
            "Milvus.Data_Import_Export",
            "Upstash.Set",
            "Liveblocks.list_rooms",
            "Netdata.data_query",
            "SonarQube.List_Projects"
        ],
        "returned_tools": [
            "Milvus.Partition_Management",
            "Milvus.Schema_Management",
            "Milvus.Search_and_Query",
            "Milvus.Collection_Management",
            "Milvus.Index_Management",
            "Milvus.Data_Import_Export",
            "Upstash.Set",
            "Liveblocks.list_rooms",
            "Netdata.data_query",
            "SonarQube.List_Projects"
        ],
        "query": "List all partitions in the 'user_activity' collection.",
        "response_time": 330.8243751525879,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.86
    },
    {
        "expected_tools": [
            "Memgraph.Cypher_QA_Chain"
        ],
        "matching_tools": [
            "Memgraph.Cypher_QA_Chain"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Procedures_Catalog",
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Query_Runner",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Export_Data_Tool",
            "Memgraph.Memgraph_Cypher_Generator"
        ],
        "returned_tools": [
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Procedures_Catalog",
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Query_Runner",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Export_Data_Tool",
            "Memgraph.Memgraph_Cypher_Generator"
        ],
        "query": "Who are the direct collaborators of Alice in the project database?",
        "response_time": 285.5095863342285,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Nutrient.REST_API"
        ],
        "matching_tools": [
            "Nutrient.REST_API"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Nutrient.Health_Checking_Tool",
            "Nutrient.DWS_MCP_Server",
            "Nutrient.GRPC_API",
            "Nutrient.NodeController",
            "OpenSearch.get_cluster_state",
            "Azure.azmcp_appconfig_kv_show",
            "Nutrient.ResourceController",
            "ThoughtSpot.cluster",
            "Cloudinary.mcp_logging"
        ],
        "returned_tools": [
            "Nutrient.REST_API",
            "Nutrient.Health_Checking_Tool",
            "Nutrient.DWS_MCP_Server",
            "Nutrient.GRPC_API",
            "Nutrient.NodeController",
            "OpenSearch.get_cluster_state",
            "Azure.azmcp_appconfig_kv_show",
            "Nutrient.ResourceController",
            "ThoughtSpot.cluster",
            "Cloudinary.mcp_logging"
        ],
        "query": "Retrieve the current operational status of all nodes managed by the MCP server.",
        "response_time": 285.73131561279297,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_appconfig_kv_delete"
        ],
        "matching_tools": [
            "Azure.azmcp_appconfig_kv_delete"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_keyvault_key_delete",
            "LaunchDarkly.feature_flag",
            "Azure.azmcp_appconfig_kv_set",
            "Upstash.String",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_appconfig_kv_show",
            "Upstash.Keys",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_keyvault_key_get"
        ],
        "returned_tools": [
            "Azure.azmcp_appconfig_kv_delete",
            "Azure.azmcp_keyvault_key_delete",
            "LaunchDarkly.feature_flag",
            "Azure.azmcp_appconfig_kv_set",
            "Upstash.String",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_appconfig_kv_show",
            "Upstash.Keys",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_keyvault_key_get"
        ],
        "query": "Delete the key-value pair with key 'AppSettings:FeatureFlag' from the Azure App Configuration store.",
        "response_time": 300.0836372375488,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.57
    },
    {
        "expected_tools": [
            "Rember.extract"
        ],
        "matching_tools": [
            "Rember.extract"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hyperbrowser.web_browser",
            "DevRev.entity_extraction",
            "Rember.choices",
            "fetchSERP.Google_News",
            "Octagon.extract",
            "GitHub.GetMe",
            "Netdata.alarms_list",
            "OpenSearch.get_cluster_state",
            "OpenSearch.index_document"
        ],
        "returned_tools": [
            "Rember.extract",
            "Hyperbrowser.web_browser",
            "DevRev.entity_extraction",
            "Rember.choices",
            "fetchSERP.Google_News",
            "Octagon.extract",
            "GitHub.GetMe",
            "Netdata.alarms_list",
            "OpenSearch.get_cluster_state",
            "OpenSearch.index_document"
        ],
        "query": "Extract all named entities and keywords from the following news article: 'Apple announced the release of its new iPhone 15 at the event in Cupertino, California, on September 12, 2023.'",
        "response_time": 316.4212703704834,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "HubSpot.Contact_Insights"
        ],
        "matching_tools": [
            "HubSpot.Contact_Insights"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "HubSpot.CRM_Search",
            "HubSpot.Workflow_Insights",
            "HubSpot.Marketing_Email_Analytics",
            "HubSpot.Deal_Pipeline_Overview",
            "HubSpot.Ticket_Management",
            "GitHub.GetJobLogs",
            "Tianji.search",
            "Klaviyo.Flows",
            "Campertunity.userProfile"
        ],
        "returned_tools": [
            "HubSpot.Contact_Insights",
            "HubSpot.CRM_Search",
            "HubSpot.Workflow_Insights",
            "HubSpot.Marketing_Email_Analytics",
            "HubSpot.Deal_Pipeline_Overview",
            "HubSpot.Ticket_Management",
            "GitHub.GetJobLogs",
            "Tianji.search",
            "Klaviyo.Flows",
            "Campertunity.userProfile"
        ],
        "query": "Get the full engagement history and associated deals for contact John Doe.",
        "response_time": 288.91468048095703,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_appconfig_kv_show"
        ],
        "matching_tools": [
            "Azure.azmcp_appconfig_kv_show"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_keyvault_key_get",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_appconfig_kv_set",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_postgres_database_list",
            "Azure.azmcp_appconfig_kv_unlock",
            "Azure.azmcp_keyvault_key_list",
            "Upstash.String",
            "Azure.azmcp_kusto_query"
        ],
        "returned_tools": [
            "Azure.azmcp_appconfig_kv_show",
            "Azure.azmcp_keyvault_key_get",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_appconfig_kv_set",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_postgres_database_list",
            "Azure.azmcp_appconfig_kv_unlock",
            "Azure.azmcp_keyvault_key_list",
            "Upstash.String",
            "Azure.azmcp_kusto_query"
        ],
        "query": "Retrieve the value of the key 'AppSettings:DatabaseConnectionString' from Azure App Configuration.",
        "response_time": 326.22218132019043,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.86
    },
    {
        "expected_tools": [
            "Shortcut.Ask"
        ],
        "matching_tools": [
            "Shortcut.Ask"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "SonarQube.Show_Issue_Details",
            "Shortcut.Create",
            "SonarQube.Get_Project_Metrics",
            "SonarQube.List_Issues",
            "DevRev.priority_detection",
            "Shortcut.Summarize",
            "GitHub.ListCodeScanningAlerts",
            "Hyperbrowser.code_editor",
            "Shortcut.List"
        ],
        "returned_tools": [
            "Shortcut.Ask",
            "SonarQube.Show_Issue_Details",
            "Shortcut.Create",
            "SonarQube.Get_Project_Metrics",
            "SonarQube.List_Issues",
            "DevRev.priority_detection",
            "Shortcut.Summarize",
            "GitHub.ListCodeScanningAlerts",
            "Hyperbrowser.code_editor",
            "Shortcut.List"
        ],
        "query": "Show me all high priority bugs assigned to John Doe in the Mobile App project.",
        "response_time": 300.9970188140869,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Octagon.summarize"
        ],
        "matching_tools": [
            "Octagon.summarize"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Octagon.extract",
            "Octagon.classify",
            "DevRev.summarization",
            "Octagon.ask_calculator",
            "Octagon.ask_retrieval",
            "Riza.summarization",
            "AllVoiceLab.Summarizer",
            "Octagon.ask_code",
            "Tako.Trajectory"
        ],
        "returned_tools": [
            "Octagon.summarize",
            "Octagon.extract",
            "Octagon.classify",
            "DevRev.summarization",
            "Octagon.ask_calculator",
            "Octagon.ask_retrieval",
            "Riza.summarization",
            "AllVoiceLab.Summarizer",
            "Octagon.ask_code",
            "Tako.Trajectory"
        ],
        "query": "Summarize the main points from this 10-page research paper on climate change.",
        "response_time": 294.7361469268799,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.GetSecretScanningAlert"
        ],
        "matching_tools": [
            "GitHub.GetSecretScanningAlert"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetCodeScanningAlert",
            "GitHub.ListSecretScanningAlerts",
            "GitHub.GetCommit",
            "JFrog.secrets_scan",
            "GitHub.ListCodeScanningAlerts",
            "GitHub.GetFileContents",
            "GitHub.SearchCode",
            "OpsLevel.security/codeql",
            "GitHub.SearchOrgs"
        ],
        "returned_tools": [
            "GitHub.GetSecretScanningAlert",
            "GitHub.GetCodeScanningAlert",
            "GitHub.ListSecretScanningAlerts",
            "GitHub.GetCommit",
            "JFrog.secrets_scan",
            "GitHub.ListCodeScanningAlerts",
            "GitHub.GetFileContents",
            "GitHub.SearchCode",
            "OpsLevel.security/codeql",
            "GitHub.SearchOrgs"
        ],
        "query": "Get details for secret scanning alert ID 123456 in the repository 'octocat/Hello-World'.",
        "response_time": 313.36522102355957,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Yunxin.Media_Control"
        ],
        "matching_tools": [
            "Yunxin.Media_Control"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Yunxin.User_Management",
            "Yunxin.Recording_-_Playback",
            "Yunxin.Room_Management",
            "Yunxin.Permission_-_Role_Management",
            "Yunxin.Notification_-_Callback",
            "Yunxin.Statistics_-_Monitoring",
            "Netdata.alarms_unsilence",
            "Netdata.alarms_silence",
            "GitHub.CreateIssue"
        ],
        "returned_tools": [
            "Yunxin.Media_Control",
            "Yunxin.User_Management",
            "Yunxin.Recording_-_Playback",
            "Yunxin.Room_Management",
            "Yunxin.Permission_-_Role_Management",
            "Yunxin.Notification_-_Callback",
            "Yunxin.Statistics_-_Monitoring",
            "Netdata.alarms_unsilence",
            "Netdata.alarms_silence",
            "GitHub.CreateIssue"
        ],
        "query": "Mute the microphone for user ID 12345 in the current video conference session.",
        "response_time": 306.4863681793213,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "TextIn.formula_recognition"
        ],
        "matching_tools": [
            "TextIn.formula_recognition"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "TextIn.ocr",
            "TextIn.table_recognition",
            "Octagon.ask_calculator",
            "Hyperbrowser.web_browser",
            "TextIn.speech_recognition",
            "TextIn.printer_paper_recognition",
            "Octagon.extract",
            "Linear.Computed_Fields",
            "TextIn.id_ocr"
        ],
        "returned_tools": [
            "TextIn.formula_recognition",
            "TextIn.ocr",
            "TextIn.table_recognition",
            "Octagon.ask_calculator",
            "Hyperbrowser.web_browser",
            "TextIn.speech_recognition",
            "TextIn.printer_paper_recognition",
            "Octagon.extract",
            "Linear.Computed_Fields",
            "TextIn.id_ocr"
        ],
        "query": "Extract all mathematical formulas from this scanned page of a calculus textbook.",
        "response_time": 308.58778953552246,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.57
    },
    {
        "expected_tools": [
            "Zapier.Webhooks"
        ],
        "matching_tools": [
            "Zapier.Webhooks"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "YepCode.webhook",
            "GitHub.MergePullRequest",
            "Linear.Webhooks",
            "Zapier.Code_by_Zapier",
            "YepCode.rest",
            "GitHub.CreatePullRequest",
            "Memgraph.Import_Data_Tool",
            "VSCode.vscode_copilot_chat_send",
            "Upstash.PubSub"
        ],
        "returned_tools": [
            "Zapier.Webhooks",
            "YepCode.webhook",
            "GitHub.MergePullRequest",
            "Linear.Webhooks",
            "Zapier.Code_by_Zapier",
            "YepCode.rest",
            "GitHub.CreatePullRequest",
            "Memgraph.Import_Data_Tool",
            "VSCode.vscode_copilot_chat_send",
            "Upstash.PubSub"
        ],
        "query": "How can I send a POST request with JSON data to a custom API endpoint that Zapier does not natively support?",
        "response_time": 300.5549907684326,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Auth0.Identities"
        ],
        "matching_tools": [
            "Auth0.Identities"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Auth0.Entitlements",
            "Auth0.Policies",
            "Liveblocks.admin_get_user_roles",
            "Drata.Access_Reviews",
            "PlayCanvas.user",
            "Auth0.Resource_Registration",
            "GitHub.GetMe",
            "Auth0.Permissions",
            "LINE.Profile"
        ],
        "returned_tools": [
            "Auth0.Identities",
            "Auth0.Entitlements",
            "Auth0.Policies",
            "Liveblocks.admin_get_user_roles",
            "Drata.Access_Reviews",
            "PlayCanvas.user",
            "Auth0.Resource_Registration",
            "GitHub.GetMe",
            "Auth0.Permissions",
            "LINE.Profile"
        ],
        "query": "Retrieve all user identities created in the last 30 days.",
        "response_time": 320.0106620788574,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 6.0
    },
    {
        "expected_tools": [
            "Hyperbolic.web_search"
        ],
        "matching_tools": [
            "Hyperbolic.web_search"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hyperbolic.python",
            "Hyperbolic.site_search",
            "Hyperbolic.book_search",
            "Hyperbolic.terminal",
            "Hyperbolic.wikidata",
            "fetchSERP.Google_News",
            "Azure.azmcp_search_service_list",
            "Logfire.ask_openai_chat",
            "Hiveflow.Prompt_Templates"
        ],
        "returned_tools": [
            "Hyperbolic.python",
            "Hyperbolic.site_search",
            "Hyperbolic.web_search",
            "Hyperbolic.book_search",
            "Hyperbolic.terminal",
            "Hyperbolic.wikidata",
            "fetchSERP.Google_News",
            "Azure.azmcp_search_service_list",
            "Logfire.ask_openai_chat",
            "Hiveflow.Prompt_Templates"
        ],
        "query": "latest news on AI advancements in 2024",
        "response_time": 276.8266201019287,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "LaunchDarkly.environment"
        ],
        "matching_tools": [
            "LaunchDarkly.environment"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "LaunchDarkly.project",
            "LaunchDarkly.account",
            "LaunchDarkly.feature_flag",
            "Logfire.list_python_packages",
            "LaunchDarkly.user",
            "LaunchDarkly.api_key",
            "VSCode.vscode_git_branch_list",
            "SonarQube.List_Projects",
            "VSCode.vscode_workspace_list_folders"
        ],
        "returned_tools": [
            "LaunchDarkly.environment",
            "LaunchDarkly.project",
            "LaunchDarkly.account",
            "LaunchDarkly.feature_flag",
            "Logfire.list_python_packages",
            "LaunchDarkly.user",
            "LaunchDarkly.api_key",
            "VSCode.vscode_git_branch_list",
            "SonarQube.List_Projects",
            "VSCode.vscode_workspace_list_folders"
        ],
        "query": "List all environments for the 'my-app' project.",
        "response_time": 492.0618534088135,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_appconfig_account_list"
        ],
        "matching_tools": [
            "Azure.azmcp_appconfig_account_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_appconfig_kv_show",
            "Azure.azmcp_subscription_list",
            "Azure.azmcp_cosmos_account_list",
            "Azure.azmcp_appconfig_kv_set",
            "Azure.azmcp_appconfig_kv_unlock",
            "ThoughtSpot.license",
            "Azure.azmcp_kusto_cluster_list",
            "Azure.azmcp_resourcegroup_list"
        ],
        "returned_tools": [
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_appconfig_kv_show",
            "Azure.azmcp_subscription_list",
            "Azure.azmcp_cosmos_account_list",
            "Azure.azmcp_appconfig_kv_set",
            "Azure.azmcp_appconfig_kv_unlock",
            "ThoughtSpot.license",
            "Azure.azmcp_kusto_cluster_list",
            "Azure.azmcp_resourcegroup_list"
        ],
        "query": "List all available Azure App Configuration accounts in my subscription.",
        "response_time": 348.3090400695801,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Memgraph.Import_Data_Tool"
        ],
        "matching_tools": [
            "Memgraph.Import_Data_Tool"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Query_Runner",
            "Memgraph.Export_Data_Tool",
            "Memgraph.Procedures_Catalog",
            "TextIn.table_recognition"
        ],
        "returned_tools": [
            "Memgraph.Import_Data_Tool",
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Query_Runner",
            "Memgraph.Export_Data_Tool",
            "Memgraph.Procedures_Catalog",
            "TextIn.table_recognition"
        ],
        "query": "Import a CSV file containing user data into the Memgraph database, mapping columns to user node properties.",
        "response_time": 297.18661308288574,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "PlayCanvas.asset"
        ],
        "matching_tools": [
            "PlayCanvas.asset"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "PlayCanvas.entity",
            "PlayCanvas.snapshot",
            "PlayCanvas.project",
            "VSCode.vscode_fs_write_file",
            "PlayCanvas.branch",
            "Azure.azmcp_storage_blob_upload",
            "Cloudinary.mcp_upload",
            "GitHub.CreateRepository",
            "Hyperbrowser.code_editor"
        ],
        "returned_tools": [
            "PlayCanvas.asset",
            "PlayCanvas.entity",
            "PlayCanvas.snapshot",
            "PlayCanvas.project",
            "VSCode.vscode_fs_write_file",
            "PlayCanvas.branch",
            "Azure.azmcp_storage_blob_upload",
            "Cloudinary.mcp_upload",
            "GitHub.CreateRepository",
            "Hyperbrowser.code_editor"
        ],
        "query": "How can I upload a new 3D model asset to my PlayCanvas project?",
        "response_time": 393.38040351867676,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "AWS.Local_Simulation_of_Step_Functions_Workflows"
        ],
        "matching_tools": [
            "AWS.Local_Simulation_of_Step_Functions_Workflows"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "AWS.Validate_State_Machine_Definitions",
            "AWS.Convert_AWS_Step_Functions_YAML_to_ASL_JSON",
            "AWS.Convert_AWS_Step_Functions_Amazon_States_Language_(ASL)_to_YAML",
            "AWS.Workflow_Coverage_and_Step_Analysis",
            "AWS.Convert_CDK_StepFunction_Constructs_to_MCP_YAML",
            "GitHub.RunWorkflow",
            "Globalping.trace",
            "GitHub.GetWorkflowRunLogs",
            "Hiveflow.Workflow_Engine"
        ],
        "returned_tools": [
            "AWS.Local_Simulation_of_Step_Functions_Workflows",
            "AWS.Validate_State_Machine_Definitions",
            "AWS.Convert_AWS_Step_Functions_YAML_to_ASL_JSON",
            "AWS.Convert_AWS_Step_Functions_Amazon_States_Language_(ASL)_to_YAML",
            "AWS.Workflow_Coverage_and_Step_Analysis",
            "AWS.Convert_CDK_StepFunction_Constructs_to_MCP_YAML",
            "GitHub.RunWorkflow",
            "Globalping.trace",
            "GitHub.GetWorkflowRunLogs",
            "Hiveflow.Workflow_Engine"
        ],
        "query": "Simulate the execution of my Step Functions workflow defined in YAML to test the branching logic and trace the input/output before deploying to AWS.",
        "response_time": 323.23217391967773,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "WaveSpeed.Traceroute"
        ],
        "matching_tools": [
            "WaveSpeed.Traceroute"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "WaveSpeed.Ping",
            "Globalping.trace",
            "WaveSpeed.DNS_Lookup",
            "Hunter.Traceroute",
            "Globalping.mtr",
            "WaveSpeed.GeoIP",
            "WaveSpeed.Whois",
            "Globalping.ping",
            "Hunter.Ping"
        ],
        "returned_tools": [
            "WaveSpeed.Traceroute",
            "WaveSpeed.Ping",
            "Globalping.trace",
            "WaveSpeed.DNS_Lookup",
            "Hunter.Traceroute",
            "Globalping.mtr",
            "WaveSpeed.GeoIP",
            "WaveSpeed.Whois",
            "Globalping.ping",
            "Hunter.Ping"
        ],
        "query": "Trace the route from the server to google.com to identify any network delays or routing issues.",
        "response_time": 350.54683685302734,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 10.0
    },
    {
        "expected_tools": [
            "Yunxin.Permission_-_Role_Management"
        ],
        "matching_tools": [
            "Yunxin.Permission_-_Role_Management"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Liveblocks.admin_set_user_roles",
            "Yunxin.Media_Control",
            "Yunxin.User_Management",
            "Liveblocks.admin_remove_user_roles",
            "Yunxin.Room_Management",
            "Liveblocks.user_kick",
            "Yunxin.Notification_-_Callback",
            "Liveblocks.admin_get_user_roles",
            "Hiveflow.User_-_Access_Management"
        ],
        "returned_tools": [
            "Yunxin.Permission_-_Role_Management",
            "Liveblocks.admin_set_user_roles",
            "Yunxin.Media_Control",
            "Yunxin.User_Management",
            "Liveblocks.admin_remove_user_roles",
            "Yunxin.Room_Management",
            "Liveblocks.user_kick",
            "Yunxin.Notification_-_Callback",
            "Liveblocks.admin_get_user_roles",
            "Hiveflow.User_-_Access_Management"
        ],
        "query": "How can I assign a moderator role to a user in a specific chat room and restrict their permissions to only mute or remove participants?",
        "response_time": 309.0016841888428,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Cloudinary.mcp_logging"
        ],
        "matching_tools": [
            "Cloudinary.mcp_logging"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Cloudinary.mcp_authentication",
            "Cloudinary.mcp_proxy",
            "Linear.Audit_Logs",
            "Cloudinary.mcp_metadata",
            "Netdata.log_tail",
            "GitHub.GetWorkflowRunLogs",
            "NanoVMs.List_Deployments",
            "Azure.azmcp_monitor_query_logs",
            "Cloudinary.mcp_upload"
        ],
        "returned_tools": [
            "Cloudinary.mcp_logging",
            "Cloudinary.mcp_authentication",
            "Cloudinary.mcp_proxy",
            "Linear.Audit_Logs",
            "Cloudinary.mcp_metadata",
            "Netdata.log_tail",
            "GitHub.GetWorkflowRunLogs",
            "NanoVMs.List_Deployments",
            "Azure.azmcp_monitor_query_logs",
            "Cloudinary.mcp_upload"
        ],
        "query": "Retrieve the error logs for MCP services from the past 24 hours.",
        "response_time": 332.50880241394043,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.86
    },
    {
        "expected_tools": [
            "VSCode.vscode_copilot_chat_send"
        ],
        "matching_tools": [],
        "missing_tools": [
            "VSCode.vscode_copilot_chat_send"
        ],
        "unexpected_tools": [
            "VSCode.vscode_editor_replace_selection",
            "VSCode.vscode_settings_update",
            "VSCode.vscode_editor_get_selection",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_editor_insert_text",
            "OpsLevel.docs/readme",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_extension_list",
            "VSCode.vscode_extension_install",
            "VSCode.vscode_task_run"
        ],
        "returned_tools": [
            "VSCode.vscode_editor_replace_selection",
            "VSCode.vscode_settings_update",
            "VSCode.vscode_editor_get_selection",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_editor_insert_text",
            "OpsLevel.docs/readme",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_extension_list",
            "VSCode.vscode_extension_install",
            "VSCode.vscode_task_run"
        ],
        "query": "How can I refactor this JavaScript function to improve its readability and performance?",
        "response_time": 298.44212532043457,
        "match": false,
        "match_top_1": false,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.0,
        "recall_metric": 0.0,
        "judge_metric": 4.0
    },
    {
        "expected_tools": [
            "JFrog.dependency_check"
        ],
        "matching_tools": [
            "JFrog.dependency_check"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "JFrog.secrets_scan",
            "JFrog.iac_scan",
            "JFrog.container_scan",
            "JFrog.license_compliance",
            "ThoughtSpot.upgrade",
            "JFrog.project_inspect",
            "SonarQube.Get_Project_Metrics",
            "Nutrient.Health_Checking_Tool",
            "SonarQube.List_Issues"
        ],
        "returned_tools": [
            "JFrog.dependency_check",
            "JFrog.secrets_scan",
            "JFrog.iac_scan",
            "JFrog.container_scan",
            "JFrog.license_compliance",
            "ThoughtSpot.upgrade",
            "JFrog.project_inspect",
            "SonarQube.Get_Project_Metrics",
            "Nutrient.Health_Checking_Tool",
            "SonarQube.List_Issues"
        ],
        "query": "Check for security vulnerabilities and outdated versions in the dependencies of my Node.js project.",
        "response_time": 310.4851245880127,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Drata.Access_Reviews"
        ],
        "matching_tools": [
            "Drata.Access_Reviews"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Drata.Evidence_Collection",
            "Liveblocks.admin_get_user_roles",
            "Auth0.Resource_Registration",
            "Yunxin.Permission_-_Role_Management",
            "Twilio.reporting",
            "Auth0.Policies",
            "Auth0.Entitlements",
            "LINE.Confirm",
            "Drata.Continuous_Control_Monitoring"
        ],
        "returned_tools": [
            "Drata.Access_Reviews",
            "Drata.Evidence_Collection",
            "Liveblocks.admin_get_user_roles",
            "Auth0.Resource_Registration",
            "Yunxin.Permission_-_Role_Management",
            "Twilio.reporting",
            "Auth0.Policies",
            "Auth0.Entitlements",
            "LINE.Confirm",
            "Drata.Continuous_Control_Monitoring"
        ],
        "query": "Generate a report of all users with administrative access to our AWS environment and confirm if their access is still required.",
        "response_time": 316.38646125793457,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 6.0
    },
    {
        "expected_tools": [
            "Shortcut.Update"
        ],
        "matching_tools": [
            "Shortcut.Update"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Shortcut.Create",
            "Shortcut.Summarize",
            "Shortcut.Delete",
            "GitHub.RerunWorkflowRun",
            "Shortcut.Comment",
            "ThoughtSpot.license",
            "Shortcut.List",
            "Yunxin.Room_Management",
            "Shortcut.Ask"
        ],
        "returned_tools": [
            "Shortcut.Update",
            "Shortcut.Create",
            "Shortcut.Summarize",
            "Shortcut.Delete",
            "GitHub.RerunWorkflowRun",
            "Shortcut.Comment",
            "ThoughtSpot.license",
            "Shortcut.List",
            "Yunxin.Room_Management",
            "Shortcut.Ask"
        ],
        "query": "Change the status of story 4321 to 'Completed'.",
        "response_time": 292.77777671813965,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_editor_insert_text"
        ],
        "matching_tools": [
            "VSCode.vscode_editor_insert_text"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_editor_replace_selection",
            "Hyperbrowser.code_editor",
            "VSCode.vscode_editor_get_selection",
            "VSCode.vscode_editor_format_document",
            "Shortcut.Comment",
            "Tianji.comment",
            "VSCode.vscode_fs_write_file",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_task_run"
        ],
        "returned_tools": [
            "VSCode.vscode_editor_insert_text",
            "VSCode.vscode_editor_replace_selection",
            "Hyperbrowser.code_editor",
            "VSCode.vscode_editor_get_selection",
            "VSCode.vscode_editor_format_document",
            "Shortcut.Comment",
            "Tianji.comment",
            "VSCode.vscode_fs_write_file",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_task_run"
        ],
        "query": "Insert the comment '// TODO: Refactor this function' at the current cursor position in the code editor.",
        "response_time": 296.3433265686035,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.57
    },
    {
        "expected_tools": [
            "Upstash.List"
        ],
        "matching_tools": [
            "Upstash.List"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_copilot_chat_get_history",
            "Netdata.log_tail",
            "Upstash.Hash",
            "Upstash.PubSub",
            "Upstash.Set",
            "Upstash.String",
            "YepCode.rabbitmq",
            "Upstash.ZSet",
            "GitHub.GetWorkflowRunLogs"
        ],
        "returned_tools": [
            "VSCode.vscode_copilot_chat_get_history",
            "Netdata.log_tail",
            "Upstash.Hash",
            "Upstash.List",
            "Upstash.PubSub",
            "Upstash.Set",
            "Upstash.String",
            "YepCode.rabbitmq",
            "Upstash.ZSet",
            "GitHub.GetWorkflowRunLogs"
        ],
        "query": "Get the last 10 messages from the chat history list.",
        "response_time": 311.542272567749,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Sophtron.VerifyAccount"
        ],
        "matching_tools": [
            "Sophtron.VerifyAccount"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Sophtron.GetAccounts",
            "Sophtron.GetStatements",
            "Sophtron.GetTransactions",
            "Sophtron.GetCreditScore",
            "Sophtron.GetHoldings",
            "LaunchDarkly.account",
            "TextIn.id_ocr",
            "WaveSpeed.Traceroute",
            "Sophtron.InitiateTransfer"
        ],
        "returned_tools": [
            "Sophtron.VerifyAccount",
            "Sophtron.GetAccounts",
            "Sophtron.GetStatements",
            "Sophtron.GetTransactions",
            "Sophtron.GetCreditScore",
            "Sophtron.GetHoldings",
            "LaunchDarkly.account",
            "TextIn.id_ocr",
            "WaveSpeed.Traceroute",
            "Sophtron.InitiateTransfer"
        ],
        "query": "Verify if John Doe is the owner of the bank account with routing number 123456789 and account number 987654321 for onboarding purposes.",
        "response_time": 290.2505397796631,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "PlayCanvas.session"
        ],
        "matching_tools": [
            "PlayCanvas.session"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "LaunchDarkly.user",
            "Nutrient.GRPC_API",
            "Cloudinary.mcp_logging",
            "Yunxin.User_Management",
            "LaunchDarkly.account",
            "PlayCanvas.user",
            "Cloudinary.mcp_authentication",
            "PlayCanvas.snapshot",
            "PlayCanvas.entity"
        ],
        "returned_tools": [
            "PlayCanvas.session",
            "LaunchDarkly.user",
            "Nutrient.GRPC_API",
            "Cloudinary.mcp_logging",
            "Yunxin.User_Management",
            "LaunchDarkly.account",
            "PlayCanvas.user",
            "Cloudinary.mcp_authentication",
            "PlayCanvas.snapshot",
            "PlayCanvas.entity"
        ],
        "query": "How do I programmatically log a user out of the MCP using the session management tools?",
        "response_time": 329.67138290405273,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 5.71
    },
    {
        "expected_tools": [
            "Logfire.list_python_packages"
        ],
        "matching_tools": [
            "Logfire.list_python_packages"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Logfire.search_python_docs",
            "Logfire.ask_openai_chat",
            "Logfire.get_function_doc",
            "Logfire.ask_ollama_chat",
            "GitHub.ListCommits",
            "CodeLogic.Dependency_Resolver",
            "SonarQube.List_Projects",
            "Hyperbrowser.python",
            "Hyperbolic.python"
        ],
        "returned_tools": [
            "Logfire.list_python_packages",
            "Logfire.search_python_docs",
            "Logfire.ask_openai_chat",
            "Logfire.get_function_doc",
            "Logfire.ask_ollama_chat",
            "GitHub.ListCommits",
            "CodeLogic.Dependency_Resolver",
            "SonarQube.List_Projects",
            "Hyperbrowser.python",
            "Hyperbolic.python"
        ],
        "query": "List all Python packages currently installed in the runtime environment.",
        "response_time": 336.1389636993408,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Tako.Tuning"
        ],
        "matching_tools": [
            "Tako.Tuning"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Tako.PSTH_Peri_Stimulus_Time_Histogram",
            "Tako.Behavior",
            "Tako.Cross_correlation",
            "Tako.Raster",
            "Tako.Trajectory",
            "Memgraph.Query_Runner",
            "OpenSearch.index_document",
            "CodeLogic.Dataflow_Analyzer",
            "CodeLogic.Graph_Generator"
        ],
        "returned_tools": [
            "Tako.Tuning",
            "Tako.PSTH_Peri_Stimulus_Time_Histogram",
            "Tako.Behavior",
            "Tako.Cross_correlation",
            "Tako.Raster",
            "Tako.Trajectory",
            "Memgraph.Query_Runner",
            "OpenSearch.index_document",
            "CodeLogic.Dataflow_Analyzer",
            "CodeLogic.Graph_Generator"
        ],
        "query": "Plot the tuning curve for neuron 12 in response to varying sound frequencies.",
        "response_time": 384.86242294311523,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.57
    },
    {
        "expected_tools": [
            "LaunchDarkly.user"
        ],
        "matching_tools": [
            "LaunchDarkly.user"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "LaunchDarkly.project",
            "LaunchDarkly.account",
            "LaunchDarkly.environment",
            "LaunchDarkly.api_key",
            "NanoVMs.Create_Deployment",
            "Klaviyo.Profiles",
            "LaunchDarkly.feature_flag",
            "Hiveflow.User_-_Access_Management",
            "Yunxin.User_Management"
        ],
        "returned_tools": [
            "LaunchDarkly.user",
            "LaunchDarkly.project",
            "LaunchDarkly.account",
            "LaunchDarkly.environment",
            "LaunchDarkly.api_key",
            "NanoVMs.Create_Deployment",
            "Klaviyo.Profiles",
            "LaunchDarkly.feature_flag",
            "Hiveflow.User_-_Access_Management",
            "Yunxin.User_Management"
        ],
        "query": "Invite a new user to the MCP system and assign them the 'Project Manager' role for the 'Alpha' project.",
        "response_time": 320.7821846008301,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 3.0
    },
    {
        "expected_tools": [
            "YepCode.rabbitmq"
        ],
        "matching_tools": [
            "YepCode.rabbitmq"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "YepCode.webhook",
            "YepCode.rest",
            "YepCode.mongodb",
            "Zapier.Webhooks",
            "Logfire.search_python_docs",
            "LINE.Confirm",
            "Memgraph.Import_Data_Tool",
            "Linear.Webhooks",
            "VSCode.vscode_copilot_chat_send"
        ],
        "returned_tools": [
            "YepCode.rabbitmq",
            "YepCode.webhook",
            "YepCode.rest",
            "YepCode.mongodb",
            "Zapier.Webhooks",
            "Logfire.search_python_docs",
            "LINE.Confirm",
            "Memgraph.Import_Data_Tool",
            "Linear.Webhooks",
            "VSCode.vscode_copilot_chat_send"
        ],
        "query": "Send a JSON message containing order details to the 'orders' queue on the RabbitMQ broker.",
        "response_time": 317.9354667663574,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Campertunity.listMyCamps"
        ],
        "matching_tools": [
            "Campertunity.listMyCamps"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Campertunity.searchCamps",
            "Campertunity.messaging",
            "Campertunity.bookCamp",
            "Campertunity.reviews",
            "Hyperbrowser.file_manager",
            "Campertunity.userProfile",
            "Cloudinary.mcp_upload",
            "Klaviyo.Catalogs",
            "PlayCanvas.asset"
        ],
        "returned_tools": [
            "Campertunity.listMyCamps",
            "Campertunity.searchCamps",
            "Campertunity.messaging",
            "Campertunity.bookCamp",
            "Campertunity.reviews",
            "Hyperbrowser.file_manager",
            "Campertunity.userProfile",
            "Cloudinary.mcp_upload",
            "Klaviyo.Catalogs",
            "PlayCanvas.asset"
        ],
        "query": "How can I list my private campsite for rent, including uploading photos, setting prices, and specifying availability?",
        "response_time": 293.0023670196533,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.86
    },
    {
        "expected_tools": [
            "Milvus.Search_and_Query"
        ],
        "matching_tools": [
            "Milvus.Search_and_Query"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Milvus.Schema_Management",
            "Milvus.Collection_Management",
            "Milvus.Data_Import_Export",
            "Milvus.Index_Management",
            "Milvus.Partition_Management",
            "Netdata.data_query",
            "Rember.choices",
            "CoinGecko.coin_price",
            "Tianji.search"
        ],
        "returned_tools": [
            "Milvus.Search_and_Query",
            "Milvus.Schema_Management",
            "Milvus.Collection_Management",
            "Milvus.Data_Import_Export",
            "Milvus.Index_Management",
            "Milvus.Partition_Management",
            "Netdata.data_query",
            "Rember.choices",
            "CoinGecko.coin_price",
            "Tianji.search"
        ],
        "query": "Find all entities in the collection where the 'category' field is 'electronics' and the 'price' is less than 500.",
        "response_time": 319.9613094329834,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "ZIZAI Recruitment.settings"
        ],
        "matching_tools": [
            "ZIZAI Recruitment.settings"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "ZIZAI Recruitment.injector",
            "ZIZAI Recruitment.locker",
            "ZIZAI Recruitment.mapper",
            "ZIZAI Recruitment.task",
            "LaunchDarkly.environment",
            "ZIZAI Recruitment.context",
            "ZIZAI Recruitment.validator",
            "Twilio.config_management",
            "VSCode.vscode_settings_get"
        ],
        "returned_tools": [
            "ZIZAI Recruitment.settings",
            "ZIZAI Recruitment.injector",
            "ZIZAI Recruitment.locker",
            "ZIZAI Recruitment.mapper",
            "ZIZAI Recruitment.task",
            "LaunchDarkly.environment",
            "ZIZAI Recruitment.context",
            "ZIZAI Recruitment.validator",
            "Twilio.config_management",
            "VSCode.vscode_settings_get"
        ],
        "query": "How can I load application configuration settings from environment variables using ZIZAI Recruitment.settings?",
        "response_time": 307.14964866638184,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "NanoVMs.MCP_Image_Management"
        ],
        "matching_tools": [
            "NanoVMs.MCP_Image_Management"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "NanoVMs.Create_Deployment",
            "NanoVMs.List_Deployments",
            "NanoVMs.SSH_Management",
            "NanoVMs.Describe_Deployment",
            "NanoVMs.Delete_Deployment",
            "Cloudinary.mcp_transformations",
            "Cloudinary.mcp_metadata",
            "Azure.azmcp_subscription_list",
            "Linear.Schemas"
        ],
        "returned_tools": [
            "NanoVMs.MCP_Image_Management",
            "NanoVMs.Create_Deployment",
            "NanoVMs.List_Deployments",
            "NanoVMs.SSH_Management",
            "NanoVMs.Describe_Deployment",
            "NanoVMs.Delete_Deployment",
            "Cloudinary.mcp_transformations",
            "Cloudinary.mcp_metadata",
            "Azure.azmcp_subscription_list",
            "Linear.Schemas"
        ],
        "query": "List all available MCP images in the current environment.",
        "response_time": 293.5311794281006,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.14
    },
    {
        "expected_tools": [
            "Netdata.data_query"
        ],
        "matching_tools": [
            "Netdata.data_query"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Netdata.netdata_stats",
            "Netdata.netdata_info",
            "Netdata.log_tail",
            "Netdata.netdata_config",
            "Netdata.system_info",
            "Yunxin.Statistics_-_Monitoring",
            "Azure.azmcp_monitor_query_metrics",
            "OpenSearch.get_cluster_state",
            "Netdata.alarms_list"
        ],
        "returned_tools": [
            "Netdata.data_query",
            "Netdata.netdata_stats",
            "Netdata.netdata_info",
            "Netdata.log_tail",
            "Netdata.netdata_config",
            "Netdata.system_info",
            "Yunxin.Statistics_-_Monitoring",
            "Azure.azmcp_monitor_query_metrics",
            "OpenSearch.get_cluster_state",
            "Netdata.alarms_list"
        ],
        "query": "Retrieve the CPU usage metrics for the past 24 hours for all monitored servers.",
        "response_time": 308.47883224487305,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "OpsLevel.docs/readme"
        ],
        "matching_tools": [
            "OpsLevel.docs/readme"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpsLevel.code/license",
            "OpsLevel.docs/contributing",
            "OpsLevel.code/test",
            "OpsLevel.security/codeql",
            "OpsLevel.code/ci",
            "OpsLevel.actions/github_actions",
            "Logfire.search_python_docs",
            "GitHub.GetFileContents",
            "SonarQube.Check_Quality_Gate"
        ],
        "returned_tools": [
            "OpsLevel.docs/readme",
            "OpsLevel.code/license",
            "OpsLevel.docs/contributing",
            "OpsLevel.code/test",
            "OpsLevel.security/codeql",
            "OpsLevel.code/ci",
            "OpsLevel.actions/github_actions",
            "Logfire.search_python_docs",
            "GitHub.GetFileContents",
            "SonarQube.Check_Quality_Gate"
        ],
        "query": "Does the repository contain a README file, and does it meet the minimum content and documentation quality standards?",
        "response_time": 374.9358654022217,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.29
    },
    {
        "expected_tools": [
            "Azure.azmcp_storage_container_list"
        ],
        "matching_tools": [
            "Azure.azmcp_storage_container_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_storage_blob_list",
            "Azure.azmcp_storage_account_list",
            "Azure.azmcp_cosmos_container_list",
            "Azure.azmcp_storage_blob_upload",
            "Azure.azmcp_cosmos_database_container_item_query",
            "Azure.azmcp_storage_blob_download",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_cosmos_account_list",
            "Azure.azmcp_kusto_query"
        ],
        "returned_tools": [
            "Azure.azmcp_storage_container_list",
            "Azure.azmcp_storage_blob_list",
            "Azure.azmcp_storage_account_list",
            "Azure.azmcp_cosmos_container_list",
            "Azure.azmcp_storage_blob_upload",
            "Azure.azmcp_cosmos_database_container_item_query",
            "Azure.azmcp_storage_blob_download",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_cosmos_account_list",
            "Azure.azmcp_kusto_query"
        ],
        "query": "List all containers in the storage account named 'mydatastorage'.",
        "response_time": 290.91525077819824,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.43
    },
    {
        "expected_tools": [
            "Azure.azmcp_kusto_database_list"
        ],
        "matching_tools": [
            "Azure.azmcp_kusto_database_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_kusto_cluster_list",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_postgres_database_list",
            "Azure.azmcp_postgres_server_list",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_cosmos_database_list",
            "Azure.azmcp_search_index_query",
            "Azure.azmcp_cosmos_account_list",
            "Azure.azmcp_search_service_list"
        ],
        "returned_tools": [
            "Azure.azmcp_kusto_database_list",
            "Azure.azmcp_kusto_cluster_list",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_postgres_database_list",
            "Azure.azmcp_postgres_server_list",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_cosmos_database_list",
            "Azure.azmcp_search_index_query",
            "Azure.azmcp_cosmos_account_list",
            "Azure.azmcp_search_service_list"
        ],
        "query": "List all databases in the Kusto cluster named 'my-kusto-cluster'.",
        "response_time": 298.6001968383789,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Octagon.ask_retrieval"
        ],
        "matching_tools": [
            "Octagon.ask_retrieval"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Octagon.classify",
            "Octagon.summarize",
            "Octagon.extract",
            "Octagon.ask_code",
            "Linear.Computed_Fields",
            "Octagon.ask_calculator",
            "Riza.classification",
            "OctoEverywhere.Knowledge",
            "Memgraph.Graph_Schema_Viewer"
        ],
        "returned_tools": [
            "Octagon.classify",
            "Octagon.ask_retrieval",
            "Octagon.summarize",
            "Octagon.extract",
            "Octagon.ask_code",
            "Linear.Computed_Fields",
            "Octagon.ask_calculator",
            "Riza.classification",
            "OctoEverywhere.Knowledge",
            "Memgraph.Graph_Schema_Viewer"
        ],
        "query": "What are the main differences between supervised and unsupervised machine learning?",
        "response_time": 387.5997066497803,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 6.57
    },
    {
        "expected_tools": [
            "Memgraph.Memgraph_Cypher_Generator"
        ],
        "matching_tools": [
            "Memgraph.Memgraph_Cypher_Generator"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Procedures_Catalog",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Query_Runner",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Export_Data_Tool"
        ],
        "returned_tools": [
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Procedures_Catalog",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Query_Runner",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Memgraph_Cypher_Generator",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Export_Data_Tool"
        ],
        "query": "Find all users who have more than 5 friends in the social network.",
        "response_time": 285.1719856262207,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.ListWorkflowRuns"
        ],
        "matching_tools": [
            "GitHub.ListWorkflowRuns"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.ListWorkflowRunArtifacts",
            "GitHub.GetWorkflowRun",
            "GitHub.ListWorkflowJobs",
            "GitHub.RerunWorkflowRun",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.ListBranches",
            "GitHub.RunWorkflow",
            "GitHub.GetWorkflowRunUsage",
            "GitHub.SearchOrgs"
        ],
        "returned_tools": [
            "GitHub.ListWorkflowRuns",
            "GitHub.ListWorkflowRunArtifacts",
            "GitHub.GetWorkflowRun",
            "GitHub.ListWorkflowJobs",
            "GitHub.RerunWorkflowRun",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.ListBranches",
            "GitHub.RunWorkflow",
            "GitHub.GetWorkflowRunUsage",
            "GitHub.SearchOrgs"
        ],
        "query": "List all runs for the 'build-and-test' workflow in the 'octocat/Hello-World' repository.",
        "response_time": 307.73305892944336,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Upstash.Hash"
        ],
        "matching_tools": [
            "Upstash.Hash"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "PlayCanvas.user",
            "Upstash.Set",
            "Hyperbrowser.web_browser",
            "LINE.Profile",
            "Upstash.String",
            "Zapier.Email_Parser",
            "Upstash.List",
            "Notion.get_user",
            "Campertunity.userProfile"
        ],
        "returned_tools": [
            "Upstash.Hash",
            "PlayCanvas.user",
            "Upstash.Set",
            "Hyperbrowser.web_browser",
            "LINE.Profile",
            "Upstash.String",
            "Zapier.Email_Parser",
            "Upstash.List",
            "Notion.get_user",
            "Campertunity.userProfile"
        ],
        "query": "Fetch the email and phone number for user:12345",
        "response_time": 316.1053657531738,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "ThoughtSpot.upgrade"
        ],
        "matching_tools": [
            "ThoughtSpot.upgrade"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "ThoughtSpot.license",
            "ThoughtSpot.analytics",
            "ThoughtSpot.backup",
            "ThoughtSpot.cluster",
            "ThoughtSpot.admin",
            "ThoughtSpot.service",
            "NanoVMs.Describe_Deployment",
            "Azure.azmcp_subscription_list",
            "CodeLogic.Dependency_Resolver"
        ],
        "returned_tools": [
            "ThoughtSpot.upgrade",
            "ThoughtSpot.license",
            "ThoughtSpot.analytics",
            "ThoughtSpot.backup",
            "ThoughtSpot.cluster",
            "ThoughtSpot.admin",
            "ThoughtSpot.service",
            "NanoVMs.Describe_Deployment",
            "Azure.azmcp_subscription_list",
            "CodeLogic.Dependency_Resolver"
        ],
        "query": "What is the latest available upgrade version for my current ThoughtSpot deployment and are there any critical patches I should apply?",
        "response_time": 320.8928108215332,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Hiveflow.Knowledge_Base"
        ],
        "matching_tools": [
            "Hiveflow.Knowledge_Base"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hiveflow.Workflow_Engine",
            "Hiveflow.User_-_Access_Management",
            "Hiveflow.Search",
            "Hiveflow.Data_Connector",
            "Hiveflow.Prompt_Templates",
            "Nutrient.GRPC_API",
            "PlayCanvas.session",
            "Cloudinary.mcp_authentication",
            "Nutrient.REST_API"
        ],
        "returned_tools": [
            "Hiveflow.Knowledge_Base",
            "Hiveflow.Workflow_Engine",
            "Hiveflow.User_-_Access_Management",
            "Hiveflow.Search",
            "Hiveflow.Data_Connector",
            "Hiveflow.Prompt_Templates",
            "Nutrient.GRPC_API",
            "PlayCanvas.session",
            "Cloudinary.mcp_authentication",
            "Nutrient.REST_API"
        ],
        "query": "Find all knowledge articles related to cybersecurity best practices within the MCP platform.",
        "response_time": 317.063570022583,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "Klaviyo.Events"
        ],
        "matching_tools": [
            "Klaviyo.Events"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Klaviyo.Catalogs",
            "Klaviyo.Templates",
            "Klaviyo.Flows",
            "Klaviyo.Lists_and_Segments",
            "klusterai.Ordering",
            "Klaviyo.Profiles",
            "klusterai.Metrics",
            "klusterai.Profiling",
            "HubSpot.CRM_Search"
        ],
        "returned_tools": [
            "Klaviyo.Events",
            "Klaviyo.Catalogs",
            "Klaviyo.Templates",
            "Klaviyo.Flows",
            "Klaviyo.Lists_and_Segments",
            "klusterai.Ordering",
            "Klaviyo.Profiles",
            "klusterai.Metrics",
            "klusterai.Profiling",
            "HubSpot.CRM_Search"
        ],
        "query": "Show me all purchase events recorded for user john.doe@example.com in the last 30 days.",
        "response_time": 306.58888816833496,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 6.0
    },
    {
        "expected_tools": [
            "LaunchDarkly.feature_flag"
        ],
        "matching_tools": [
            "LaunchDarkly.feature_flag"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "LaunchDarkly.account",
            "LaunchDarkly.environment",
            "LaunchDarkly.api_key",
            "LaunchDarkly.project",
            "LaunchDarkly.user",
            "Azure.azmcp_appconfig_kv_list",
            "NanoVMs.List_Deployments",
            "Azure.azmcp_appconfig_account_list",
            "ThoughtSpot.license"
        ],
        "returned_tools": [
            "LaunchDarkly.feature_flag",
            "LaunchDarkly.account",
            "LaunchDarkly.environment",
            "LaunchDarkly.api_key",
            "LaunchDarkly.project",
            "LaunchDarkly.user",
            "Azure.azmcp_appconfig_kv_list",
            "NanoVMs.List_Deployments",
            "Azure.azmcp_appconfig_account_list",
            "ThoughtSpot.license"
        ],
        "query": "List all defined feature flags for the MCP project and show their current enabled/disabled status.",
        "response_time": 317.643404006958,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.43
    },
    {
        "expected_tools": [
            "OctoEverywhere.Printer"
        ],
        "matching_tools": [
            "OctoEverywhere.Printer"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OctoEverywhere.PrinterMainboard",
            "OctoEverywhere.Knowledge",
            "OctoEverywhere.System",
            "OctoEverywhere.GCodeTerminal",
            "OctoEverywhere.Timelapse",
            "Nutrient.Health_Checking_Tool",
            "OpenSearch.get_cluster_state",
            "Netdata.system_info",
            "Octagon.ask_calculator"
        ],
        "returned_tools": [
            "OctoEverywhere.Printer",
            "OctoEverywhere.PrinterMainboard",
            "OctoEverywhere.Knowledge",
            "OctoEverywhere.System",
            "OctoEverywhere.GCodeTerminal",
            "OctoEverywhere.Timelapse",
            "Nutrient.Health_Checking_Tool",
            "OpenSearch.get_cluster_state",
            "Netdata.system_info",
            "Octagon.ask_calculator"
        ],
        "query": "What is the current temperature of the printer's hotend and heated bed?",
        "response_time": 299.63231086730957,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.29
    },
    {
        "expected_tools": [
            "VSCode.vscode_git_push"
        ],
        "matching_tools": [
            "VSCode.vscode_git_push"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.PushFiles",
            "VSCode.vscode_git_pull",
            "VSCode.vscode_git_commit",
            "GitHub.MergePullRequest",
            "VSCode.vscode_git_branch_list",
            "VSCode.vscode_git_create_branch",
            "VSCode.vscode_terminal_run_command",
            "VSCode.vscode_git_diff",
            "VSCode.vscode_git_log"
        ],
        "returned_tools": [
            "VSCode.vscode_git_push",
            "GitHub.PushFiles",
            "VSCode.vscode_git_pull",
            "VSCode.vscode_git_commit",
            "GitHub.MergePullRequest",
            "VSCode.vscode_git_branch_list",
            "VSCode.vscode_git_create_branch",
            "VSCode.vscode_terminal_run_command",
            "VSCode.vscode_git_diff",
            "VSCode.vscode_git_log"
        ],
        "query": "Push my latest local commits to the remote repository on the main branch.",
        "response_time": 307.4965476989746,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Riza.chat"
        ],
        "matching_tools": [
            "Riza.chat"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Riza.question_answering",
            "Riza.classification",
            "Logfire.ask_openai_chat",
            "Logfire.ask_chat_google",
            "Riza.text_completion",
            "Riza.text_editing",
            "Tianji.question",
            "AllVoiceLab.QA",
            "UnifAI.Ask"
        ],
        "returned_tools": [
            "Riza.chat",
            "Riza.question_answering",
            "Riza.classification",
            "Logfire.ask_openai_chat",
            "Logfire.ask_chat_google",
            "Riza.text_completion",
            "Riza.text_editing",
            "Tianji.question",
            "AllVoiceLab.QA",
            "UnifAI.Ask"
        ],
        "query": "Can you help me practice a job interview by simulating a multi-turn conversation where you act as the interviewer and I am the candidate?",
        "response_time": 304.37254905700684,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "Azure.azmcp_postgres_table_query"
        ],
        "matching_tools": [
            "Azure.azmcp_postgres_table_query"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "klusterai.Grouping",
            "Rember.choices",
            "Azure.azmcp_kusto_query",
            "klusterai.Metrics",
            "Azure.azmcp_postgres_database_list",
            "Azure.azmcp_search_index_query",
            "Azure.azmcp_cosmos_database_container_item_query",
            "klusterai.Limit",
            "Azure.azmcp_postgres_server_list"
        ],
        "returned_tools": [
            "klusterai.Grouping",
            "Rember.choices",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_postgres_table_query",
            "klusterai.Metrics",
            "Azure.azmcp_postgres_database_list",
            "Azure.azmcp_search_index_query",
            "Azure.azmcp_cosmos_database_container_item_query",
            "klusterai.Limit",
            "Azure.azmcp_postgres_server_list"
        ],
        "query": "SELECT COUNT(*) FROM users WHERE signup_date >= CURRENT_DATE - INTERVAL '30 days';",
        "response_time": 285.21203994750977,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "UnifAI.DocumentQA"
        ],
        "matching_tools": [
            "UnifAI.DocumentQA"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "UnifAI.ImageDescription",
            "UnifAI.Ask",
            "UnifAI.OCR",
            "UnifAI.SpeechRecognition",
            "SonarQube.Show_Issue_Details",
            "UnifAI.ImageQuestionAnswering",
            "Nutrient.Health_Checking_Tool",
            "HubSpot.Deal_Pipeline_Overview",
            "Rember.choices"
        ],
        "returned_tools": [
            "UnifAI.DocumentQA",
            "UnifAI.ImageDescription",
            "UnifAI.Ask",
            "UnifAI.OCR",
            "UnifAI.SpeechRecognition",
            "SonarQube.Show_Issue_Details",
            "UnifAI.ImageQuestionAnswering",
            "Nutrient.Health_Checking_Tool",
            "HubSpot.Deal_Pipeline_Overview",
            "Rember.choices"
        ],
        "query": "What are the key findings and recommendations in the uploaded annual financial report?",
        "response_time": 319.9737071990967,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.57
    },
    {
        "expected_tools": [
            "CoinGecko.simple_coin_info"
        ],
        "matching_tools": [
            "CoinGecko.simple_coin_info"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "CoinGecko.exchange_info",
            "CoinGecko.coin_price",
            "CoinGecko.coin_market_cap",
            "CoinGecko.coin_market_chart",
            "CoinGecko.coin_historical_price",
            "Hyperbrowser.web_browser",
            "Logfire.search_python_docs",
            "LINE.Profile",
            "LaunchDarkly.account"
        ],
        "returned_tools": [
            "CoinGecko.simple_coin_info",
            "CoinGecko.exchange_info",
            "CoinGecko.coin_price",
            "CoinGecko.coin_market_cap",
            "CoinGecko.coin_market_chart",
            "CoinGecko.coin_historical_price",
            "Hyperbrowser.web_browser",
            "Logfire.search_python_docs",
            "LINE.Profile",
            "LaunchDarkly.account"
        ],
        "query": "Get the basic information (symbol, name, id, and logo) for the cryptocurrency Ethereum.",
        "response_time": 301.5437126159668,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_storage_blob_delete"
        ],
        "matching_tools": [
            "Azure.azmcp_storage_blob_delete"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_cosmos_database_container_item_delete",
            "Azure.azmcp_search_index_delete",
            "GitHub.DeleteFile",
            "Azure.azmcp_storage_blob_list",
            "Azure.azmcp_storage_container_list",
            "Shortcut.Delete",
            "VSCode.vscode_fs_delete_file",
            "Azure.azmcp_storage_account_list",
            "Azure.azmcp_storage_blob_download"
        ],
        "returned_tools": [
            "Azure.azmcp_storage_blob_delete",
            "Azure.azmcp_cosmos_database_container_item_delete",
            "Azure.azmcp_search_index_delete",
            "GitHub.DeleteFile",
            "Azure.azmcp_storage_blob_list",
            "Azure.azmcp_storage_container_list",
            "Shortcut.Delete",
            "VSCode.vscode_fs_delete_file",
            "Azure.azmcp_storage_account_list",
            "Azure.azmcp_storage_blob_download"
        ],
        "query": "Delete the blob named 'backup2023.zip' from the 'archives' container in the 'companydata' storage account.",
        "response_time": 304.52752113342285,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.14
    },
    {
        "expected_tools": [
            "GitHub.SearchIssues"
        ],
        "matching_tools": [
            "GitHub.SearchIssues"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetIssue",
            "SonarQube.List_Issues",
            "GitHub.GetIssueComments",
            "GitHub.ListIssues",
            "GitHub.ListCodeScanningAlerts",
            "GitHub.UpdateIssue",
            "Shortcut.Ask",
            "GitHub.AssignCopilotToIssue",
            "GitHub.SearchPullRequests"
        ],
        "returned_tools": [
            "GitHub.GetIssue",
            "SonarQube.List_Issues",
            "GitHub.SearchIssues",
            "GitHub.GetIssueComments",
            "GitHub.ListIssues",
            "GitHub.ListCodeScanningAlerts",
            "GitHub.UpdateIssue",
            "Shortcut.Ask",
            "GitHub.AssignCopilotToIssue",
            "GitHub.SearchPullRequests"
        ],
        "query": "Find all open issues labeled 'bug' in the tensorflow/tensorflow repository created in the last 7 days",
        "response_time": 313.82060050964355,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.29
    },
    {
        "expected_tools": [
            "GitHub.CreateRepository"
        ],
        "matching_tools": [
            "GitHub.CreateRepository"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.CreateBranch",
            "GitHub.CreateOrUpdateFile",
            "VSCode.vscode_git_create_branch",
            "GitHub.ListTags",
            "GitHub.RunWorkflow",
            "GitHub.ForkRepository",
            "VSCode.vscode_terminal_create",
            "GitHub.SearchOrgs",
            "Hyperbrowser.code_editor"
        ],
        "returned_tools": [
            "GitHub.CreateRepository",
            "GitHub.CreateBranch",
            "GitHub.CreateOrUpdateFile",
            "VSCode.vscode_git_create_branch",
            "GitHub.ListTags",
            "GitHub.RunWorkflow",
            "GitHub.ForkRepository",
            "VSCode.vscode_terminal_create",
            "GitHub.SearchOrgs",
            "Hyperbrowser.code_editor"
        ],
        "query": "Create a new GitHub repository named 'project-alpha' with a description 'Initial repository for Project Alpha' and set it as private.",
        "response_time": 314.9149417877197,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "OpsLevel.code/ci"
        ],
        "matching_tools": [
            "OpsLevel.code/ci"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpsLevel.actions/github_actions",
            "OpsLevel.code/license",
            "OpsLevel.security/codeql",
            "OpsLevel.docs/readme",
            "GitHub.SearchOrgs",
            "OpsLevel.code/test",
            "OpsLevel.docs/contributing",
            "GitHub.GetFileContents",
            "GitHub.ForkRepository"
        ],
        "returned_tools": [
            "OpsLevel.code/ci",
            "OpsLevel.actions/github_actions",
            "OpsLevel.code/license",
            "OpsLevel.security/codeql",
            "OpsLevel.docs/readme",
            "GitHub.SearchOrgs",
            "OpsLevel.code/test",
            "OpsLevel.docs/contributing",
            "GitHub.GetFileContents",
            "GitHub.ForkRepository"
        ],
        "query": "Does the repository contain any continuous integration configuration files such as .travis.yml, circle.yml, .github/workflows, .gitlab-ci.yml, or Jenkinsfile?",
        "response_time": 325.5884647369385,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.RerunFailedJobs"
        ],
        "matching_tools": [
            "GitHub.RerunFailedJobs"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.RerunWorkflowRun",
            "GitHub.GetWorkflowRun",
            "GitHub.CancelWorkflowRun",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.ListWorkflowJobs",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.ListWorkflowRuns",
            "GitHub.CreateIssue",
            "GitHub.ListWorkflowRunArtifacts"
        ],
        "returned_tools": [
            "GitHub.RerunFailedJobs",
            "GitHub.RerunWorkflowRun",
            "GitHub.GetWorkflowRun",
            "GitHub.CancelWorkflowRun",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.ListWorkflowJobs",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.ListWorkflowRuns",
            "GitHub.CreateIssue",
            "GitHub.ListWorkflowRunArtifacts"
        ],
        "query": "Rerun only the failed jobs from the latest workflow run in the repository 'octocat/Hello-World'.",
        "response_time": 344.70486640930176,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Tianji.search"
        ],
        "matching_tools": [
            "Tianji.search"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Tianji.answer",
            "Tianji.question",
            "Tianji.notification",
            "Tianji.comment",
            "Tianji.vote",
            "Sophtron.VerifyAccount",
            "OctoEverywhere.Knowledge",
            "LaunchDarkly.account",
            "Liveblocks.admin_get_user_roles"
        ],
        "returned_tools": [
            "Tianji.search",
            "Tianji.answer",
            "Tianji.question",
            "Tianji.notification",
            "Tianji.comment",
            "Tianji.vote",
            "Sophtron.VerifyAccount",
            "OctoEverywhere.Knowledge",
            "LaunchDarkly.account",
            "Liveblocks.admin_get_user_roles"
        ],
        "query": "What are the most frequently asked questions about account recovery?",
        "response_time": 292.80591011047363,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 4.29
    },
    {
        "expected_tools": [
            "Drata.Continuous_Control_Monitoring"
        ],
        "matching_tools": [
            "Drata.Continuous_Control_Monitoring"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Drata.Access_Reviews",
            "Drata.Evidence_Collection",
            "Drata.Asset_Inventory",
            "Drata.Vendor_Risk_Management",
            "OpenSearch.get_cluster_state",
            "Drata.Policy_Management",
            "NanoVMs.MCP_Image_Management",
            "JFrog.iac_scan",
            "ThoughtSpot.license"
        ],
        "returned_tools": [
            "Drata.Continuous_Control_Monitoring",
            "Drata.Access_Reviews",
            "Drata.Evidence_Collection",
            "Drata.Asset_Inventory",
            "Drata.Vendor_Risk_Management",
            "OpenSearch.get_cluster_state",
            "Drata.Policy_Management",
            "NanoVMs.MCP_Image_Management",
            "JFrog.iac_scan",
            "ThoughtSpot.license"
        ],
        "query": "Show me all current technical controls that are in a non-compliant state across our cloud infrastructure.",
        "response_time": 305.513858795166,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "Tianji.answer"
        ],
        "matching_tools": [
            "Tianji.answer"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Tianji.question",
            "Tianji.search",
            "Tianji.comment",
            "Tianji.vote",
            "Tianji.notification",
            "AllVoiceLab.QA",
            "UnifAI.Ask",
            "UnifAI.DocumentQA",
            "Hyperbrowser.web_browser"
        ],
        "returned_tools": [
            "Tianji.answer",
            "Tianji.question",
            "Tianji.search",
            "Tianji.comment",
            "Tianji.vote",
            "Tianji.notification",
            "AllVoiceLab.QA",
            "UnifAI.Ask",
            "UnifAI.DocumentQA",
            "Hyperbrowser.web_browser"
        ],
        "query": "Submit an answer to question ID 12345 with the content: 'The capital of France is Paris.'",
        "response_time": 316.558837890625,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "YepCode.redis"
        ],
        "matching_tools": [
            "YepCode.redis"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Upstash.String",
            "YepCode.rest",
            "Upstash.Set",
            "Azure.azmcp_appconfig_kv_show",
            "Netdata.data_query",
            "Upstash.Hash",
            "Azure.azmcp_keyvault_key_get",
            "GitHub.GetFileContents",
            "Liveblocks.admin_get_user_roles"
        ],
        "returned_tools": [
            "YepCode.redis",
            "Upstash.String",
            "YepCode.rest",
            "Upstash.Set",
            "Azure.azmcp_appconfig_kv_show",
            "Netdata.data_query",
            "Upstash.Hash",
            "Azure.azmcp_keyvault_key_get",
            "GitHub.GetFileContents",
            "Liveblocks.admin_get_user_roles"
        ],
        "query": "Retrieve the value stored for the key 'user:1234:session' from the Redis database.",
        "response_time": 301.41758918762207,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Hyperbrowser.bash"
        ],
        "matching_tools": [
            "Hyperbrowser.bash"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hyperbrowser.file_manager",
            "Hyperbrowser.web_browser",
            "VSCode.vscode_fs_list_directory",
            "Hyperbolic.terminal",
            "Hyperbrowser.code_editor",
            "VSCode.vscode_workspace_list_folders",
            "Hyperbolic.book_search",
            "Liveblocks.list_rooms",
            "Shortcut.List"
        ],
        "returned_tools": [
            "Hyperbrowser.file_manager",
            "Hyperbrowser.web_browser",
            "VSCode.vscode_fs_list_directory",
            "Hyperbrowser.bash",
            "Hyperbolic.terminal",
            "Hyperbrowser.code_editor",
            "VSCode.vscode_workspace_list_folders",
            "Hyperbolic.book_search",
            "Liveblocks.list_rooms",
            "Shortcut.List"
        ],
        "query": "List all files and directories in the current working directory using the 'ls -al' command.",
        "response_time": 309.3447685241699,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "GitHub.ListCommits"
        ],
        "matching_tools": [
            "GitHub.ListCommits"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetCommit",
            "GitHub.GetFileContents",
            "GitHub.SearchCode",
            "GitHub.GetWorkflowRunLogs",
            "Netdata.log_tail",
            "GitHub.UpdatePullRequestBranch",
            "GitHub.SearchPullRequests",
            "GitHub.MergePullRequest",
            "GitHub.ListWorkflowJobs"
        ],
        "returned_tools": [
            "GitHub.ListCommits",
            "GitHub.GetCommit",
            "GitHub.GetFileContents",
            "GitHub.SearchCode",
            "GitHub.GetWorkflowRunLogs",
            "Netdata.log_tail",
            "GitHub.UpdatePullRequestBranch",
            "GitHub.SearchPullRequests",
            "GitHub.MergePullRequest",
            "GitHub.ListWorkflowJobs"
        ],
        "query": "List the most recent commits in the repository 'tensorflow/tensorflow'.",
        "response_time": 305.8736324310303,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.71
    },
    {
        "expected_tools": [
            "Hyperbrowser.python"
        ],
        "matching_tools": [
            "Hyperbrowser.python"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hyperbrowser.web_browser",
            "Hyperbrowser.code_editor",
            "Hyperbolic.python",
            "Hyperbrowser.bash",
            "Zapier.Code_by_Zapier",
            "Octagon.ask_calculator",
            "Logfire.search_python_docs",
            "Hyperbrowser.file_manager",
            "Riza.text_completion"
        ],
        "returned_tools": [
            "Hyperbrowser.python",
            "Hyperbrowser.web_browser",
            "Hyperbrowser.code_editor",
            "Hyperbolic.python",
            "Hyperbrowser.bash",
            "Zapier.Code_by_Zapier",
            "Octagon.ask_calculator",
            "Logfire.search_python_docs",
            "Hyperbrowser.file_manager",
            "Riza.text_completion"
        ],
        "query": "Write a Python script that calculates the factorial of a given number.",
        "response_time": 291.0737991333008,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Hiveflow.Search"
        ],
        "matching_tools": [
            "Hiveflow.Search"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hiveflow.Knowledge_Base",
            "Hiveflow.Workflow_Engine",
            "Hyperbolic.book_search",
            "Hiveflow.Prompt_Templates",
            "Hiveflow.Data_Connector",
            "Octagon.ask_retrieval",
            "Hiveflow.User_-_Access_Management",
            "Notion.get_database",
            "OpenSearch.get_cluster_state"
        ],
        "returned_tools": [
            "Hiveflow.Search",
            "Hiveflow.Knowledge_Base",
            "Hiveflow.Workflow_Engine",
            "Hyperbolic.book_search",
            "Hiveflow.Prompt_Templates",
            "Hiveflow.Data_Connector",
            "Octagon.ask_retrieval",
            "Hiveflow.User_-_Access_Management",
            "Notion.get_database",
            "OpenSearch.get_cluster_state"
        ],
        "query": "Find all documents related to renewable energy policies published after 2020, ranked by relevance.",
        "response_time": 300.54593086242676,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "GitHub.ListBranches"
        ],
        "matching_tools": [
            "GitHub.ListBranches"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_git_branch_list",
            "GitHub.SearchOrgs",
            "PlayCanvas.branch",
            "GitHub.ListTags",
            "GitHub.GetFileContents",
            "SonarQube.List_Projects",
            "GitHub.ForkRepository",
            "GitHub.CreateOrUpdateFile",
            "GitHub.ListWorkflowRuns"
        ],
        "returned_tools": [
            "GitHub.ListBranches",
            "VSCode.vscode_git_branch_list",
            "GitHub.SearchOrgs",
            "PlayCanvas.branch",
            "GitHub.ListTags",
            "GitHub.GetFileContents",
            "SonarQube.List_Projects",
            "GitHub.ForkRepository",
            "GitHub.CreateOrUpdateFile",
            "GitHub.ListWorkflowRuns"
        ],
        "query": "List all branches for the repository 'octocat/Hello-World'.",
        "response_time": 314.9845600128174,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.57
    },
    {
        "expected_tools": [
            "GitHub.DeleteWorkflowRunLogs"
        ],
        "matching_tools": [
            "GitHub.DeleteWorkflowRunLogs"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.CancelWorkflowRun",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.GetWorkflowRun",
            "GitHub.DeleteFile",
            "GitHub.DownloadWorkflowRunArtifact",
            "Shortcut.Delete",
            "GitHub.ListWorkflowRuns",
            "GitHub.ListWorkflowRunArtifacts",
            "GitHub.GetJobLogs"
        ],
        "returned_tools": [
            "GitHub.DeleteWorkflowRunLogs",
            "GitHub.CancelWorkflowRun",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.GetWorkflowRun",
            "GitHub.DeleteFile",
            "GitHub.DownloadWorkflowRunArtifact",
            "Shortcut.Delete",
            "GitHub.ListWorkflowRuns",
            "GitHub.ListWorkflowRunArtifacts",
            "GitHub.GetJobLogs"
        ],
        "query": "Delete the logs for workflow run ID 123456 in the repository 'octocat/Hello-World'.",
        "response_time": 302.11472511291504,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Octagon.ask_calculator"
        ],
        "matching_tools": [
            "Octagon.ask_calculator"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Octagon.ask_code",
            "TextIn.formula_recognition",
            "Octagon.classify",
            "Octagon.summarize",
            "Octagon.extract",
            "Octagon.ask_retrieval",
            "Hyperbolic.python",
            "Hyperbrowser.code_editor",
            "OpenSearch.get_cluster_state"
        ],
        "returned_tools": [
            "Octagon.ask_calculator",
            "Octagon.ask_code",
            "TextIn.formula_recognition",
            "Octagon.classify",
            "Octagon.summarize",
            "Octagon.extract",
            "Octagon.ask_retrieval",
            "Hyperbolic.python",
            "Hyperbrowser.code_editor",
            "OpenSearch.get_cluster_state"
        ],
        "query": "What is the square root of 256?",
        "response_time": 289.77251052856445,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.29
    },
    {
        "expected_tools": [
            "GitHub.GetPullRequestStatus"
        ],
        "matching_tools": [
            "GitHub.GetPullRequestStatus"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.MergePullRequest",
            "GitHub.GetPullRequestDiff",
            "GitHub.SearchPullRequests",
            "GitHub.GetPullRequest",
            "GitHub.SubmitPendingPullRequestReview",
            "GitHub.ListPullRequests",
            "GitHub.GetPullRequestFiles",
            "GitHub.UpdatePullRequestBranch",
            "GitHub.UpdatePullRequest"
        ],
        "returned_tools": [
            "GitHub.GetPullRequestStatus",
            "GitHub.MergePullRequest",
            "GitHub.GetPullRequestDiff",
            "GitHub.SearchPullRequests",
            "GitHub.GetPullRequest",
            "GitHub.SubmitPendingPullRequestReview",
            "GitHub.ListPullRequests",
            "GitHub.GetPullRequestFiles",
            "GitHub.UpdatePullRequestBranch",
            "GitHub.UpdatePullRequest"
        ],
        "query": "What is the current status and mergeability of pull request #42 in the repository octocat/Hello-World?",
        "response_time": 296.889066696167,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "ZIZAI Recruitment.locker"
        ],
        "matching_tools": [
            "ZIZAI Recruitment.locker"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "ZIZAI Recruitment.settings",
            "ZIZAI Recruitment.injector",
            "ZIZAI Recruitment.mapper",
            "ZIZAI Recruitment.context",
            "ZIZAI Recruitment.task",
            "ZIZAI Recruitment.validator",
            "Klaviyo.Profiles",
            "Campertunity.userProfile",
            "Azure.azmcp_appconfig_kv_lock"
        ],
        "returned_tools": [
            "ZIZAI Recruitment.locker",
            "ZIZAI Recruitment.settings",
            "ZIZAI Recruitment.injector",
            "ZIZAI Recruitment.mapper",
            "ZIZAI Recruitment.context",
            "ZIZAI Recruitment.task",
            "ZIZAI Recruitment.validator",
            "Klaviyo.Profiles",
            "Campertunity.userProfile",
            "Azure.azmcp_appconfig_kv_lock"
        ],
        "query": "How can I prevent race conditions when multiple microservices attempt to update the same user profile record simultaneously?",
        "response_time": 315.36245346069336,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 6.0
    },
    {
        "expected_tools": [
            "GitHub.DismissNotification"
        ],
        "matching_tools": [
            "GitHub.DismissNotification"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.ManageRepositoryNotificationSubscription",
            "GitHub.ManageNotificationSubscription",
            "GitHub.GetIssue",
            "GitHub.GetNotificationDetails",
            "GitHub.SearchIssues",
            "GitHub.GetIssueComments",
            "GitHub.ListIssues",
            "GitHub.AssignCopilotToIssue",
            "GitHub.MarkAllNotificationsRead"
        ],
        "returned_tools": [
            "GitHub.DismissNotification",
            "GitHub.ManageRepositoryNotificationSubscription",
            "GitHub.ManageNotificationSubscription",
            "GitHub.GetIssue",
            "GitHub.GetNotificationDetails",
            "GitHub.SearchIssues",
            "GitHub.GetIssueComments",
            "GitHub.ListIssues",
            "GitHub.AssignCopilotToIssue",
            "GitHub.MarkAllNotificationsRead"
        ],
        "query": "Dismiss the notification for issue #123 in the repository octocat/Hello-World.",
        "response_time": 355.64661026000977,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Notion.search_users"
        ],
        "matching_tools": [
            "Notion.search_users"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Liveblocks.admin_get_user_roles",
            "Notion.get_user",
            "Notion.search_blocks",
            "Notion.get_database",
            "PlayCanvas.user",
            "GitHub.SearchUsers",
            "Notion.search_databases",
            "Notion.query_database",
            "Notion.get_block"
        ],
        "returned_tools": [
            "Notion.search_users",
            "Liveblocks.admin_get_user_roles",
            "Notion.get_user",
            "Notion.search_blocks",
            "Notion.get_database",
            "PlayCanvas.user",
            "GitHub.SearchUsers",
            "Notion.search_databases",
            "Notion.query_database",
            "Notion.get_block"
        ],
        "query": "Find all users named 'Alex Johnson' in the Notion workspace.",
        "response_time": 284.69109535217285,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Netdata.alarms_list"
        ],
        "matching_tools": [
            "Netdata.alarms_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Netdata.alarms_silence",
            "Netdata.netdata_info",
            "Netdata.alarms_unsilence",
            "Netdata.data_query",
            "Netdata.netdata_config",
            "Netdata.netdata_stats",
            "Netdata.log_tail",
            "Netdata.system_info",
            "GitHub.ListSecretScanningAlerts"
        ],
        "returned_tools": [
            "Netdata.alarms_list",
            "Netdata.alarms_silence",
            "Netdata.netdata_info",
            "Netdata.alarms_unsilence",
            "Netdata.data_query",
            "Netdata.netdata_config",
            "Netdata.netdata_stats",
            "Netdata.log_tail",
            "Netdata.system_info",
            "GitHub.ListSecretScanningAlerts"
        ],
        "query": "List all current alarms, both active and inactive, on the Netdata agent.",
        "response_time": 315.68169593811035,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Auth0.Policies"
        ],
        "matching_tools": [
            "Auth0.Policies"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Auth0.Permissions",
            "Auth0.Entitlements",
            "Auth0.Resource_Registration",
            "Yunxin.Permission_-_Role_Management",
            "Linear.Permissions",
            "Liveblocks.admin_set_user_roles",
            "Auth0.Identities",
            "Auth0.Audience_Listing",
            "Hiveflow.User_-_Access_Management"
        ],
        "returned_tools": [
            "Auth0.Policies",
            "Auth0.Permissions",
            "Auth0.Entitlements",
            "Auth0.Resource_Registration",
            "Yunxin.Permission_-_Role_Management",
            "Linear.Permissions",
            "Liveblocks.admin_set_user_roles",
            "Auth0.Identities",
            "Auth0.Audience_Listing",
            "Hiveflow.User_-_Access_Management"
        ],
        "query": "List all access policies that grant permissions to the 'admin' role for the 'finance' resource.",
        "response_time": 300.10533332824707,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.86
    },
    {
        "expected_tools": [
            "Hyperbolic.book_search"
        ],
        "matching_tools": [
            "Hyperbolic.book_search"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hyperbolic.wikidata",
            "Hyperbolic.python",
            "Hyperbolic.site_search",
            "Hyperbolic.terminal",
            "Hyperbolic.web_search",
            "OpenSearch.search",
            "TextIn.formula_recognition",
            "Hiveflow.Search",
            "Memgraph.Procedures_Catalog"
        ],
        "returned_tools": [
            "Hyperbolic.book_search",
            "Hyperbolic.wikidata",
            "Hyperbolic.python",
            "Hyperbolic.site_search",
            "Hyperbolic.terminal",
            "Hyperbolic.web_search",
            "OpenSearch.search",
            "TextIn.formula_recognition",
            "Hiveflow.Search",
            "Memgraph.Procedures_Catalog"
        ],
        "query": "Find books or documents related to quantum computing fundamentals.",
        "response_time": 280.26890754699707,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "HubSpot.CRM_Search"
        ],
        "matching_tools": [
            "HubSpot.CRM_Search"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "HubSpot.Contact_Insights",
            "HubSpot.Ticket_Management",
            "Klaviyo.Lists_and_Segments",
            "HubSpot.Marketing_Email_Analytics",
            "HubSpot.Workflow_Insights",
            "klusterai.Profiling",
            "Auth0.Audience_Listing",
            "Netdata.alarms_unsilence",
            "Shortcut.List"
        ],
        "returned_tools": [
            "HubSpot.Contact_Insights",
            "HubSpot.CRM_Search",
            "HubSpot.Ticket_Management",
            "Klaviyo.Lists_and_Segments",
            "HubSpot.Marketing_Email_Analytics",
            "HubSpot.Workflow_Insights",
            "klusterai.Profiling",
            "Auth0.Audience_Listing",
            "Netdata.alarms_unsilence",
            "Shortcut.List"
        ],
        "query": "Show me all contacts who have not been emailed in the last 30 days",
        "response_time": 299.9570369720459,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.29
    },
    {
        "expected_tools": [
            "klusterai.Limit"
        ],
        "matching_tools": [
            "klusterai.Limit"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "klusterai.Ordering",
            "klusterai.Profiling",
            "klusterai.Joins",
            "klusterai.Grouping",
            "klusterai.Metrics",
            "klusterai.Filters",
            "OpenSearch.get_cluster_state",
            "Memgraph.Graph_Schema_Viewer",
            "Zapier.Email_Parser"
        ],
        "returned_tools": [
            "klusterai.Ordering",
            "klusterai.Profiling",
            "klusterai.Joins",
            "klusterai.Grouping",
            "klusterai.Metrics",
            "klusterai.Filters",
            "klusterai.Limit",
            "OpenSearch.get_cluster_state",
            "Memgraph.Graph_Schema_Viewer",
            "Zapier.Email_Parser"
        ],
        "query": "Show me the first 10 entries from the customer orders dataset.",
        "response_time": 290.90213775634766,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_cosmos_container_list"
        ],
        "matching_tools": [
            "Azure.azmcp_cosmos_container_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_cosmos_database_container_item_query",
            "Azure.azmcp_cosmos_database_container_item_insert",
            "Azure.azmcp_cosmos_database_list",
            "Azure.azmcp_cosmos_account_list",
            "Azure.azmcp_storage_container_list",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_storage_account_list",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_storage_blob_list"
        ],
        "returned_tools": [
            "Azure.azmcp_cosmos_container_list",
            "Azure.azmcp_cosmos_database_container_item_query",
            "Azure.azmcp_cosmos_database_container_item_insert",
            "Azure.azmcp_cosmos_database_list",
            "Azure.azmcp_cosmos_account_list",
            "Azure.azmcp_storage_container_list",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_storage_account_list",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_storage_blob_list"
        ],
        "query": "List all containers in the 'customerData' Cosmos DB database.",
        "response_time": 278.0797481536865,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.57
    },
    {
        "expected_tools": [
            "ThoughtSpot.service"
        ],
        "matching_tools": [
            "ThoughtSpot.service"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "ThoughtSpot.license",
            "ThoughtSpot.admin",
            "ThoughtSpot.upgrade",
            "ThoughtSpot.cluster",
            "ThoughtSpot.backup",
            "ThoughtSpot.analytics",
            "Nutrient.Health_Checking_Tool",
            "GitHub.GetPullRequestStatus",
            "OpenSearch.get_cluster_state"
        ],
        "returned_tools": [
            "ThoughtSpot.service",
            "ThoughtSpot.license",
            "ThoughtSpot.admin",
            "ThoughtSpot.upgrade",
            "ThoughtSpot.cluster",
            "ThoughtSpot.backup",
            "ThoughtSpot.analytics",
            "Nutrient.Health_Checking_Tool",
            "GitHub.GetPullRequestStatus",
            "OpenSearch.get_cluster_state"
        ],
        "query": "Check the current status of the ThoughtSpot service and restart it if it is not running.",
        "response_time": 315.66309928894043,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Shortcut.Create"
        ],
        "matching_tools": [
            "Shortcut.Create"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Shortcut.Update",
            "ThoughtSpot.admin",
            "Shortcut.Comment",
            "GitHub.CreateOrUpdateFile",
            "GitHub.CreateIssue",
            "Tianji.question",
            "Shortcut.List",
            "Azure.azmcp_keyvault_key_create",
            "Shortcut.Ask"
        ],
        "returned_tools": [
            "Shortcut.Create",
            "Shortcut.Update",
            "ThoughtSpot.admin",
            "Shortcut.Comment",
            "GitHub.CreateOrUpdateFile",
            "GitHub.CreateIssue",
            "Tianji.question",
            "Shortcut.List",
            "Azure.azmcp_keyvault_key_create",
            "Shortcut.Ask"
        ],
        "query": "Create a new story titled 'User cannot reset password on mobile app' and assign it to the Mobile Team.",
        "response_time": 319.4866180419922,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.GetPullRequestFiles"
        ],
        "matching_tools": [
            "GitHub.GetPullRequestFiles"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetPullRequest",
            "GitHub.SearchPullRequests",
            "GitHub.GetFileContents",
            "GitHub.ListPullRequests",
            "GitHub.MergePullRequest",
            "GitHub.GetPullRequestComments",
            "GitHub.GetPullRequestReviews",
            "GitHub.GetPullRequestDiff",
            "GitHub.ListCommits"
        ],
        "returned_tools": [
            "GitHub.GetPullRequestFiles",
            "GitHub.GetPullRequest",
            "GitHub.SearchPullRequests",
            "GitHub.GetFileContents",
            "GitHub.ListPullRequests",
            "GitHub.MergePullRequest",
            "GitHub.GetPullRequestComments",
            "GitHub.GetPullRequestReviews",
            "GitHub.GetPullRequestDiff",
            "GitHub.ListCommits"
        ],
        "query": "List all files that were modified in pull request #42 in the repository octocat/Hello-World.",
        "response_time": 286.82422637939453,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.71
    },
    {
        "expected_tools": [
            "TextIn.ocr"
        ],
        "matching_tools": [
            "TextIn.ocr"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "TextIn.printer_paper_recognition",
            "TextIn.table_recognition",
            "UnifAI.OCR",
            "TextIn.id_ocr",
            "TextIn.formula_recognition",
            "TextIn.speech_recognition",
            "TextIn.invoice_ocr",
            "OpenSearch.search",
            "Hyperbrowser.web_browser"
        ],
        "returned_tools": [
            "TextIn.ocr",
            "TextIn.printer_paper_recognition",
            "TextIn.table_recognition",
            "UnifAI.OCR",
            "TextIn.id_ocr",
            "TextIn.formula_recognition",
            "TextIn.speech_recognition",
            "TextIn.invoice_ocr",
            "OpenSearch.search",
            "Hyperbrowser.web_browser"
        ],
        "query": "Extract all text from this scanned PDF of a handwritten letter.",
        "response_time": 307.3291778564453,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.14
    },
    {
        "expected_tools": [
            "Logfire.get_function_doc"
        ],
        "matching_tools": [
            "Logfire.get_function_doc"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Logfire.search_python_docs",
            "Logfire.list_python_packages",
            "Logfire.ask_openai_chat",
            "Rember.compose",
            "Logfire.ask_ollama_chat",
            "Hyperbrowser.python",
            "Hyperbolic.python",
            "klusterai.Joins",
            "VSCode.vscode_fs_read_file"
        ],
        "returned_tools": [
            "Logfire.search_python_docs",
            "Logfire.get_function_doc",
            "Logfire.list_python_packages",
            "Logfire.ask_openai_chat",
            "Rember.compose",
            "Logfire.ask_ollama_chat",
            "Hyperbrowser.python",
            "Hyperbolic.python",
            "klusterai.Joins",
            "VSCode.vscode_fs_read_file"
        ],
        "query": "What is the docstring and documentation for the Python function 'os.path.join'?",
        "response_time": 292.71459579467773,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "GitHub.GetWorkflowRunLogs"
        ],
        "matching_tools": [
            "GitHub.GetWorkflowRunLogs"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetJobLogs",
            "GitHub.GetWorkflowRun",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.ListWorkflowRunArtifacts",
            "GitHub.ListWorkflowRuns",
            "GitHub.DeleteWorkflowRunLogs",
            "GitHub.RunWorkflow",
            "GitHub.ListWorkflowJobs",
            "GitHub.GetFileContents"
        ],
        "returned_tools": [
            "GitHub.GetWorkflowRunLogs",
            "GitHub.GetJobLogs",
            "GitHub.GetWorkflowRun",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.ListWorkflowRunArtifacts",
            "GitHub.ListWorkflowRuns",
            "GitHub.DeleteWorkflowRunLogs",
            "GitHub.RunWorkflow",
            "GitHub.ListWorkflowJobs",
            "GitHub.GetFileContents"
        ],
        "query": "Get the log output for workflow run ID 123456 in the repository 'octocat/Hello-World'.",
        "response_time": 315.6931400299072,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.14
    },
    {
        "expected_tools": [
            "GitHub.ListWorkflows"
        ],
        "matching_tools": [
            "GitHub.ListWorkflows"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.ListWorkflowRuns",
            "GitHub.ListWorkflowJobs",
            "GitHub.GetWorkflowRun",
            "OpsLevel.actions/github_actions",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.ListWorkflowRunArtifacts",
            "GitHub.RunWorkflow",
            "GitHub.ListAvailableToolsets",
            "VSCode.vscode_task_list"
        ],
        "returned_tools": [
            "GitHub.ListWorkflows",
            "GitHub.ListWorkflowRuns",
            "GitHub.ListWorkflowJobs",
            "GitHub.GetWorkflowRun",
            "OpsLevel.actions/github_actions",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.ListWorkflowRunArtifacts",
            "GitHub.RunWorkflow",
            "GitHub.ListAvailableToolsets",
            "VSCode.vscode_task_list"
        ],
        "query": "List all workflows configured in the repository 'octocat/Hello-World'.",
        "response_time": 277.67348289489746,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Upstash.PubSub"
        ],
        "matching_tools": [
            "Upstash.PubSub"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.ManageRepositoryNotificationSubscription",
            "GitHub.ManageNotificationSubscription",
            "Upstash.List",
            "Upstash.Hash",
            "Upstash.Set",
            "GitHub.ListNotifications",
            "Tianji.notification",
            "GitHub.MarkAllNotificationsRead",
            "Upstash.ZSet"
        ],
        "returned_tools": [
            "Upstash.PubSub",
            "GitHub.ManageRepositoryNotificationSubscription",
            "GitHub.ManageNotificationSubscription",
            "Upstash.List",
            "Upstash.Hash",
            "Upstash.Set",
            "GitHub.ListNotifications",
            "Tianji.notification",
            "GitHub.MarkAllNotificationsRead",
            "Upstash.ZSet"
        ],
        "query": "Subscribe to notifications channel for real-time updates",
        "response_time": 311.9661808013916,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "HubSpot.Deal_Pipeline_Overview"
        ],
        "matching_tools": [
            "HubSpot.Deal_Pipeline_Overview"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "HubSpot.CRM_Search",
            "klusterai.Metrics",
            "HubSpot.Workflow_Insights",
            "HubSpot.Contact_Insights",
            "Shortcut.Summarize",
            "HubSpot.Marketing_Email_Analytics",
            "klusterai.Profiling",
            "OpenSearch.get_cluster_state",
            "Memgraph.Graph_Schema_Viewer"
        ],
        "returned_tools": [
            "HubSpot.Deal_Pipeline_Overview",
            "HubSpot.CRM_Search",
            "klusterai.Metrics",
            "HubSpot.Workflow_Insights",
            "HubSpot.Contact_Insights",
            "Shortcut.Summarize",
            "HubSpot.Marketing_Email_Analytics",
            "klusterai.Profiling",
            "OpenSearch.get_cluster_state",
            "Memgraph.Graph_Schema_Viewer"
        ],
        "query": "Summarize the current state of our sales pipeline, including the number of deals in each stage, their win probabilities, and the projected revenue for this quarter.",
        "response_time": 312.3319149017334,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "Cloudinary.mcp_authentication"
        ],
        "matching_tools": [
            "Cloudinary.mcp_authentication"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Cloudinary.mcp_logging",
            "Cloudinary.mcp_proxy",
            "LaunchDarkly.user",
            "Cloudinary.mcp_upload",
            "PlayCanvas.session",
            "Cloudinary.mcp_metadata",
            "LaunchDarkly.api_key",
            "Hiveflow.User_-_Access_Management",
            "Yunxin.User_Management"
        ],
        "returned_tools": [
            "Cloudinary.mcp_authentication",
            "Cloudinary.mcp_logging",
            "Cloudinary.mcp_proxy",
            "LaunchDarkly.user",
            "Cloudinary.mcp_upload",
            "PlayCanvas.session",
            "Cloudinary.mcp_metadata",
            "LaunchDarkly.api_key",
            "Hiveflow.User_-_Access_Management",
            "Yunxin.User_Management"
        ],
        "query": "How do I authenticate a user to access MCP endpoints using Cloudinary's authentication mechanisms?",
        "response_time": 287.0304584503174,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.57
    },
    {
        "expected_tools": [
            "Tako.Behavior"
        ],
        "matching_tools": [
            "Tako.Behavior"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Tako.PSTH_Peri_Stimulus_Time_Histogram",
            "Tako.Raster",
            "Tako.Trajectory",
            "Tako.Tuning",
            "Memgraph.Graph_Visualizer",
            "Tako.Cross_correlation",
            "Hyperbrowser.web_browser",
            "Memgraph.Memgraph_Data_Retriever",
            "TextIn.ocr"
        ],
        "returned_tools": [
            "Tako.Behavior",
            "Tako.PSTH_Peri_Stimulus_Time_Histogram",
            "Tako.Raster",
            "Tako.Trajectory",
            "Tako.Tuning",
            "Memgraph.Graph_Visualizer",
            "Tako.Cross_correlation",
            "Hyperbrowser.web_browser",
            "Memgraph.Memgraph_Data_Retriever",
            "TextIn.ocr"
        ],
        "query": "Extract and visualize the timestamps and frequency of lever presses and nose pokes during the operant conditioning experiment for subject A on June 5, 2023.",
        "response_time": 391.467809677124,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.CreateBranch"
        ],
        "matching_tools": [
            "GitHub.CreateBranch"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_git_create_branch",
            "GitHub.CreateRepository",
            "VSCode.vscode_terminal_create",
            "PlayCanvas.branch",
            "GitHub.RunWorkflow",
            "GitHub.CreateOrUpdateFile",
            "Shortcut.Create",
            "GitHub.MergePullRequest",
            "GitHub.CreatePullRequest"
        ],
        "returned_tools": [
            "GitHub.CreateBranch",
            "VSCode.vscode_git_create_branch",
            "GitHub.CreateRepository",
            "VSCode.vscode_terminal_create",
            "PlayCanvas.branch",
            "GitHub.RunWorkflow",
            "GitHub.CreateOrUpdateFile",
            "Shortcut.Create",
            "GitHub.MergePullRequest",
            "GitHub.CreatePullRequest"
        ],
        "query": "Create a new branch called 'feature/login' from the existing 'main' branch in the repository 'my-app'.",
        "response_time": 289.3071174621582,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_debug_stop"
        ],
        "matching_tools": [
            "VSCode.vscode_debug_stop"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_terminal_close",
            "VSCode.vscode_task_list",
            "VSCode.vscode_task_run",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_debug_start",
            "VSCode.vscode_terminal_list",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_settings_update",
            "VSCode.vscode_terminal_run_command"
        ],
        "returned_tools": [
            "VSCode.vscode_debug_stop",
            "VSCode.vscode_terminal_close",
            "VSCode.vscode_task_list",
            "VSCode.vscode_task_run",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_debug_start",
            "VSCode.vscode_terminal_list",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_settings_update",
            "VSCode.vscode_terminal_run_command"
        ],
        "query": "Stop the current active debugging session in VSCode.",
        "response_time": 315.5498504638672,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Klaviyo.Lists_and_Segments"
        ],
        "matching_tools": [
            "Klaviyo.Lists_and_Segments"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Klaviyo.Templates",
            "Klaviyo.Profiles",
            "Klaviyo.Events",
            "klusterai.Profiling",
            "Klaviyo.Catalogs",
            "Liveblocks.admin_get_user_roles",
            "Klaviyo.Flows",
            "LaunchDarkly.account",
            "Shortcut.List"
        ],
        "returned_tools": [
            "Klaviyo.Lists_and_Segments",
            "Klaviyo.Templates",
            "Klaviyo.Profiles",
            "Klaviyo.Events",
            "klusterai.Profiling",
            "Klaviyo.Catalogs",
            "Liveblocks.admin_get_user_roles",
            "Klaviyo.Flows",
            "LaunchDarkly.account",
            "Shortcut.List"
        ],
        "query": "Show me all the current email lists and segments in my Klaviyo account.",
        "response_time": 297.44648933410645,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.43
    },
    {
        "expected_tools": [
            "GitHub.GetWorkflowRunUsage"
        ],
        "matching_tools": [
            "GitHub.GetWorkflowRunUsage"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetWorkflowRun",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.ListWorkflowRuns",
            "GitHub.ListWorkflowRunArtifacts",
            "NanoVMs.Describe_Deployment",
            "GitHub.ListWorkflowJobs",
            "GitHub.RunWorkflow",
            "GitHub.SearchOrgs"
        ],
        "returned_tools": [
            "GitHub.GetWorkflowRunUsage",
            "GitHub.GetWorkflowRun",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.ListWorkflowRuns",
            "GitHub.ListWorkflowRunArtifacts",
            "NanoVMs.Describe_Deployment",
            "GitHub.ListWorkflowJobs",
            "GitHub.RunWorkflow",
            "GitHub.SearchOrgs"
        ],
        "query": "Get the resource usage statistics for workflow run ID 123456 in the repository octocat/Hello-World.",
        "response_time": 391.5829658508301,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.14
    },
    {
        "expected_tools": [
            "Twilio.reporting"
        ],
        "matching_tools": [
            "Twilio.reporting"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Twilio.toolbelt",
            "Twilio.config_management",
            "Twilio.access_management",
            "Twilio.plugin_management",
            "Twilio.project_templates",
            "CodeLogic.Reporting_Engine",
            "LaunchDarkly.account",
            "Sophtron.GetStatements",
            "HubSpot.Ticket_Management"
        ],
        "returned_tools": [
            "Twilio.reporting",
            "Twilio.toolbelt",
            "Twilio.config_management",
            "Twilio.access_management",
            "Twilio.plugin_management",
            "Twilio.project_templates",
            "CodeLogic.Reporting_Engine",
            "LaunchDarkly.account",
            "Sophtron.GetStatements",
            "HubSpot.Ticket_Management"
        ],
        "query": "Generate a report showing the total number of SMS messages sent and received across all Twilio accounts in the last month, including any account errors encountered.",
        "response_time": 321.5959072113037,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.14
    },
    {
        "expected_tools": [
            "Klaviyo.Templates"
        ],
        "matching_tools": [
            "Klaviyo.Templates"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "LINE.Confirm",
            "Klaviyo.Flows",
            "Klaviyo.Lists_and_Segments",
            "LINE.Buttons",
            "Klaviyo.Events",
            "Hyperbrowser.code_editor",
            "Klaviyo.Catalogs",
            "Twilio.project_templates",
            "Klaviyo.Profiles"
        ],
        "returned_tools": [
            "Klaviyo.Templates",
            "LINE.Confirm",
            "Klaviyo.Flows",
            "Klaviyo.Lists_and_Segments",
            "LINE.Buttons",
            "Klaviyo.Events",
            "Hyperbrowser.code_editor",
            "Klaviyo.Catalogs",
            "Twilio.project_templates",
            "Klaviyo.Profiles"
        ],
        "query": "How can I create a custom email template for a summer sale campaign in Klaviyo?",
        "response_time": 299.9110221862793,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.29
    },
    {
        "expected_tools": [
            "Notion.query_database"
        ],
        "matching_tools": [
            "Notion.query_database"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Notion.get_database",
            "Notion.search_databases",
            "Notion.search_blocks",
            "Azure.azmcp_kusto_query",
            "Notion.search_users",
            "Shortcut.Update",
            "LaunchDarkly.project",
            "Octagon.ask_retrieval",
            "Notion.update_database"
        ],
        "returned_tools": [
            "Notion.get_database",
            "Notion.search_databases",
            "Notion.search_blocks",
            "Azure.azmcp_kusto_query",
            "Notion.query_database",
            "Notion.search_users",
            "Shortcut.Update",
            "LaunchDarkly.project",
            "Octagon.ask_retrieval",
            "Notion.update_database"
        ],
        "query": "Find all tasks in the project management database that are marked as 'In Progress' and have a due date within the next 7 days.",
        "response_time": 307.2018623352051,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Hyperbolic.wikidata"
        ],
        "matching_tools": [
            "Hyperbolic.wikidata"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hyperbolic.book_search",
            "Hyperbolic.python",
            "Hyperbolic.web_search",
            "Hyperbolic.site_search",
            "UnifAI.DocumentQA",
            "OpenSearch.get_mapping",
            "UnifAI.ImageDescription",
            "Tianji.search",
            "Memgraph.Graph_Schema_Viewer"
        ],
        "returned_tools": [
            "Hyperbolic.wikidata",
            "Hyperbolic.book_search",
            "Hyperbolic.python",
            "Hyperbolic.web_search",
            "Hyperbolic.site_search",
            "UnifAI.DocumentQA",
            "OpenSearch.get_mapping",
            "UnifAI.ImageDescription",
            "Tianji.search",
            "Memgraph.Graph_Schema_Viewer"
        ],
        "query": "What is the Wikidata Q-code and description for the city of Paris?",
        "response_time": 317.61837005615234,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "Rember.rewrite"
        ],
        "matching_tools": [
            "Rember.rewrite"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Rember.replace",
            "Riza.text_editing",
            "Rember.choices",
            "Rember.compose",
            "Hyperbrowser.web_browser",
            "fetchSERP.Google_News",
            "VSCode.vscode_editor_replace_selection",
            "OpenSearch.get_cluster_state",
            "VSCode.vscode_editor_insert_text"
        ],
        "returned_tools": [
            "Rember.rewrite",
            "Rember.replace",
            "Riza.text_editing",
            "Rember.choices",
            "Rember.compose",
            "Hyperbrowser.web_browser",
            "fetchSERP.Google_News",
            "VSCode.vscode_editor_replace_selection",
            "OpenSearch.get_cluster_state",
            "VSCode.vscode_editor_insert_text"
        ],
        "query": "Paraphrase the following sentence: 'The quick brown fox jumps over the lazy dog.'",
        "response_time": 283.8397026062012,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Globalping.mtr"
        ],
        "matching_tools": [
            "Globalping.mtr"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Globalping.ping",
            "WaveSpeed.Traceroute",
            "Globalping.trace",
            "Globalping.dns",
            "WaveSpeed.Ping",
            "Globalping.http",
            "Globalping.tcp",
            "Hunter.Traceroute",
            "Hunter.Ping"
        ],
        "returned_tools": [
            "Globalping.mtr",
            "Globalping.ping",
            "WaveSpeed.Traceroute",
            "Globalping.trace",
            "Globalping.dns",
            "WaveSpeed.Ping",
            "Globalping.http",
            "Globalping.tcp",
            "Hunter.Traceroute",
            "Hunter.Ping"
        ],
        "query": "Perform an MTR check to google.com from New York to analyze route hops, latency, and packet loss.",
        "response_time": 306.69593811035156,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.71
    },
    {
        "expected_tools": [
            "Upstash.Keys"
        ],
        "matching_tools": [
            "Upstash.Keys"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Upstash.Set",
            "Upstash.String",
            "Upstash.List",
            "Upstash.Hash",
            "Upstash.ZSet",
            "Upstash.PubSub",
            "YepCode.redis",
            "PlayCanvas.session",
            "Liveblocks.admin_get_user_roles"
        ],
        "returned_tools": [
            "Upstash.Keys",
            "Upstash.Set",
            "Upstash.String",
            "Upstash.List",
            "Upstash.Hash",
            "Upstash.ZSet",
            "Upstash.PubSub",
            "YepCode.redis",
            "PlayCanvas.session",
            "Liveblocks.admin_get_user_roles"
        ],
        "query": "Do any keys matching user:session:* exist in the database?",
        "response_time": 316.3635730743408,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Hiveflow.Workflow_Engine"
        ],
        "matching_tools": [
            "Hiveflow.Workflow_Engine"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hiveflow.Knowledge_Base",
            "Hiveflow.Search",
            "Hiveflow.Data_Connector",
            "Hiveflow.Prompt_Templates",
            "ThoughtSpot.analytics",
            "Netdata.data_query",
            "Linear.Schemas",
            "Hiveflow.User_-_Access_Management",
            "Memgraph.Import_Data_Tool"
        ],
        "returned_tools": [
            "Hiveflow.Workflow_Engine",
            "Hiveflow.Knowledge_Base",
            "Hiveflow.Search",
            "Hiveflow.Data_Connector",
            "Hiveflow.Prompt_Templates",
            "ThoughtSpot.analytics",
            "Netdata.data_query",
            "Linear.Schemas",
            "Hiveflow.User_-_Access_Management",
            "Memgraph.Import_Data_Tool"
        ],
        "query": "Design a workflow to automatically extract sales data from the MCP database, transform it into a monthly summary report, and integrate the results into the company's analytics dashboard.",
        "response_time": 1027.9364585876465,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Nutrient.NodeController"
        ],
        "matching_tools": [
            "Nutrient.NodeController"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_settings_update",
            "Nutrient.ResourceController",
            "Nutrient.REST_API",
            "Nutrient.DWS_MCP_Server",
            "Azure.azmcp_appconfig_kv_set",
            "ThoughtSpot.upgrade",
            "Nutrient.GRPC_API",
            "Nutrient.Health_Checking_Tool",
            "VSCode.vscode_settings_get"
        ],
        "returned_tools": [
            "Nutrient.NodeController",
            "VSCode.vscode_settings_update",
            "Nutrient.ResourceController",
            "Nutrient.REST_API",
            "Nutrient.DWS_MCP_Server",
            "Azure.azmcp_appconfig_kv_set",
            "ThoughtSpot.upgrade",
            "Nutrient.GRPC_API",
            "Nutrient.Health_Checking_Tool",
            "VSCode.vscode_settings_get"
        ],
        "query": "Update the configuration of node 'node-123' to increase its memory allocation to 16GB.",
        "response_time": 294.8625087738037,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "OpsLevel.docs/contributing"
        ],
        "matching_tools": [
            "OpsLevel.docs/contributing"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpsLevel.code/license",
            "GitHub.CreateAndSubmitPullRequestReview",
            "OpsLevel.docs/readme",
            "OpsLevel.actions/github_actions",
            "OpsLevel.security/codeql",
            "OpsLevel.code/test",
            "OpsLevel.code/ci",
            "GitHub.RequestCopilotReview",
            "GitHub.ListPullRequests"
        ],
        "returned_tools": [
            "OpsLevel.docs/contributing",
            "OpsLevel.code/license",
            "GitHub.CreateAndSubmitPullRequestReview",
            "OpsLevel.docs/readme",
            "OpsLevel.actions/github_actions",
            "OpsLevel.security/codeql",
            "OpsLevel.code/test",
            "OpsLevel.code/ci",
            "GitHub.RequestCopilotReview",
            "GitHub.ListPullRequests"
        ],
        "query": "Does the repository contain a CONTRIBUTING.md file outlining the guidelines for new contributors, including code style, code review process, and instructions for submitting issues or pull requests?",
        "response_time": 395.200252532959,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 6.43
    },
    {
        "expected_tools": [
            "GitHub.RunWorkflow"
        ],
        "matching_tools": [
            "GitHub.RunWorkflow"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.CreateOrUpdateFile",
            "GitHub.ListTags",
            "AWS.Local_Simulation_of_Step_Functions_Workflows",
            "GitHub.MergePullRequest",
            "GitHub.CreateRepository",
            "GitHub.SearchOrgs",
            "GitHub.ForkRepository",
            "GitHub.GetWorkflowRunLogs",
            "Logfire.search_python_docs"
        ],
        "returned_tools": [
            "GitHub.RunWorkflow",
            "GitHub.CreateOrUpdateFile",
            "GitHub.ListTags",
            "AWS.Local_Simulation_of_Step_Functions_Workflows",
            "GitHub.MergePullRequest",
            "GitHub.CreateRepository",
            "GitHub.SearchOrgs",
            "GitHub.ForkRepository",
            "GitHub.GetWorkflowRunLogs",
            "Logfire.search_python_docs"
        ],
        "query": "Trigger the 'deploy-to-production' workflow in the 'my-org/my-repo' repository on the 'main' branch with custom input parameters.",
        "response_time": 347.5079536437988,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_task_run"
        ],
        "matching_tools": [
            "VSCode.vscode_task_run"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_terminal_run_command",
            "VSCode.vscode_terminal_create",
            "VSCode.vscode_fs_write_file",
            "VSCode.vscode_debug_start",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_copilot_agent_execute",
            "VSCode.vscode_task_list",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_git_create_branch"
        ],
        "returned_tools": [
            "VSCode.vscode_task_run",
            "VSCode.vscode_terminal_run_command",
            "VSCode.vscode_terminal_create",
            "VSCode.vscode_fs_write_file",
            "VSCode.vscode_debug_start",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_copilot_agent_execute",
            "VSCode.vscode_task_list",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_git_create_branch"
        ],
        "query": "Run the 'build' task in VSCode",
        "response_time": 301.11145973205566,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.14
    },
    {
        "expected_tools": [
            "Azure.azmcp_storage_blob_upload"
        ],
        "matching_tools": [
            "Azure.azmcp_storage_blob_upload"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_storage_blob_list",
            "Azure.azmcp_storage_container_list",
            "Azure.azmcp_storage_blob_download",
            "Azure.azmcp_cosmos_database_container_item_insert",
            "Cloudinary.mcp_upload",
            "Azure.azmcp_storage_account_list",
            "Azure.azmcp_cosmos_container_list",
            "Azure.azmcp_kusto_query",
            "GitHub.CreateOrUpdateFile"
        ],
        "returned_tools": [
            "Azure.azmcp_storage_blob_upload",
            "Azure.azmcp_storage_blob_list",
            "Azure.azmcp_storage_container_list",
            "Azure.azmcp_storage_blob_download",
            "Azure.azmcp_cosmos_database_container_item_insert",
            "Cloudinary.mcp_upload",
            "Azure.azmcp_storage_account_list",
            "Azure.azmcp_cosmos_container_list",
            "Azure.azmcp_kusto_query",
            "GitHub.CreateOrUpdateFile"
        ],
        "query": "Upload the file 'annual_report.pdf' to the 'documents' container in Azure Blob Storage.",
        "response_time": 310.3041648864746,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.GetMe"
        ],
        "matching_tools": [
            "GitHub.GetMe"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetTag",
            "GitHub.GetNotificationDetails",
            "GitHub.GetCommit",
            "GitHub.GetSecretScanningAlert",
            "GitHub.GetCodeScanningAlert",
            "Notion.get_user",
            "GitHub.GetWorkflowRun",
            "GitHub.SearchUsers",
            "GitHub.ListNotifications"
        ],
        "returned_tools": [
            "GitHub.GetMe",
            "GitHub.GetTag",
            "GitHub.GetNotificationDetails",
            "GitHub.GetCommit",
            "GitHub.GetSecretScanningAlert",
            "GitHub.GetCodeScanningAlert",
            "Notion.get_user",
            "GitHub.GetWorkflowRun",
            "GitHub.SearchUsers",
            "GitHub.ListNotifications"
        ],
        "query": "Get details about the currently authenticated GitHub user.",
        "response_time": 286.21673583984375,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "DevRev.priority_detection"
        ],
        "matching_tools": [
            "DevRev.priority_detection"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "DevRev.ticket_categorization",
            "DevRev.sentiment_analysis",
            "HubSpot.Ticket_Management",
            "klusterai.Metrics",
            "Tianji.answer",
            "Drata.Vendor_Risk_Management",
            "Tianji.search",
            "UnifAI.DocumentQA",
            "DevRev.translation"
        ],
        "returned_tools": [
            "DevRev.priority_detection",
            "DevRev.ticket_categorization",
            "DevRev.sentiment_analysis",
            "HubSpot.Ticket_Management",
            "klusterai.Metrics",
            "Tianji.answer",
            "Drata.Vendor_Risk_Management",
            "Tianji.search",
            "UnifAI.DocumentQA",
            "DevRev.translation"
        ],
        "query": "Analyze the following support ticket to determine its priority: 'Our main payment gateway is down, and customers are unable to complete purchases. This is impacting revenue. Please resolve ASAP.'",
        "response_time": 321.12789154052734,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Hunter.Traceroute"
        ],
        "matching_tools": [
            "Hunter.Traceroute"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "WaveSpeed.Traceroute",
            "Hunter.IP_Lookup",
            "Globalping.trace",
            "Globalping.mtr",
            "Hunter.DNS_Lookup",
            "Hunter.Ping",
            "Hunter.Whois_Lookup",
            "Globalping.tcp",
            "Globalping.dns"
        ],
        "returned_tools": [
            "Hunter.Traceroute",
            "WaveSpeed.Traceroute",
            "Hunter.IP_Lookup",
            "Globalping.trace",
            "Globalping.mtr",
            "Hunter.DNS_Lookup",
            "Hunter.Ping",
            "Hunter.Whois_Lookup",
            "Globalping.tcp",
            "Globalping.dns"
        ],
        "query": "Perform a traceroute to www.google.com to determine the network path packets take from my location to Google's servers.",
        "response_time": 292.10925102233887,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 10.0
    },
    {
        "expected_tools": [
            "GitHub.MarkAllNotificationsRead"
        ],
        "matching_tools": [
            "GitHub.MarkAllNotificationsRead"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetNotificationDetails",
            "GitHub.ManageNotificationSubscription",
            "GitHub.ListNotifications",
            "GitHub.ListSecretScanningAlerts",
            "GitHub.ManageRepositoryNotificationSubscription",
            "GitHub.ListCodeScanningAlerts",
            "GitHub.GetCodeScanningAlert",
            "GitHub.ListAvailableToolsets",
            "GitHub.DownloadWorkflowRunArtifact"
        ],
        "returned_tools": [
            "GitHub.MarkAllNotificationsRead",
            "GitHub.GetNotificationDetails",
            "GitHub.ManageNotificationSubscription",
            "GitHub.ListNotifications",
            "GitHub.ListSecretScanningAlerts",
            "GitHub.ManageRepositoryNotificationSubscription",
            "GitHub.ListCodeScanningAlerts",
            "GitHub.GetCodeScanningAlert",
            "GitHub.ListAvailableToolsets",
            "GitHub.DownloadWorkflowRunArtifact"
        ],
        "query": "Mark all my GitHub notifications as read.",
        "response_time": 279.4067859649658,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.29
    },
    {
        "expected_tools": [
            "OctoEverywhere.System"
        ],
        "matching_tools": [
            "OctoEverywhere.System"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OctoEverywhere.Knowledge",
            "OctoEverywhere.GCodeTerminal",
            "OctoEverywhere.Printer",
            "OctoEverywhere.PrinterMainboard",
            "OctoEverywhere.Timelapse",
            "NanoVMs.Describe_Deployment",
            "Netdata.system_info",
            "Yunxin.Statistics_-_Monitoring",
            "Netdata.netdata_stats"
        ],
        "returned_tools": [
            "OctoEverywhere.System",
            "OctoEverywhere.Knowledge",
            "OctoEverywhere.GCodeTerminal",
            "OctoEverywhere.Printer",
            "OctoEverywhere.PrinterMainboard",
            "OctoEverywhere.Timelapse",
            "NanoVMs.Describe_Deployment",
            "Netdata.system_info",
            "Yunxin.Statistics_-_Monitoring",
            "Netdata.netdata_stats"
        ],
        "query": "What is the current disk usage on the host system?",
        "response_time": 307.9047203063965,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "AllVoiceLab.Summarizer"
        ],
        "matching_tools": [
            "AllVoiceLab.Summarizer"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "AllVoiceLab.QA",
            "AllVoiceLab.Document_Analyzer",
            "DevRev.summarization",
            "AllVoiceLab.Voice_Translation",
            "AllVoiceLab.Text_to_Speech_TTS",
            "AllVoiceLab.Speech_to_Text_STT",
            "Octagon.summarize",
            "Riza.summarization",
            "klusterai.Metrics"
        ],
        "returned_tools": [
            "AllVoiceLab.Summarizer",
            "AllVoiceLab.QA",
            "AllVoiceLab.Document_Analyzer",
            "DevRev.summarization",
            "AllVoiceLab.Voice_Translation",
            "AllVoiceLab.Text_to_Speech_TTS",
            "AllVoiceLab.Speech_to_Text_STT",
            "Octagon.summarize",
            "Riza.summarization",
            "klusterai.Metrics"
        ],
        "query": "Summarize the main findings and recommendations from the latest IPCC climate change report.",
        "response_time": 299.2689609527588,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "ZIZAI Recruitment.validator"
        ],
        "matching_tools": [
            "ZIZAI Recruitment.validator"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "ZIZAI Recruitment.settings",
            "ZIZAI Recruitment.injector",
            "ZIZAI Recruitment.mapper",
            "ZIZAI Recruitment.task",
            "ZIZAI Recruitment.locker",
            "Upstash.Hash",
            "Sophtron.VerifyAccount",
            "ZIZAI Recruitment.context",
            "TextIn.id_ocr"
        ],
        "returned_tools": [
            "ZIZAI Recruitment.validator",
            "ZIZAI Recruitment.settings",
            "ZIZAI Recruitment.injector",
            "ZIZAI Recruitment.mapper",
            "ZIZAI Recruitment.task",
            "ZIZAI Recruitment.locker",
            "Upstash.Hash",
            "Sophtron.VerifyAccount",
            "ZIZAI Recruitment.context",
            "TextIn.id_ocr"
        ],
        "query": "Validate if the 'candidate_email' field in this job application object is a properly formatted email address.",
        "response_time": 310.92190742492676,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 6.43
    },
    {
        "expected_tools": [
            "VSCode.vscode_editor_replace_selection"
        ],
        "matching_tools": [
            "VSCode.vscode_editor_replace_selection"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_editor_get_selection",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_settings_update",
            "VSCode.vscode_editor_insert_text",
            "VSCode.vscode_fs_write_file",
            "VSCode.vscode_editor_format_document",
            "Hyperbrowser.code_editor",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_git_pull"
        ],
        "returned_tools": [
            "VSCode.vscode_editor_replace_selection",
            "VSCode.vscode_editor_get_selection",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_settings_update",
            "VSCode.vscode_editor_insert_text",
            "VSCode.vscode_fs_write_file",
            "VSCode.vscode_editor_format_document",
            "Hyperbrowser.code_editor",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_git_pull"
        ],
        "query": "Replace the currently selected code snippet in the editor with the following updated version that fixes the syntax error.",
        "response_time": 295.52483558654785,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "CoinGecko.coin_historical_price"
        ],
        "matching_tools": [
            "CoinGecko.coin_historical_price"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "CoinGecko.coin_price",
            "CoinGecko.coin_market_chart",
            "CoinGecko.exchange_info",
            "CoinGecko.coin_market_cap",
            "CoinGecko.simple_coin_info",
            "Logfire.search_python_docs",
            "Sophtron.GetTransactions",
            "AWS.Local_Simulation_of_Step_Functions_Workflows",
            "Shortcut.Summarize"
        ],
        "returned_tools": [
            "CoinGecko.coin_price",
            "CoinGecko.coin_historical_price",
            "CoinGecko.coin_market_chart",
            "CoinGecko.exchange_info",
            "CoinGecko.coin_market_cap",
            "CoinGecko.simple_coin_info",
            "Logfire.search_python_docs",
            "Sophtron.GetTransactions",
            "AWS.Local_Simulation_of_Step_Functions_Workflows",
            "Shortcut.Summarize"
        ],
        "query": "What was the price of Bitcoin on January 1, 2020?",
        "response_time": 302.1359443664551,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.86
    },
    {
        "expected_tools": [
            "Octagon.classify"
        ],
        "matching_tools": [
            "Octagon.classify"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "DevRev.sentiment_analysis",
            "Octagon.ask_calculator",
            "DevRev.ticket_categorization",
            "Octagon.ask_code",
            "Riza.classification",
            "Octagon.ask_retrieval",
            "Octagon.extract",
            "OctoEverywhere.Knowledge",
            "HubSpot.Ticket_Management"
        ],
        "returned_tools": [
            "Octagon.classify",
            "DevRev.sentiment_analysis",
            "Octagon.ask_calculator",
            "DevRev.ticket_categorization",
            "Octagon.ask_code",
            "Riza.classification",
            "Octagon.ask_retrieval",
            "Octagon.extract",
            "OctoEverywhere.Knowledge",
            "HubSpot.Ticket_Management"
        ],
        "query": "Classify the following customer feedback into categories such as 'positive', 'negative', or 'neutral': 'The product arrived late but works perfectly.'",
        "response_time": 319.2563056945801,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "AWS.Workflow_Coverage_and_Step_Analysis"
        ],
        "matching_tools": [
            "AWS.Workflow_Coverage_and_Step_Analysis"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "AWS.Local_Simulation_of_Step_Functions_Workflows",
            "AWS.Validate_State_Machine_Definitions",
            "AWS.Convert_AWS_Step_Functions_Amazon_States_Language_(ASL)_to_YAML",
            "AWS.Convert_AWS_Step_Functions_YAML_to_ASL_JSON",
            "AWS.Convert_CDK_StepFunction_Constructs_to_MCP_YAML",
            "SonarQube.Get_Project_Metrics",
            "Netdata.data_query",
            "klusterai.Metrics",
            "Yunxin.Statistics_-_Monitoring"
        ],
        "returned_tools": [
            "AWS.Workflow_Coverage_and_Step_Analysis",
            "AWS.Local_Simulation_of_Step_Functions_Workflows",
            "AWS.Validate_State_Machine_Definitions",
            "AWS.Convert_AWS_Step_Functions_Amazon_States_Language_(ASL)_to_YAML",
            "AWS.Convert_AWS_Step_Functions_YAML_to_ASL_JSON",
            "AWS.Convert_CDK_StepFunction_Constructs_to_MCP_YAML",
            "SonarQube.Get_Project_Metrics",
            "Netdata.data_query",
            "klusterai.Metrics",
            "Yunxin.Statistics_-_Monitoring"
        ],
        "query": "Analyze the Step Functions definition for the 'OrderProcessingWorkflow' to identify any unused steps and provide metrics on workflow coverage and possible execution paths.",
        "response_time": 325.97851753234863,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.SearchPullRequests"
        ],
        "matching_tools": [
            "GitHub.SearchPullRequests"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Shortcut.List",
            "GitHub.GetPullRequest",
            "GitHub.ListPullRequests",
            "GitHub.MergePullRequest",
            "GitHub.GetPullRequestDiff",
            "GitHub.GetPullRequestFiles",
            "VSCode.vscode_git_pull",
            "GitHub.GetPullRequestStatus",
            "GitHub.SearchIssues"
        ],
        "returned_tools": [
            "Shortcut.List",
            "GitHub.SearchPullRequests",
            "GitHub.GetPullRequest",
            "GitHub.ListPullRequests",
            "GitHub.MergePullRequest",
            "GitHub.GetPullRequestDiff",
            "GitHub.GetPullRequestFiles",
            "VSCode.vscode_git_pull",
            "GitHub.GetPullRequestStatus",
            "GitHub.SearchIssues"
        ],
        "query": "Find all open pull requests in the microsoft/vscode repository that mention 'bug fix' in the title or description.",
        "response_time": 296.1704730987549,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Campertunity.messaging"
        ],
        "matching_tools": [
            "Campertunity.messaging"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Campertunity.bookCamp",
            "LINE.Confirm",
            "Campertunity.searchCamps",
            "Liveblocks.send_user_message",
            "YepCode.rabbitmq",
            "Campertunity.listMyCamps",
            "Campertunity.reviews",
            "Upstash.PubSub",
            "VSCode.vscode_copilot_chat_send"
        ],
        "returned_tools": [
            "Campertunity.messaging",
            "Campertunity.bookCamp",
            "LINE.Confirm",
            "Campertunity.searchCamps",
            "Liveblocks.send_user_message",
            "YepCode.rabbitmq",
            "Campertunity.listMyCamps",
            "Campertunity.reviews",
            "Upstash.PubSub",
            "VSCode.vscode_copilot_chat_send"
        ],
        "query": "Send a message to the host to ask if pets are allowed at their campsite.",
        "response_time": 317.0962333679199,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.86
    },
    {
        "expected_tools": [
            "ZIZAI Recruitment.context"
        ],
        "matching_tools": [
            "ZIZAI Recruitment.context"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "ZIZAI Recruitment.settings",
            "ZIZAI Recruitment.task",
            "ZIZAI Recruitment.locker",
            "ZIZAI Recruitment.injector",
            "ZIZAI Recruitment.validator",
            "ZIZAI Recruitment.mapper",
            "GitHub.GetMe",
            "PlayCanvas.session",
            "Cloudinary.mcp_authentication"
        ],
        "returned_tools": [
            "ZIZAI Recruitment.context",
            "ZIZAI Recruitment.settings",
            "ZIZAI Recruitment.task",
            "ZIZAI Recruitment.locker",
            "ZIZAI Recruitment.injector",
            "ZIZAI Recruitment.validator",
            "ZIZAI Recruitment.mapper",
            "GitHub.GetMe",
            "PlayCanvas.session",
            "Cloudinary.mcp_authentication"
        ],
        "query": "How can I propagate user authentication data through multiple asynchronous service calls in a microservices architecture using ZIZAI Recruitment.context?",
        "response_time": 324.56254959106445,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.43
    },
    {
        "expected_tools": [
            "CoinGecko.coin_market_chart"
        ],
        "matching_tools": [
            "CoinGecko.coin_market_chart"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "CoinGecko.coin_historical_price",
            "CoinGecko.coin_market_cap",
            "CoinGecko.coin_price",
            "CoinGecko.simple_coin_info",
            "CoinGecko.exchange_info",
            "Sophtron.GetTransactions",
            "Netdata.data_query",
            "Yunxin.Statistics_-_Monitoring",
            "OpenSearch.get_mapping"
        ],
        "returned_tools": [
            "CoinGecko.coin_market_chart",
            "CoinGecko.coin_historical_price",
            "CoinGecko.coin_market_cap",
            "CoinGecko.coin_price",
            "CoinGecko.simple_coin_info",
            "CoinGecko.exchange_info",
            "Sophtron.GetTransactions",
            "Netdata.data_query",
            "Yunxin.Statistics_-_Monitoring",
            "OpenSearch.get_mapping"
        ],
        "query": "Get the historical price and market cap data for Bitcoin over the past 30 days.",
        "response_time": 300.3408908843994,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.71
    },
    {
        "expected_tools": [
            "GitHub.UpdatePullRequest"
        ],
        "matching_tools": [
            "GitHub.UpdatePullRequest"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.UpdateIssue",
            "GitHub.UpdatePullRequestBranch",
            "GitHub.GetPullRequest",
            "GitHub.MergePullRequest",
            "GitHub.GetPullRequestFiles",
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.CreatePullRequest",
            "GitHub.ListPullRequests",
            "GitHub.AddPullRequestReviewCommentToPendingReview"
        ],
        "returned_tools": [
            "GitHub.UpdatePullRequest",
            "GitHub.UpdateIssue",
            "GitHub.UpdatePullRequestBranch",
            "GitHub.GetPullRequest",
            "GitHub.MergePullRequest",
            "GitHub.GetPullRequestFiles",
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.CreatePullRequest",
            "GitHub.ListPullRequests",
            "GitHub.AddPullRequestReviewCommentToPendingReview"
        ],
        "query": "Update the title and description of pull request #42 in the repository 'octocat/Hello-World' to reflect the latest changes.",
        "response_time": 320.2683925628662,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "Logfire.search_python_docs"
        ],
        "matching_tools": [
            "Logfire.search_python_docs"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Logfire.get_function_doc",
            "Logfire.ask_openai_chat",
            "Logfire.list_python_packages",
            "Logfire.ask_groq_llama3",
            "Logfire.ask_chat_google",
            "Logfire.ask_ollama_chat",
            "Hyperbolic.python",
            "Hyperbrowser.python",
            "OctoEverywhere.Printer"
        ],
        "returned_tools": [
            "Logfire.search_python_docs",
            "Logfire.get_function_doc",
            "Logfire.ask_openai_chat",
            "Logfire.list_python_packages",
            "Logfire.ask_groq_llama3",
            "Logfire.ask_chat_google",
            "Logfire.ask_ollama_chat",
            "Hyperbolic.python",
            "Hyperbrowser.python",
            "OctoEverywhere.Printer"
        ],
        "query": "How does the Python 'with' statement work and what is its syntax?",
        "response_time": 340.8944606781006,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.DownloadWorkflowRunArtifact"
        ],
        "matching_tools": [
            "GitHub.DownloadWorkflowRunArtifact"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetWorkflowRun",
            "GitHub.ListWorkflowRunArtifacts",
            "GitHub.GetFileContents",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.ListWorkflowRuns",
            "GitHub.RerunWorkflowRun",
            "GitHub.GetWorkflowRunUsage",
            "GitHub.ListWorkflowJobs",
            "GitHub.RunWorkflow"
        ],
        "returned_tools": [
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.GetWorkflowRun",
            "GitHub.ListWorkflowRunArtifacts",
            "GitHub.GetFileContents",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.ListWorkflowRuns",
            "GitHub.RerunWorkflowRun",
            "GitHub.GetWorkflowRunUsage",
            "GitHub.ListWorkflowJobs",
            "GitHub.RunWorkflow"
        ],
        "query": "Download the artifact named 'build-results' from workflow run ID 123456 in the repository 'octocat/Hello-World'.",
        "response_time": 295.00484466552734,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.71
    },
    {
        "expected_tools": [
            "TextIn.id_ocr"
        ],
        "matching_tools": [
            "TextIn.id_ocr"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "TextIn.ocr",
            "TextIn.table_recognition",
            "TextIn.printer_paper_recognition",
            "Hyperbrowser.web_browser",
            "fetchSERP.Google_Images",
            "UnifAI.OCR",
            "Sophtron.VerifyAccount",
            "TextIn.speech_recognition",
            "TextIn.invoice_ocr"
        ],
        "returned_tools": [
            "TextIn.id_ocr",
            "TextIn.ocr",
            "TextIn.table_recognition",
            "TextIn.printer_paper_recognition",
            "Hyperbrowser.web_browser",
            "fetchSERP.Google_Images",
            "UnifAI.OCR",
            "Sophtron.VerifyAccount",
            "TextIn.speech_recognition",
            "TextIn.invoice_ocr"
        ],
        "query": "Extract the full name, date of birth, and ID number from a scanned Indonesian KTP (identity card) image for onboarding verification.",
        "response_time": 302.3073673248291,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "JFrog.secrets_scan"
        ],
        "matching_tools": [
            "JFrog.secrets_scan"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "JFrog.iac_scan",
            "JFrog.container_scan",
            "GitHub.ListSecretScanningAlerts",
            "JFrog.dependency_check",
            "GitHub.GetSecretScanningAlert",
            "JFrog.project_inspect",
            "OpsLevel.security/codeql",
            "JFrog.license_compliance",
            "CodeLogic.Scanner"
        ],
        "returned_tools": [
            "JFrog.secrets_scan",
            "JFrog.iac_scan",
            "JFrog.container_scan",
            "GitHub.ListSecretScanningAlerts",
            "JFrog.dependency_check",
            "GitHub.GetSecretScanningAlert",
            "JFrog.project_inspect",
            "OpsLevel.security/codeql",
            "JFrog.license_compliance",
            "CodeLogic.Scanner"
        ],
        "query": "Scan the main branch of the repository for any accidentally committed AWS secret keys or passwords.",
        "response_time": 302.90770530700684,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_extension_list"
        ],
        "matching_tools": [
            "VSCode.vscode_extension_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_settings_get",
            "VSCode.vscode_extension_install",
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_settings_update",
            "VSCode.vscode_workspace_list_folders",
            "Logfire.list_python_packages",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_git_branch_list",
            "VSCode.vscode_terminal_list"
        ],
        "returned_tools": [
            "VSCode.vscode_extension_list",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_extension_install",
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_settings_update",
            "VSCode.vscode_workspace_list_folders",
            "Logfire.list_python_packages",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_git_branch_list",
            "VSCode.vscode_terminal_list"
        ],
        "query": "List all currently installed extensions in my VSCode environment.",
        "response_time": 281.7373275756836,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 10.0
    },
    {
        "expected_tools": [
            "ZIZAI Recruitment.mapper"
        ],
        "matching_tools": [
            "ZIZAI Recruitment.mapper"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "ZIZAI Recruitment.injector",
            "ZIZAI Recruitment.validator",
            "ZIZAI Recruitment.settings",
            "ZIZAI Recruitment.task",
            "ZIZAI Recruitment.context",
            "ZIZAI Recruitment.locker",
            "Memgraph.Import_Data_Tool",
            "SonarQube.List_Projects",
            "Rember.list"
        ],
        "returned_tools": [
            "ZIZAI Recruitment.mapper",
            "ZIZAI Recruitment.injector",
            "ZIZAI Recruitment.validator",
            "ZIZAI Recruitment.settings",
            "ZIZAI Recruitment.task",
            "ZIZAI Recruitment.context",
            "ZIZAI Recruitment.locker",
            "Memgraph.Import_Data_Tool",
            "SonarQube.List_Projects",
            "Rember.list"
        ],
        "query": "Convert this Java List<Employee> object into a JSON array representation.",
        "response_time": 287.398099899292,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 1.0
    },
    {
        "expected_tools": [
            "Cloudinary.mcp_proxy"
        ],
        "matching_tools": [
            "Cloudinary.mcp_proxy"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Cloudinary.mcp_upload",
            "Cloudinary.mcp_logging",
            "Cloudinary.mcp_transformations",
            "Cloudinary.mcp_authentication",
            "NanoVMs.MCP_Image_Management",
            "Azure.azmcp_storage_blob_upload",
            "Cloudinary.mcp_metadata",
            "Nutrient.REST_API",
            "NanoVMs.Create_Deployment"
        ],
        "returned_tools": [
            "Cloudinary.mcp_proxy",
            "Cloudinary.mcp_upload",
            "Cloudinary.mcp_logging",
            "Cloudinary.mcp_transformations",
            "Cloudinary.mcp_authentication",
            "NanoVMs.MCP_Image_Management",
            "Azure.azmcp_storage_blob_upload",
            "Cloudinary.mcp_metadata",
            "Nutrient.REST_API",
            "NanoVMs.Create_Deployment"
        ],
        "query": "Route an image upload request to the correct MCP service endpoint for optimized media processing.",
        "response_time": 308.3310127258301,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "WaveSpeed.Whois"
        ],
        "matching_tools": [
            "WaveSpeed.Whois"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hunter.Whois_Lookup",
            "WaveSpeed.DNS_Lookup",
            "WaveSpeed.GeoIP",
            "WaveSpeed.Port_Scan",
            "WaveSpeed.Traceroute",
            "WaveSpeed.Ping",
            "Hunter.DNS_Lookup",
            "Hyperbrowser.web_browser",
            "LINE.Profile"
        ],
        "returned_tools": [
            "WaveSpeed.Whois",
            "Hunter.Whois_Lookup",
            "WaveSpeed.DNS_Lookup",
            "WaveSpeed.GeoIP",
            "WaveSpeed.Port_Scan",
            "WaveSpeed.Traceroute",
            "WaveSpeed.Ping",
            "Hunter.DNS_Lookup",
            "Hyperbrowser.web_browser",
            "LINE.Profile"
        ],
        "query": "Get the WHOIS information for the domain example.com",
        "response_time": 309.19909477233887,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.29
    },
    {
        "expected_tools": [
            "HubSpot.Marketing_Email_Analytics"
        ],
        "matching_tools": [
            "HubSpot.Marketing_Email_Analytics"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "HubSpot.CRM_Search",
            "HubSpot.Deal_Pipeline_Overview",
            "HubSpot.Workflow_Insights",
            "HubSpot.Contact_Insights",
            "YepCode.smtp",
            "Klaviyo.Events",
            "HubSpot.Ticket_Management",
            "Shortcut.List",
            "klusterai.Metrics"
        ],
        "returned_tools": [
            "HubSpot.Marketing_Email_Analytics",
            "HubSpot.CRM_Search",
            "HubSpot.Deal_Pipeline_Overview",
            "HubSpot.Workflow_Insights",
            "HubSpot.Contact_Insights",
            "YepCode.smtp",
            "Klaviyo.Events",
            "HubSpot.Ticket_Management",
            "Shortcut.List",
            "klusterai.Metrics"
        ],
        "query": "Show me the open rates and click-through rates for all marketing emails sent in the last quarter.",
        "response_time": 307.7270984649658,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.14
    },
    {
        "expected_tools": [
            "Globalping.tcp"
        ],
        "matching_tools": [
            "Globalping.tcp"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Globalping.dns",
            "Globalping.ping",
            "WaveSpeed.Port_Scan",
            "Globalping.http",
            "Globalping.mtr",
            "WaveSpeed.Ping",
            "Globalping.trace",
            "Hunter.Ping",
            "Hunter.SSL_Check"
        ],
        "returned_tools": [
            "Globalping.dns",
            "Globalping.tcp",
            "Globalping.ping",
            "WaveSpeed.Port_Scan",
            "Globalping.http",
            "Globalping.mtr",
            "WaveSpeed.Ping",
            "Globalping.trace",
            "Hunter.Ping",
            "Hunter.SSL_Check"
        ],
        "query": "Test if port 443 is open on www.example.com from multiple global locations.",
        "response_time": 293.84303092956543,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "TextIn.invoice_ocr"
        ],
        "matching_tools": [
            "TextIn.invoice_ocr"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "TextIn.ocr",
            "TextIn.table_recognition",
            "TextIn.id_ocr",
            "TextIn.printer_paper_recognition",
            "Hyperbrowser.web_browser",
            "Rember.extract",
            "Octagon.extract",
            "Tianji.search",
            "UnifAI.OCR"
        ],
        "returned_tools": [
            "TextIn.invoice_ocr",
            "TextIn.ocr",
            "TextIn.table_recognition",
            "TextIn.id_ocr",
            "TextIn.printer_paper_recognition",
            "Hyperbrowser.web_browser",
            "Rember.extract",
            "Octagon.extract",
            "Tianji.search",
            "UnifAI.OCR"
        ],
        "query": "Extract the vendor name, invoice date, line items, and total amount from the attached scanned invoice PDF.",
        "response_time": 300.40955543518066,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "SonarQube.Trigger_Project_Analysis"
        ],
        "matching_tools": [
            "SonarQube.Trigger_Project_Analysis"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "SonarQube.Get_Project_Metrics",
            "SonarQube.Show_Quality_Gate_Details",
            "SonarQube.List_Projects",
            "SonarQube.Check_Quality_Gate",
            "SonarQube.Show_Issue_Details",
            "SonarQube.List_Quality_Gates",
            "Netdata.data_query",
            "CodeLogic.Dependency_Resolver",
            "GitHub.SearchCode"
        ],
        "returned_tools": [
            "SonarQube.Trigger_Project_Analysis",
            "SonarQube.Get_Project_Metrics",
            "SonarQube.Show_Quality_Gate_Details",
            "SonarQube.List_Projects",
            "SonarQube.Check_Quality_Gate",
            "SonarQube.Show_Issue_Details",
            "SonarQube.List_Quality_Gates",
            "Netdata.data_query",
            "CodeLogic.Dependency_Resolver",
            "GitHub.SearchCode"
        ],
        "query": "Trigger a new analysis for the 'web-app-backend' project to refresh code quality metrics after the recent code merge.",
        "response_time": 316.52379035949707,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "DevRev.entity_extraction"
        ],
        "matching_tools": [
            "DevRev.entity_extraction"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hyperbrowser.web_browser",
            "DevRev.ticket_categorization",
            "DevRev.translation",
            "DevRev.sentiment_analysis",
            "DevRev.summarization",
            "TextIn.ocr",
            "TextIn.invoice_ocr",
            "fetchSERP.Google_Shopping",
            "Zapier.Email_Parser"
        ],
        "returned_tools": [
            "DevRev.entity_extraction",
            "Hyperbrowser.web_browser",
            "DevRev.ticket_categorization",
            "DevRev.translation",
            "DevRev.sentiment_analysis",
            "DevRev.summarization",
            "TextIn.ocr",
            "TextIn.invoice_ocr",
            "fetchSERP.Google_Shopping",
            "Zapier.Email_Parser"
        ],
        "query": "Extract all company and product names mentioned in the following customer feedback: 'I recently switched from QuickBooks to FreshBooks for my accounting needs, but I still prefer using PayPal for online transactions.'",
        "response_time": 316.0576820373535,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.14
    },
    {
        "expected_tools": [
            "CoinGecko.coin_price"
        ],
        "matching_tools": [
            "CoinGecko.coin_price"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "CoinGecko.exchange_info",
            "CoinGecko.coin_market_chart",
            "CoinGecko.simple_coin_info",
            "CoinGecko.coin_market_cap",
            "CoinGecko.coin_historical_price",
            "ThoughtSpot.license",
            "OpenSearch.index_document",
            "OpsLevel.code/license",
            "VSCode.vscode_fs_read_file"
        ],
        "returned_tools": [
            "CoinGecko.coin_price",
            "CoinGecko.exchange_info",
            "CoinGecko.coin_market_chart",
            "CoinGecko.simple_coin_info",
            "CoinGecko.coin_market_cap",
            "CoinGecko.coin_historical_price",
            "ThoughtSpot.license",
            "OpenSearch.index_document",
            "OpsLevel.code/license",
            "VSCode.vscode_fs_read_file"
        ],
        "query": "What is the current price of Bitcoin in USD?",
        "response_time": 292.86766052246094,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.43
    },
    {
        "expected_tools": [
            "ZIZAI Recruitment.task"
        ],
        "matching_tools": [
            "ZIZAI Recruitment.task"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Zapier.Schedule",
            "Tianji.notification",
            "ZIZAI Recruitment.settings",
            "Zapier.Delay",
            "YepCode.rabbitmq",
            "Liveblocks.send_user_message",
            "ZIZAI Recruitment.validator",
            "ZIZAI Recruitment.locker",
            "Tianji.answer"
        ],
        "returned_tools": [
            "ZIZAI Recruitment.task",
            "Zapier.Schedule",
            "Tianji.notification",
            "ZIZAI Recruitment.settings",
            "Zapier.Delay",
            "YepCode.rabbitmq",
            "Liveblocks.send_user_message",
            "ZIZAI Recruitment.validator",
            "ZIZAI Recruitment.locker",
            "Tianji.answer"
        ],
        "query": "How can I schedule a background job to send reminder emails to candidates every Monday at 9 AM?",
        "response_time": 538.5358333587646,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.14
    },
    {
        "expected_tools": [
            "SonarQube.List_Quality_Gates"
        ],
        "matching_tools": [
            "SonarQube.List_Quality_Gates"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "SonarQube.Show_Quality_Gate_Details",
            "SonarQube.Check_Quality_Gate",
            "SonarQube.Trigger_Project_Analysis",
            "SonarQube.List_Projects",
            "SonarQube.Get_Project_Metrics",
            "SonarQube.List_Issues",
            "SonarQube.Show_Issue_Details",
            "AWS.Workflow_Coverage_and_Step_Analysis",
            "CodeLogic.Reporting_Engine"
        ],
        "returned_tools": [
            "SonarQube.List_Quality_Gates",
            "SonarQube.Show_Quality_Gate_Details",
            "SonarQube.Check_Quality_Gate",
            "SonarQube.Trigger_Project_Analysis",
            "SonarQube.List_Projects",
            "SonarQube.Get_Project_Metrics",
            "SonarQube.List_Issues",
            "SonarQube.Show_Issue_Details",
            "AWS.Workflow_Coverage_and_Step_Analysis",
            "CodeLogic.Reporting_Engine"
        ],
        "query": "List all quality gates currently configured on the SonarQube server for comparison and selection purposes.",
        "response_time": 302.3827075958252,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Globalping.ping"
        ],
        "matching_tools": [
            "Globalping.ping"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Globalping.mtr",
            "WaveSpeed.Ping",
            "Globalping.dns",
            "Globalping.http",
            "Globalping.trace",
            "Globalping.tcp",
            "Hunter.Ping",
            "WaveSpeed.Traceroute",
            "Hunter.Traceroute"
        ],
        "returned_tools": [
            "Globalping.ping",
            "Globalping.mtr",
            "WaveSpeed.Ping",
            "Globalping.dns",
            "Globalping.http",
            "Globalping.trace",
            "Globalping.tcp",
            "Hunter.Ping",
            "WaveSpeed.Traceroute",
            "Hunter.Traceroute"
        ],
        "query": "Ping google.com from probes in Asia to measure network latency and packet loss.",
        "response_time": 295.79782485961914,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_postgres_server_list"
        ],
        "matching_tools": [
            "Azure.azmcp_postgres_server_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_postgres_database_list",
            "Azure.azmcp_postgres_table_query",
            "Azure.azmcp_kusto_database_list",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_kusto_cluster_list",
            "Azure.azmcp_resourcegroup_list",
            "ThoughtSpot.license",
            "Azure.azmcp_subscription_list",
            "Azure.azmcp_search_index_list"
        ],
        "returned_tools": [
            "Azure.azmcp_postgres_server_list",
            "Azure.azmcp_postgres_database_list",
            "Azure.azmcp_postgres_table_query",
            "Azure.azmcp_kusto_database_list",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_kusto_cluster_list",
            "Azure.azmcp_resourcegroup_list",
            "ThoughtSpot.license",
            "Azure.azmcp_subscription_list",
            "Azure.azmcp_search_index_list"
        ],
        "query": "List all PostgreSQL servers available in my current Azure subscription.",
        "response_time": 291.80335998535156,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_fs_read_file"
        ],
        "matching_tools": [
            "VSCode.vscode_fs_read_file"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetFileContents",
            "VSCode.vscode_workspace_open_folder",
            "VSCode.vscode_editor_get_selection",
            "VSCode.vscode_terminal_run_command",
            "OpsLevel.docs/readme",
            "VSCode.vscode_git_pull",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_workspace_list_folders",
            "VSCode.vscode_editor_replace_selection"
        ],
        "returned_tools": [
            "VSCode.vscode_fs_read_file",
            "GitHub.GetFileContents",
            "VSCode.vscode_workspace_open_folder",
            "VSCode.vscode_editor_get_selection",
            "VSCode.vscode_terminal_run_command",
            "OpsLevel.docs/readme",
            "VSCode.vscode_git_pull",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_workspace_list_folders",
            "VSCode.vscode_editor_replace_selection"
        ],
        "query": "Read the contents of the file 'README.md' in the workspace.",
        "response_time": 336.61627769470215,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_git_log"
        ],
        "matching_tools": [
            "VSCode.vscode_git_log"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_git_status",
            "VSCode.vscode_copilot_chat_get_history",
            "GitHub.ListCommits",
            "VSCode.vscode_git_diff",
            "VSCode.vscode_git_commit",
            "VSCode.vscode_git_push",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.GetFileContents",
            "VSCode.vscode_workspace_get_active_file"
        ],
        "returned_tools": [
            "VSCode.vscode_git_log",
            "VSCode.vscode_git_status",
            "VSCode.vscode_copilot_chat_get_history",
            "GitHub.ListCommits",
            "VSCode.vscode_git_diff",
            "VSCode.vscode_git_commit",
            "VSCode.vscode_git_push",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.GetFileContents",
            "VSCode.vscode_workspace_get_active_file"
        ],
        "query": "Show the commit history for the current repository.",
        "response_time": 291.10145568847656,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "Zapier.Email_Parser"
        ],
        "matching_tools": [
            "Zapier.Email_Parser"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Zapier.Webhooks",
            "TextIn.table_recognition",
            "Zapier.Code_by_Zapier",
            "Hyperbrowser.web_browser",
            "TextIn.ocr",
            "Zapier.Data_Formatter",
            "Rember.extract",
            "Octagon.extract",
            "Zapier.Schedule"
        ],
        "returned_tools": [
            "Zapier.Email_Parser",
            "Zapier.Webhooks",
            "TextIn.table_recognition",
            "Zapier.Code_by_Zapier",
            "Hyperbrowser.web_browser",
            "TextIn.ocr",
            "Zapier.Data_Formatter",
            "Rember.extract",
            "Octagon.extract",
            "Zapier.Schedule"
        ],
        "query": "How can I automatically extract tracking numbers from shipping confirmation emails and add them to a spreadsheet?",
        "response_time": 310.20092964172363,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.ManageRepositoryNotificationSubscription"
        ],
        "matching_tools": [
            "GitHub.ManageRepositoryNotificationSubscription"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.DismissNotification",
            "GitHub.ManageNotificationSubscription",
            "GitHub.GetNotificationDetails",
            "GitHub.ListNotifications",
            "GitHub.ListTags",
            "GitHub.MarkAllNotificationsRead",
            "GitHub.SearchOrgs",
            "GitHub.GetIssueComments",
            "GitHub.ListBranches"
        ],
        "returned_tools": [
            "GitHub.DismissNotification",
            "GitHub.ManageNotificationSubscription",
            "GitHub.ManageRepositoryNotificationSubscription",
            "GitHub.GetNotificationDetails",
            "GitHub.ListNotifications",
            "GitHub.ListTags",
            "GitHub.MarkAllNotificationsRead",
            "GitHub.SearchOrgs",
            "GitHub.GetIssueComments",
            "GitHub.ListBranches"
        ],
        "query": "Unsubscribe from all notifications for the repository 'octocat/Hello-World'.",
        "response_time": 308.73990058898926,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.43
    },
    {
        "expected_tools": [
            "Riza.text_editing"
        ],
        "matching_tools": [
            "Riza.text_editing"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Riza.chat",
            "Riza.summarization",
            "YepCode.rabbitmq",
            "Riza.classification",
            "Riza.question_answering",
            "Riza.text_completion",
            "Zapier.Webhooks",
            "Rember.choices",
            "UnifAI.DocumentQA"
        ],
        "returned_tools": [
            "Riza.text_editing",
            "Riza.chat",
            "Riza.summarization",
            "YepCode.rabbitmq",
            "Riza.classification",
            "Riza.question_answering",
            "Riza.text_completion",
            "Zapier.Webhooks",
            "Rember.choices",
            "UnifAI.DocumentQA"
        ],
        "query": "Please rephrase the following sentence to make it more formal: 'Hey, can you send me those files ASAP?'",
        "response_time": 304.19278144836426,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_terminal_run_command"
        ],
        "matching_tools": [
            "VSCode.vscode_terminal_run_command"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_terminal_list",
            "Hyperbolic.terminal",
            "VSCode.vscode_terminal_create",
            "VSCode.vscode_git_push",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_debug_start",
            "VSCode.vscode_git_pull",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_workspace_get_active_file"
        ],
        "returned_tools": [
            "VSCode.vscode_terminal_list",
            "Hyperbolic.terminal",
            "VSCode.vscode_terminal_create",
            "VSCode.vscode_terminal_run_command",
            "VSCode.vscode_git_push",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_debug_start",
            "VSCode.vscode_git_pull",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_workspace_get_active_file"
        ],
        "query": "VScode terminal: ls -la",
        "response_time": 292.80686378479004,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Hyperbrowser.text_comparison"
        ],
        "matching_tools": [
            "Hyperbrowser.text_comparison"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hyperbrowser.web_browser",
            "fetchSERP.Google_Scholar",
            "Hyperbrowser.code_editor",
            "Tianji.search",
            "Hyperbolic.book_search",
            "AllVoiceLab.Summarizer",
            "CodeLogic.Scanner",
            "Hyperbolic.web_search",
            "Hiveflow.Knowledge_Base"
        ],
        "returned_tools": [
            "Hyperbrowser.text_comparison",
            "Hyperbrowser.web_browser",
            "fetchSERP.Google_Scholar",
            "Hyperbrowser.code_editor",
            "Tianji.search",
            "Hyperbolic.book_search",
            "AllVoiceLab.Summarizer",
            "CodeLogic.Scanner",
            "Hyperbolic.web_search",
            "Hiveflow.Knowledge_Base"
        ],
        "query": "Compare the similarity between the abstracts of two scientific articles to identify overlapping content or unique contributions.",
        "response_time": 310.76622009277344,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.71
    },
    {
        "expected_tools": [
            "Memgraph.Memgraph_Data_Retriever"
        ],
        "matching_tools": [
            "Memgraph.Memgraph_Data_Retriever"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Memgraph.Procedures_Catalog",
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Query_Runner",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Export_Data_Tool",
            "Memgraph.Memgraph_Cypher_Generator"
        ],
        "returned_tools": [
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Procedures_Catalog",
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Query_Runner",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Export_Data_Tool",
            "Memgraph.Memgraph_Cypher_Generator"
        ],
        "query": "MATCH (user:Person)-[:PURCHASED]->(product:Product) RETURN user.name, product.title, product.price ORDER BY product.price DESC LIMIT 20",
        "response_time": 315.37604331970215,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "ZIZAI Recruitment.injector"
        ],
        "matching_tools": [
            "ZIZAI Recruitment.injector"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "ZIZAI Recruitment.settings",
            "ZIZAI Recruitment.mapper",
            "ZIZAI Recruitment.locker",
            "ZIZAI Recruitment.task",
            "ZIZAI Recruitment.validator",
            "ZIZAI Recruitment.context",
            "CodeLogic.Dependency_Resolver",
            "DevRev.ticket_categorization",
            "CodeLogic.Scanner"
        ],
        "returned_tools": [
            "ZIZAI Recruitment.injector",
            "ZIZAI Recruitment.settings",
            "ZIZAI Recruitment.mapper",
            "ZIZAI Recruitment.locker",
            "ZIZAI Recruitment.task",
            "ZIZAI Recruitment.validator",
            "ZIZAI Recruitment.context",
            "CodeLogic.Dependency_Resolver",
            "DevRev.ticket_categorization",
            "CodeLogic.Scanner"
        ],
        "query": "How can I configure a singleton service and automatically resolve its dependencies using ZIZAI Recruitment.injector?",
        "response_time": 4280.883312225342,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_servicebus_message_receive"
        ],
        "matching_tools": [
            "Azure.azmcp_servicebus_message_receive"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_servicebus_queue_list",
            "Azure.azmcp_servicebus_message_send",
            "Azure.azmcp_servicebus_namespace_list",
            "YepCode.rabbitmq",
            "Netdata.log_tail",
            "Azure.azmcp_postgres_database_list",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_search_index_query"
        ],
        "returned_tools": [
            "Azure.azmcp_servicebus_message_receive",
            "Azure.azmcp_servicebus_queue_list",
            "Azure.azmcp_servicebus_message_send",
            "Azure.azmcp_servicebus_namespace_list",
            "YepCode.rabbitmq",
            "Netdata.log_tail",
            "Azure.azmcp_postgres_database_list",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_search_index_query"
        ],
        "query": "Receive the next 10 messages from the 'orders-queue' in Azure Service Bus.",
        "response_time": 316.9417381286621,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.71
    },
    {
        "expected_tools": [
            "Hunter.DNS_Lookup"
        ],
        "matching_tools": [
            "Hunter.DNS_Lookup"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hunter.IP_Lookup",
            "WaveSpeed.DNS_Lookup",
            "WaveSpeed.Whois",
            "Hunter.Whois_Lookup",
            "WaveSpeed.Ping",
            "Hunter.Ping",
            "Hunter.Traceroute",
            "WaveSpeed.GeoIP",
            "Hunter.SSL_Check"
        ],
        "returned_tools": [
            "Hunter.DNS_Lookup",
            "Hunter.IP_Lookup",
            "WaveSpeed.DNS_Lookup",
            "WaveSpeed.Whois",
            "Hunter.Whois_Lookup",
            "WaveSpeed.Ping",
            "Hunter.Ping",
            "Hunter.Traceroute",
            "WaveSpeed.GeoIP",
            "Hunter.SSL_Check"
        ],
        "query": "What is the IP address of the domain example.com?",
        "response_time": 284.35587882995605,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.43
    },
    {
        "expected_tools": [
            "Sophtron.GetHoldings"
        ],
        "matching_tools": [
            "Sophtron.GetHoldings"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Sophtron.GetAccounts",
            "Sophtron.VerifyAccount",
            "Sophtron.GetStatements",
            "Sophtron.GetTransactions",
            "Sophtron.GetCreditScore",
            "LaunchDarkly.account",
            "Yunxin.User_Management",
            "Sophtron.InitiateTransfer",
            "PlayCanvas.user"
        ],
        "returned_tools": [
            "Sophtron.GetHoldings",
            "Sophtron.GetAccounts",
            "Sophtron.VerifyAccount",
            "Sophtron.GetStatements",
            "Sophtron.GetTransactions",
            "Sophtron.GetCreditScore",
            "LaunchDarkly.account",
            "Yunxin.User_Management",
            "Sophtron.InitiateTransfer",
            "PlayCanvas.user"
        ],
        "query": "Retrieve all current investment holdings for user account 12345.",
        "response_time": 292.38247871398926,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Sophtron.GetAccounts"
        ],
        "matching_tools": [
            "Sophtron.GetAccounts"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Sophtron.VerifyAccount",
            "Sophtron.GetStatements",
            "Sophtron.GetTransactions",
            "Sophtron.GetHoldings",
            "Sophtron.InitiateTransfer",
            "TextIn.table_recognition",
            "LaunchDarkly.account",
            "Sophtron.GetCreditScore",
            "Hyperbolic.wikidata"
        ],
        "returned_tools": [
            "Sophtron.GetAccounts",
            "Sophtron.VerifyAccount",
            "Sophtron.GetStatements",
            "Sophtron.GetTransactions",
            "Sophtron.GetHoldings",
            "Sophtron.InitiateTransfer",
            "TextIn.table_recognition",
            "LaunchDarkly.account",
            "Sophtron.GetCreditScore",
            "Hyperbolic.wikidata"
        ],
        "query": "Retrieve all checking and savings account details for user John Doe from his linked financial institution.",
        "response_time": 312.0708465576172,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "Tianji.question"
        ],
        "matching_tools": [
            "Tianji.question"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Tianji.answer",
            "Tianji.notification",
            "Tianji.comment",
            "Tianji.vote",
            "Tianji.search",
            "OpsLevel.docs/contributing",
            "GitHub.CreateIssue",
            "GitHub.RequestCopilotReview",
            "GitHub.CreateAndSubmitPullRequestReview"
        ],
        "returned_tools": [
            "Tianji.question",
            "Tianji.answer",
            "Tianji.notification",
            "Tianji.comment",
            "Tianji.vote",
            "Tianji.search",
            "OpsLevel.docs/contributing",
            "GitHub.CreateIssue",
            "GitHub.RequestCopilotReview",
            "GitHub.CreateAndSubmitPullRequestReview"
        ],
        "query": "How do I submit a new question on the platform?",
        "response_time": 318.7403678894043,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 6.0
    },
    {
        "expected_tools": [
            "Logfire.ask_chat_google"
        ],
        "matching_tools": [
            "Logfire.ask_chat_google"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Logfire.ask_openai_chat",
            "Logfire.search_python_docs",
            "Logfire.ask_groq_llama3",
            "Logfire.list_python_packages",
            "Logfire.get_function_doc",
            "Logfire.ask_ollama_chat",
            "Linear.Computed_Fields",
            "Hyperbrowser.text_comparison",
            "Memgraph.Memgraph_Cypher_Generator"
        ],
        "returned_tools": [
            "Logfire.ask_openai_chat",
            "Logfire.search_python_docs",
            "Logfire.ask_chat_google",
            "Logfire.ask_groq_llama3",
            "Logfire.list_python_packages",
            "Logfire.get_function_doc",
            "Logfire.ask_ollama_chat",
            "Linear.Computed_Fields",
            "Hyperbrowser.text_comparison",
            "Memgraph.Memgraph_Cypher_Generator"
        ],
        "query": "What are the main differences between Google Gemini and OpenAI's GPT-4 models?",
        "response_time": 309.39531326293945,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 6.43
    },
    {
        "expected_tools": [
            "ThoughtSpot.license"
        ],
        "matching_tools": [
            "ThoughtSpot.license"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "ThoughtSpot.upgrade",
            "ThoughtSpot.admin",
            "ThoughtSpot.service",
            "ThoughtSpot.backup",
            "ThoughtSpot.analytics",
            "ThoughtSpot.cluster",
            "OpsLevel.code/license",
            "GitHub.GetPullRequestStatus",
            "JFrog.license_compliance"
        ],
        "returned_tools": [
            "ThoughtSpot.license",
            "ThoughtSpot.upgrade",
            "ThoughtSpot.admin",
            "ThoughtSpot.service",
            "ThoughtSpot.backup",
            "ThoughtSpot.analytics",
            "ThoughtSpot.cluster",
            "OpsLevel.code/license",
            "GitHub.GetPullRequestStatus",
            "JFrog.license_compliance"
        ],
        "query": "Show the current ThoughtSpot license status and expiration date.",
        "response_time": 301.49364471435547,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "Hyperbrowser.web_browser"
        ],
        "matching_tools": [
            "Hyperbrowser.web_browser"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "fetchSERP.Google_News",
            "Hyperbrowser.file_manager",
            "Hyperbrowser.bash",
            "Hyperbrowser.python",
            "Hyperbolic.site_search",
            "Hyperbolic.web_search",
            "Hyperbrowser.text_comparison",
            "Hyperbrowser.code_editor",
            "Hyperbolic.book_search"
        ],
        "returned_tools": [
            "fetchSERP.Google_News",
            "Hyperbrowser.web_browser",
            "Hyperbrowser.file_manager",
            "Hyperbrowser.bash",
            "Hyperbrowser.python",
            "Hyperbolic.site_search",
            "Hyperbolic.web_search",
            "Hyperbrowser.text_comparison",
            "Hyperbrowser.code_editor",
            "Hyperbolic.book_search"
        ],
        "query": "Find the latest news articles about the 2024 US presidential election.",
        "response_time": 298.2978820800781,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Klaviyo.Profiles"
        ],
        "matching_tools": [
            "Klaviyo.Profiles"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Klaviyo.Templates",
            "Klaviyo.Lists_and_Segments",
            "Klaviyo.Events",
            "Zapier.Email_Parser",
            "Klaviyo.Catalogs",
            "LINE.Profile",
            "Klaviyo.Flows",
            "Hyperbrowser.web_browser",
            "GitHub.GetFileContents"
        ],
        "returned_tools": [
            "Klaviyo.Profiles",
            "Klaviyo.Templates",
            "Klaviyo.Lists_and_Segments",
            "Klaviyo.Events",
            "Zapier.Email_Parser",
            "Klaviyo.Catalogs",
            "LINE.Profile",
            "Klaviyo.Flows",
            "Hyperbrowser.web_browser",
            "GitHub.GetFileContents"
        ],
        "query": "Retrieve the profile information for customer with email john.doe@example.com.",
        "response_time": 339.4052982330322,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 6.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_git_branch_list"
        ],
        "matching_tools": [
            "VSCode.vscode_git_branch_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.ListBranches",
            "VSCode.vscode_git_pull",
            "VSCode.vscode_git_push",
            "VSCode.vscode_git_diff",
            "VSCode.vscode_git_status",
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_git_log",
            "VSCode.vscode_git_create_branch",
            "VSCode.vscode_git_commit"
        ],
        "returned_tools": [
            "VSCode.vscode_git_branch_list",
            "GitHub.ListBranches",
            "VSCode.vscode_git_pull",
            "VSCode.vscode_git_push",
            "VSCode.vscode_git_diff",
            "VSCode.vscode_git_status",
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_git_log",
            "VSCode.vscode_git_create_branch",
            "VSCode.vscode_git_commit"
        ],
        "query": "List all local and remote Git branches in the current repository.",
        "response_time": 318.7377452850342,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Sophtron.GetCreditScore"
        ],
        "matching_tools": [
            "Sophtron.GetCreditScore"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Sophtron.VerifyAccount",
            "Sophtron.GetAccounts",
            "Sophtron.GetStatements",
            "Sophtron.GetHoldings",
            "ThoughtSpot.license",
            "CoinGecko.coin_historical_price",
            "Sophtron.GetTransactions",
            "Sophtron.InitiateTransfer",
            "Tianji.search"
        ],
        "returned_tools": [
            "Sophtron.GetCreditScore",
            "Sophtron.VerifyAccount",
            "Sophtron.GetAccounts",
            "Sophtron.GetStatements",
            "Sophtron.GetHoldings",
            "ThoughtSpot.license",
            "CoinGecko.coin_historical_price",
            "Sophtron.GetTransactions",
            "Sophtron.InitiateTransfer",
            "Tianji.search"
        ],
        "query": "What is my latest credit score and the relevant details?",
        "response_time": 340.4514789581299,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.86
    },
    {
        "expected_tools": [
            "Riza.text_completion"
        ],
        "matching_tools": [
            "Riza.text_completion"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Riza.text_editing",
            "Riza.chat",
            "Riza.summarization",
            "Riza.classification",
            "Riza.question_answering",
            "VSCode.vscode_fs_write_file",
            "Rember.rewrite",
            "Shortcut.Ask",
            "UnifAI.ImageDescription"
        ],
        "returned_tools": [
            "Riza.text_editing",
            "Riza.chat",
            "Riza.text_completion",
            "Riza.summarization",
            "Riza.classification",
            "Riza.question_answering",
            "VSCode.vscode_fs_write_file",
            "Rember.rewrite",
            "Shortcut.Ask",
            "UnifAI.ImageDescription"
        ],
        "query": "Write a short story about a robot who learns to paint.",
        "response_time": 314.6517276763916,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Klaviyo.Catalogs"
        ],
        "matching_tools": [
            "Klaviyo.Catalogs"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Klaviyo.Flows",
            "Klaviyo.Templates",
            "klusterai.Profiling",
            "Klaviyo.Lists_and_Segments",
            "Klaviyo.Events",
            "Klaviyo.Profiles",
            "GitHub.GetToolsetsTools",
            "Netdata.data_query",
            "fetchSERP.Google_Shopping"
        ],
        "returned_tools": [
            "Klaviyo.Catalogs",
            "Klaviyo.Flows",
            "Klaviyo.Templates",
            "klusterai.Profiling",
            "Klaviyo.Lists_and_Segments",
            "Klaviyo.Events",
            "Klaviyo.Profiles",
            "GitHub.GetToolsetsTools",
            "Netdata.data_query",
            "fetchSERP.Google_Shopping"
        ],
        "query": "Retrieve all products in the current catalog to prepare for an upcoming marketing campaign.",
        "response_time": 326.2307643890381,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 3.71
    },
    {
        "expected_tools": [
            "LINE.Profile"
        ],
        "matching_tools": [
            "LINE.Profile"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Notion.get_user",
            "PlayCanvas.user",
            "Liveblocks.admin_get_user_roles",
            "Sophtron.GetAccounts",
            "LaunchDarkly.user",
            "Upstash.Hash",
            "Yunxin.User_Management",
            "Hyperbolic.terminal",
            "LINE.Echo"
        ],
        "returned_tools": [
            "LINE.Profile",
            "Notion.get_user",
            "PlayCanvas.user",
            "Liveblocks.admin_get_user_roles",
            "Sophtron.GetAccounts",
            "LaunchDarkly.user",
            "Upstash.Hash",
            "Yunxin.User_Management",
            "Hyperbolic.terminal",
            "LINE.Echo"
        ],
        "query": "Get the display name and user ID for the current LINE user.",
        "response_time": 310.5471134185791,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "Azure.azmcp_kusto_query"
        ],
        "matching_tools": [
            "Azure.azmcp_kusto_query"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Liveblocks.admin_get_user_roles",
            "Auth0.Audience_Listing",
            "klusterai.Ordering",
            "Azure.azmcp_monitor_query_metrics",
            "Azure.azmcp_postgres_table_query",
            "Azure.azmcp_cosmos_account_list",
            "Azure.azmcp_appconfig_account_list",
            "klusterai.Metrics",
            "Netdata.log_tail"
        ],
        "returned_tools": [
            "Liveblocks.admin_get_user_roles",
            "Auth0.Audience_Listing",
            "klusterai.Ordering",
            "Azure.azmcp_monitor_query_metrics",
            "Azure.azmcp_postgres_table_query",
            "Azure.azmcp_cosmos_account_list",
            "Azure.azmcp_appconfig_account_list",
            "klusterai.Metrics",
            "Azure.azmcp_kusto_query",
            "Netdata.log_tail"
        ],
        "query": "Show the top 10 most active users in the 'user_activity' table over the past 7 days.",
        "response_time": 308.7420463562012,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 6.0
    },
    {
        "expected_tools": [
            "Netdata.system_info"
        ],
        "matching_tools": [
            "Netdata.system_info"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Netdata.netdata_stats",
            "Netdata.netdata_config",
            "Netdata.netdata_info",
            "Netdata.data_query",
            "WaveSpeed.Ping",
            "Netdata.log_tail",
            "OctoEverywhere.System",
            "Netdata.alarms_silence",
            "OpenSearch.get_cluster_state"
        ],
        "returned_tools": [
            "Netdata.system_info",
            "Netdata.netdata_stats",
            "Netdata.netdata_config",
            "Netdata.netdata_info",
            "Netdata.data_query",
            "WaveSpeed.Ping",
            "Netdata.log_tail",
            "OctoEverywhere.System",
            "Netdata.alarms_silence",
            "OpenSearch.get_cluster_state"
        ],
        "query": "What is the current hostname and system time of the host machine?",
        "response_time": 368.7911033630371,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.43
    },
    {
        "expected_tools": [
            "Memgraph.Query_Runner"
        ],
        "matching_tools": [
            "Memgraph.Query_Runner"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Procedures_Catalog",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Memgraph_Cypher_Generator",
            "Memgraph.Export_Data_Tool"
        ],
        "returned_tools": [
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Query_Runner",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Procedures_Catalog",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Memgraph_Cypher_Generator",
            "Memgraph.Export_Data_Tool"
        ],
        "query": "MATCH (n)-[r]->(m) RETURN n, r, m LIMIT 25",
        "response_time": 308.68983268737793,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.14
    },
    {
        "expected_tools": [
            "GitHub.ListNotifications"
        ],
        "matching_tools": [
            "GitHub.ListNotifications"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.MarkAllNotificationsRead",
            "GitHub.ManageRepositoryNotificationSubscription",
            "GitHub.GetNotificationDetails",
            "GitHub.ManageNotificationSubscription",
            "GitHub.GetSecretScanningAlert",
            "GitHub.GetCodeScanningAlert",
            "GitHub.ListAvailableToolsets",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.AddPullRequestReviewCommentToPendingReview"
        ],
        "returned_tools": [
            "GitHub.ListNotifications",
            "GitHub.MarkAllNotificationsRead",
            "GitHub.ManageRepositoryNotificationSubscription",
            "GitHub.GetNotificationDetails",
            "GitHub.ManageNotificationSubscription",
            "GitHub.GetSecretScanningAlert",
            "GitHub.GetCodeScanningAlert",
            "GitHub.ListAvailableToolsets",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.AddPullRequestReviewCommentToPendingReview"
        ],
        "query": "Show me my latest GitHub notifications.",
        "response_time": 329.226016998291,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.86
    },
    {
        "expected_tools": [
            "Linear.API"
        ],
        "matching_tools": [],
        "missing_tools": [
            "Linear.API"
        ],
        "unexpected_tools": [
            "SonarQube.List_Issues",
            "SonarQube.Show_Issue_Details",
            "Linear.Actions",
            "GitHub.GetIssue",
            "GitHub.SearchIssues",
            "GitHub.GetIssueComments",
            "Linear.Schemas",
            "Shortcut.Ask",
            "Liveblocks.admin_get_user_roles",
            "Netdata.data_query"
        ],
        "returned_tools": [
            "SonarQube.List_Issues",
            "SonarQube.Show_Issue_Details",
            "Linear.Actions",
            "GitHub.GetIssue",
            "GitHub.SearchIssues",
            "GitHub.GetIssueComments",
            "Linear.Schemas",
            "Shortcut.Ask",
            "Liveblocks.admin_get_user_roles",
            "Netdata.data_query"
        ],
        "query": "Retrieve all open issues assigned to user 'john.doe' in project 'Website Redesign'.",
        "response_time": 309.37957763671875,
        "match": false,
        "match_top_1": false,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.0,
        "recall_metric": 0.0,
        "judge_metric": 6.0
    },
    {
        "expected_tools": [
            "Liveblocks.get_room_info"
        ],
        "matching_tools": [
            "Liveblocks.get_room_info"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Liveblocks.admin_get_user_roles",
            "Liveblocks.list_rooms",
            "Liveblocks.get_user_presence",
            "Liveblocks.admin_set_user_roles",
            "Notion.get_database",
            "CodeLogic.Scanner",
            "Liveblocks.admin_remove_user_roles",
            "CoinGecko.simple_coin_info",
            "Liveblocks.user_kick"
        ],
        "returned_tools": [
            "Liveblocks.get_room_info",
            "Liveblocks.admin_get_user_roles",
            "Liveblocks.list_rooms",
            "Liveblocks.get_user_presence",
            "Liveblocks.admin_set_user_roles",
            "Notion.get_database",
            "CodeLogic.Scanner",
            "Liveblocks.admin_remove_user_roles",
            "CoinGecko.simple_coin_info",
            "Liveblocks.user_kick"
        ],
        "query": "Get the metadata and list of current participants for room ID 'abc123'.",
        "response_time": 318.07446479797363,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Milvus.Collection_Management"
        ],
        "matching_tools": [
            "Milvus.Collection_Management"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Milvus.Search_and_Query",
            "Milvus.Schema_Management",
            "Milvus.Partition_Management",
            "Milvus.Data_Import_Export",
            "Milvus.Index_Management",
            "Liveblocks.list_rooms",
            "Memgraph.Graph_Schema_Viewer",
            "Netdata.alarms_list",
            "Memgraph.Procedures_Catalog"
        ],
        "returned_tools": [
            "Milvus.Collection_Management",
            "Milvus.Search_and_Query",
            "Milvus.Schema_Management",
            "Milvus.Partition_Management",
            "Milvus.Data_Import_Export",
            "Milvus.Index_Management",
            "Liveblocks.list_rooms",
            "Memgraph.Graph_Schema_Viewer",
            "Netdata.alarms_list",
            "Memgraph.Procedures_Catalog"
        ],
        "query": "List all collections currently available in the Milvus database.",
        "response_time": 300.4753589630127,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Linear.Permissions"
        ],
        "matching_tools": [
            "Linear.Permissions"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Linear.Actions",
            "Linear.API",
            "Hyperbrowser.code_editor",
            "Linear.Schemas",
            "Linear.Computed_Fields",
            "Linear.Data_Loading",
            "Linear.Webhooks",
            "Linear.Audit_Logs",
            "LaunchDarkly.user"
        ],
        "returned_tools": [
            "Linear.Permissions",
            "Linear.Actions",
            "Linear.API",
            "Hyperbrowser.code_editor",
            "Linear.Schemas",
            "Linear.Computed_Fields",
            "Linear.Data_Loading",
            "Linear.Webhooks",
            "Linear.Audit_Logs",
            "LaunchDarkly.user"
        ],
        "query": "Does user 'john.doe' have permission to edit project 'Alpha'?",
        "response_time": 306.0154914855957,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_kusto_cluster_list"
        ],
        "matching_tools": [
            "Azure.azmcp_kusto_cluster_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_kusto_database_list",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_subscription_list",
            "Azure.azmcp_resourcegroup_list",
            "Azure.azmcp_cosmos_account_list",
            "Azure.azmcp_cosmos_container_list",
            "Azure.azmcp_search_service_list",
            "Azure.azmcp_cosmos_database_list",
            "Azure.azmcp_search_index_list"
        ],
        "returned_tools": [
            "Azure.azmcp_kusto_cluster_list",
            "Azure.azmcp_kusto_database_list",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_subscription_list",
            "Azure.azmcp_resourcegroup_list",
            "Azure.azmcp_cosmos_account_list",
            "Azure.azmcp_cosmos_container_list",
            "Azure.azmcp_search_service_list",
            "Azure.azmcp_cosmos_database_list",
            "Azure.azmcp_search_index_list"
        ],
        "query": "List all Kusto clusters available in my Azure subscription.",
        "response_time": 303.1785488128662,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Zapier.Code_by_Zapier"
        ],
        "matching_tools": [
            "Zapier.Code_by_Zapier"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hyperbolic.python",
            "Hyperbrowser.python",
            "Rember.transform",
            "Logfire.search_python_docs",
            "Sophtron.GetTransactions",
            "klusterai.Grouping",
            "Zapier.Webhooks",
            "Zapier.Email_Parser",
            "SonarQube.List_Projects"
        ],
        "returned_tools": [
            "Zapier.Code_by_Zapier",
            "Hyperbolic.python",
            "Hyperbrowser.python",
            "Rember.transform",
            "Logfire.search_python_docs",
            "Sophtron.GetTransactions",
            "klusterai.Grouping",
            "Zapier.Webhooks",
            "Zapier.Email_Parser",
            "SonarQube.List_Projects"
        ],
        "query": "I have a list of sales transactions in JSON format. Can you write a Python script to calculate the total sales for each product category?",
        "response_time": 306.5662384033203,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    }
]