[
    {
        "expected_tools": [
            "YepCode.smtp"
        ],
        "matching_tools": [
            "YepCode.smtp"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "YepCode.rabbitmq",
            "Tianji.notification",
            "YepCode.webhook",
            "YepCode.rest",
            "Upstash.PubSub",
            "Zapier.Webhooks",
            "Zapier.Email_Parser",
            "Linear.Webhooks",
            "VSCode.vscode_copilot_chat_send"
        ],
        "returned_tools": [
            "YepCode.rabbitmq",
            "Tianji.notification",
            "YepCode.smtp",
            "YepCode.webhook",
            "YepCode.rest",
            "Upstash.PubSub",
            "Zapier.Webhooks",
            "Zapier.Email_Parser",
            "Linear.Webhooks",
            "VSCode.vscode_copilot_chat_send"
        ],
        "query": "How can I automatically send a notification email to users when their data import is complete?",
        "response_time": 6408.787488937378,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_storage_blob_delete"
        ],
        "matching_tools": [
            "Azure.azmcp_storage_blob_delete"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_cosmos_database_container_item_delete",
            "Azure.azmcp_appconfig_kv_delete",
            "VSCode.vscode_fs_delete_file",
            "Azure.azmcp_storage_account_list",
            "Azure.azmcp_storage_container_list",
            "GitHub.DeleteFile",
            "Azure.azmcp_storage_blob_download",
            "LaunchDarkly.account",
            "Azure.azmcp_appconfig_account_list"
        ],
        "returned_tools": [
            "Azure.azmcp_storage_blob_delete",
            "Azure.azmcp_cosmos_database_container_item_delete",
            "Azure.azmcp_appconfig_kv_delete",
            "VSCode.vscode_fs_delete_file",
            "Azure.azmcp_storage_account_list",
            "Azure.azmcp_storage_container_list",
            "GitHub.DeleteFile",
            "Azure.azmcp_storage_blob_download",
            "LaunchDarkly.account",
            "Azure.azmcp_appconfig_account_list"
        ],
        "query": "How do I remove an old backup file from my Azure storage account?",
        "response_time": 287.91332244873047,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.29
    },
    {
        "expected_tools": [
            "Nutrient.REST_API"
        ],
        "matching_tools": [
            "Nutrient.REST_API"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpenSearch.get_cluster_state",
            "Nutrient.Health_Checking_Tool",
            "Nutrient.DWS_MCP_Server",
            "ThoughtSpot.cluster",
            "Nutrient.NodeController",
            "Nutrient.GRPC_API",
            "Nutrient.ResourceController",
            "Memgraph.Graph_Schema_Viewer",
            "ThoughtSpot.upgrade"
        ],
        "returned_tools": [
            "OpenSearch.get_cluster_state",
            "Nutrient.Health_Checking_Tool",
            "Nutrient.REST_API",
            "Nutrient.DWS_MCP_Server",
            "ThoughtSpot.cluster",
            "Nutrient.NodeController",
            "Nutrient.GRPC_API",
            "Nutrient.ResourceController",
            "Memgraph.Graph_Schema_Viewer",
            "ThoughtSpot.upgrade"
        ],
        "query": "How can I check the current status of all nodes in my cluster and see if any resources are failing?",
        "response_time": 375.9174346923828,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.ManageNotificationSubscription"
        ],
        "matching_tools": [
            "GitHub.ManageNotificationSubscription"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.DismissNotification",
            "GitHub.GetIssueComments",
            "GitHub.ManageRepositoryNotificationSubscription",
            "GitHub.AddIssueComment",
            "GitHub.GetPullRequestComments",
            "GitHub.ListNotifications",
            "GitHub.SearchIssues",
            "GitHub.GetIssue",
            "GitHub.MarkAllNotificationsRead"
        ],
        "returned_tools": [
            "GitHub.DismissNotification",
            "GitHub.ManageNotificationSubscription",
            "GitHub.GetIssueComments",
            "GitHub.ManageRepositoryNotificationSubscription",
            "GitHub.AddIssueComment",
            "GitHub.GetPullRequestComments",
            "GitHub.ListNotifications",
            "GitHub.SearchIssues",
            "GitHub.GetIssue",
            "GitHub.MarkAllNotificationsRead"
        ],
        "query": "How do I stop getting so many emails from issues I commented on in my project?",
        "response_time": 316.03503227233887,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "ZIZAI Recruitment.task"
        ],
        "matching_tools": [
            "ZIZAI Recruitment.task"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "ZIZAI Recruitment.settings",
            "ZIZAI Recruitment.context",
            "ZIZAI Recruitment.injector",
            "YepCode.smtp",
            "ZIZAI Recruitment.validator",
            "Tianji.comment",
            "Zapier.Delay",
            "ZIZAI Recruitment.locker",
            "Tianji.answer"
        ],
        "returned_tools": [
            "ZIZAI Recruitment.task",
            "ZIZAI Recruitment.settings",
            "ZIZAI Recruitment.context",
            "ZIZAI Recruitment.injector",
            "YepCode.smtp",
            "ZIZAI Recruitment.validator",
            "Tianji.comment",
            "Zapier.Delay",
            "ZIZAI Recruitment.locker",
            "Tianji.answer"
        ],
        "query": "How can I automate sending follow-up emails to candidates after their interviews and make sure the process runs in the background without manual intervention?",
        "response_time": 332.2734832763672,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Zapier.Email_Parser"
        ],
        "matching_tools": [
            "Zapier.Email_Parser"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Zapier.Webhooks",
            "Zapier.Code_by_Zapier",
            "YepCode.webhook",
            "YepCode.rabbitmq",
            "Zapier.Data_Formatter",
            "Zapier.Schedule",
            "Hyperbrowser.web_browser",
            "Rember.extract",
            "Klaviyo.Events"
        ],
        "returned_tools": [
            "Zapier.Email_Parser",
            "Zapier.Webhooks",
            "Zapier.Code_by_Zapier",
            "YepCode.webhook",
            "YepCode.rabbitmq",
            "Zapier.Data_Formatter",
            "Zapier.Schedule",
            "Hyperbrowser.web_browser",
            "Rember.extract",
            "Klaviyo.Events"
        ],
        "query": "How can I automatically get tracking numbers from emails I receive from Amazon?",
        "response_time": 323.07910919189453,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "LINE.Image"
        ],
        "matching_tools": [
            "LINE.Image"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_copilot_chat_send",
            "LINE.Buttons",
            "LINE.Confirm",
            "Upstash.PubSub",
            "Riza.chat",
            "YepCode.rabbitmq",
            "Logfire.ask_openai_chat",
            "OctoEverywhere.Knowledge",
            "LINE.Echo"
        ],
        "returned_tools": [
            "LINE.Image",
            "VSCode.vscode_copilot_chat_send",
            "LINE.Buttons",
            "LINE.Confirm",
            "Upstash.PubSub",
            "Riza.chat",
            "YepCode.rabbitmq",
            "Logfire.ask_openai_chat",
            "OctoEverywhere.Knowledge",
            "LINE.Echo"
        ],
        "query": "Can you show me how to send an image in a LINE chat?",
        "response_time": 304.28528785705566,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.57
    },
    {
        "expected_tools": [
            "YepCode.webhook"
        ],
        "matching_tools": [
            "YepCode.webhook"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "YepCode.rabbitmq",
            "YepCode.redis",
            "YepCode.rest",
            "YepCode.mongodb",
            "Yunxin.Notification_-_Callback",
            "YepCode.smtp",
            "Zapier.Email_Parser",
            "Campertunity.bookCamp",
            "GitHub.ManageNotificationSubscription"
        ],
        "returned_tools": [
            "YepCode.webhook",
            "YepCode.rabbitmq",
            "YepCode.redis",
            "YepCode.rest",
            "YepCode.mongodb",
            "Yunxin.Notification_-_Callback",
            "YepCode.smtp",
            "Zapier.Email_Parser",
            "Campertunity.bookCamp",
            "GitHub.ManageNotificationSubscription"
        ],
        "query": "How can I automatically process incoming payment notifications from external services in my workflow?",
        "response_time": 308.9268207550049,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.ListWorkflowRunArtifacts"
        ],
        "matching_tools": [],
        "missing_tools": [
            "GitHub.ListWorkflowRunArtifacts"
        ],
        "unexpected_tools": [
            "GitHub.GetFileContents",
            "OpsLevel.code/ci",
            "GitHub.GetCommit",
            "GitHub.ListCommits",
            "GitHub.GetPullRequest",
            "GitHub.GetToolsetsTools",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.SearchRepositories",
            "GitHub.GetNotificationDetails",
            "GitHub.GetPullRequestFiles"
        ],
        "returned_tools": [
            "GitHub.GetFileContents",
            "OpsLevel.code/ci",
            "GitHub.GetCommit",
            "GitHub.ListCommits",
            "GitHub.GetPullRequest",
            "GitHub.GetToolsetsTools",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.SearchRepositories",
            "GitHub.GetNotificationDetails",
            "GitHub.GetPullRequestFiles"
        ],
        "query": "Can you show me what files were produced by my last CI pipeline on GitHub?",
        "response_time": 375.1533031463623,
        "match": false,
        "match_top_1": false,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.0,
        "recall_metric": 0.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Octagon.ask_code"
        ],
        "matching_tools": [
            "Octagon.ask_code"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "CodeLogic.Dependency_Resolver",
            "Octagon.ask_retrieval",
            "OctoEverywhere.Knowledge",
            "Octagon.ask_calculator",
            "GitHub.CreateIssue",
            "Octagon.classify",
            "CodeLogic.Scanner",
            "ThoughtSpot.upgrade",
            "Octagon.summarize"
        ],
        "returned_tools": [
            "Octagon.ask_code",
            "CodeLogic.Dependency_Resolver",
            "Octagon.ask_retrieval",
            "OctoEverywhere.Knowledge",
            "Octagon.ask_calculator",
            "GitHub.CreateIssue",
            "Octagon.classify",
            "CodeLogic.Scanner",
            "ThoughtSpot.upgrade",
            "Octagon.summarize"
        ],
        "query": "I'm getting a null pointer exception in my Java Spring Boot app, how do I debug this?",
        "response_time": 304.40497398376465,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "CodeLogic.Scanner"
        ],
        "matching_tools": [
            "CodeLogic.Scanner"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "CodeLogic.Dependency_Resolver",
            "CodeLogic.Graph_Generator",
            "CodeLogic.Application_Modeler",
            "CodeLogic.Dataflow_Analyzer",
            "GitHub.SearchOrgs",
            "CodeLogic.Reporting_Engine",
            "GitHub.GetFileContents",
            "GitHub.SearchUsers",
            "OpsLevel.security/codeql"
        ],
        "returned_tools": [
            "CodeLogic.Dependency_Resolver",
            "CodeLogic.Graph_Generator",
            "CodeLogic.Application_Modeler",
            "CodeLogic.Scanner",
            "CodeLogic.Dataflow_Analyzer",
            "GitHub.SearchOrgs",
            "CodeLogic.Reporting_Engine",
            "GitHub.GetFileContents",
            "GitHub.SearchUsers",
            "OpsLevel.security/codeql"
        ],
        "query": "Can you help me understand the architecture and dependencies of this large codebase I just cloned from GitHub?",
        "response_time": 352.2155284881592,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Riza.text_editing"
        ],
        "matching_tools": [
            "Riza.text_editing"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Riza.chat",
            "Riza.classification",
            "Riza.question_answering",
            "Riza.summarization",
            "Riza.text_completion",
            "AllVoiceLab.Text_to_Speech_TTS",
            "OctoEverywhere.Knowledge",
            "Rember.rewrite",
            "ThoughtSpot.license"
        ],
        "returned_tools": [
            "Riza.text_editing",
            "Riza.chat",
            "Riza.classification",
            "Riza.question_answering",
            "Riza.summarization",
            "Riza.text_completion",
            "AllVoiceLab.Text_to_Speech_TTS",
            "OctoEverywhere.Knowledge",
            "Rember.rewrite",
            "ThoughtSpot.license"
        ],
        "query": "Can you make this email sound more professional and fix any grammar mistakes?",
        "response_time": 353.3773422241211,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_appconfig_kv_show"
        ],
        "matching_tools": [
            "Azure.azmcp_appconfig_kv_show"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_appconfig_kv_set",
            "LaunchDarkly.feature_flag",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_keyvault_key_get",
            "Azure.azmcp_appconfig_kv_lock",
            "Azure.azmcp_appconfig_kv_delete",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_appconfig_kv_unlock",
            "Azure.azmcp_postgres_server_list"
        ],
        "returned_tools": [
            "Azure.azmcp_appconfig_kv_set",
            "LaunchDarkly.feature_flag",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_appconfig_kv_show",
            "Azure.azmcp_keyvault_key_get",
            "Azure.azmcp_appconfig_kv_lock",
            "Azure.azmcp_appconfig_kv_delete",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_appconfig_kv_unlock",
            "Azure.azmcp_postgres_server_list"
        ],
        "query": "What's the current value set for the feature flag in our cloud configuration?",
        "response_time": 304.624080657959,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Tako.Raster"
        ],
        "matching_tools": [
            "Tako.Raster"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Tako.PSTH_Peri_Stimulus_Time_Histogram",
            "Tako.Cross_correlation",
            "Tako.Behavior",
            "Tako.Tuning",
            "Tako.Trajectory",
            "SonarQube.Trigger_Project_Analysis",
            "Shortcut.Summarize",
            "Memgraph.Memgraph_Data_Retriever",
            "DevRev.priority_detection"
        ],
        "returned_tools": [
            "Tako.Raster",
            "Tako.PSTH_Peri_Stimulus_Time_Histogram",
            "Tako.Cross_correlation",
            "Tako.Behavior",
            "Tako.Tuning",
            "Tako.Trajectory",
            "SonarQube.Trigger_Project_Analysis",
            "Shortcut.Summarize",
            "Memgraph.Memgraph_Data_Retriever",
            "DevRev.priority_detection"
        ],
        "query": "Can you show me the spike activity patterns for all trials when the animal received a reward?",
        "response_time": 394.09589767456055,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Campertunity.searchCamps"
        ],
        "matching_tools": [
            "Campertunity.searchCamps"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Campertunity.listMyCamps",
            "Campertunity.bookCamp",
            "Campertunity.reviews",
            "Campertunity.messaging",
            "Hyperbolic.site_search",
            "Campertunity.userProfile",
            "Hyperbolic.web_search",
            "Azure.azmcp_search_service_list",
            "Liveblocks.get_room_info"
        ],
        "returned_tools": [
            "Campertunity.searchCamps",
            "Campertunity.listMyCamps",
            "Campertunity.bookCamp",
            "Campertunity.reviews",
            "Campertunity.messaging",
            "Hyperbolic.site_search",
            "Campertunity.userProfile",
            "Hyperbolic.web_search",
            "Azure.azmcp_search_service_list",
            "Liveblocks.get_room_info"
        ],
        "query": "Find me campsites near Banff that allow pets and have showers, available next weekend.",
        "response_time": 300.48537254333496,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "OpsLevel.code/license"
        ],
        "matching_tools": [
            "OpsLevel.code/license"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpsLevel.security/codeql",
            "OpsLevel.code/test",
            "OpsLevel.docs/readme",
            "OpsLevel.code/ci",
            "OpsLevel.docs/contributing",
            "JFrog.license_compliance",
            "OpsLevel.actions/github_actions",
            "klusterai.Metrics",
            "OpenSearch.get_mapping"
        ],
        "returned_tools": [
            "OpsLevel.code/license",
            "OpsLevel.security/codeql",
            "OpsLevel.code/test",
            "OpsLevel.docs/readme",
            "OpsLevel.code/ci",
            "OpsLevel.docs/contributing",
            "JFrog.license_compliance",
            "OpsLevel.actions/github_actions",
            "klusterai.Metrics",
            "OpenSearch.get_mapping"
        ],
        "query": "What kind of open source license is used in the main repo for Slack?",
        "response_time": 310.79959869384766,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.57
    },
    {
        "expected_tools": [
            "WaveSpeed.Whois"
        ],
        "matching_tools": [
            "WaveSpeed.Whois"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hunter.Whois_Lookup",
            "WaveSpeed.DNS_Lookup",
            "WaveSpeed.Traceroute",
            "WaveSpeed.Ping",
            "WaveSpeed.GeoIP",
            "WaveSpeed.Port_Scan",
            "Hunter.DNS_Lookup",
            "Hunter.IP_Lookup",
            "ThoughtSpot.license"
        ],
        "returned_tools": [
            "WaveSpeed.Whois",
            "Hunter.Whois_Lookup",
            "WaveSpeed.DNS_Lookup",
            "WaveSpeed.Traceroute",
            "WaveSpeed.Ping",
            "WaveSpeed.GeoIP",
            "WaveSpeed.Port_Scan",
            "Hunter.DNS_Lookup",
            "Hunter.IP_Lookup",
            "ThoughtSpot.license"
        ],
        "query": "Who owns the domain for tiktok.com and when does it expire?",
        "response_time": 379.2877197265625,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 10.0
    },
    {
        "expected_tools": [
            "klusterai.Joins"
        ],
        "matching_tools": [],
        "missing_tools": [
            "klusterai.Joins"
        ],
        "unexpected_tools": [
            "HubSpot.Ticket_Management",
            "klusterai.Ordering",
            "klusterai.Filters",
            "klusterai.Profiling",
            "ThoughtSpot.license",
            "klusterai.Grouping",
            "Klaviyo.Events",
            "HubSpot.CRM_Search",
            "DevRev.ticket_categorization",
            "klusterai.Metrics"
        ],
        "returned_tools": [
            "HubSpot.Ticket_Management",
            "klusterai.Ordering",
            "klusterai.Filters",
            "klusterai.Profiling",
            "ThoughtSpot.license",
            "klusterai.Grouping",
            "Klaviyo.Events",
            "HubSpot.CRM_Search",
            "DevRev.ticket_categorization",
            "klusterai.Metrics"
        ],
        "query": "How can I see customer purchase history along with their support ticket status?",
        "response_time": 279.80518341064453,
        "match": false,
        "match_top_1": false,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.0,
        "recall_metric": 0.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "NanoVMs.List_Deployments"
        ],
        "matching_tools": [
            "NanoVMs.List_Deployments"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "NanoVMs.Describe_Deployment",
            "NanoVMs.SSH_Management",
            "NanoVMs.MCP_Image_Management",
            "NanoVMs.Create_Deployment",
            "NanoVMs.Delete_Deployment",
            "ThoughtSpot.license",
            "ThoughtSpot.upgrade",
            "SonarQube.List_Projects",
            "Azure.azmcp_appconfig_account_list"
        ],
        "returned_tools": [
            "NanoVMs.Describe_Deployment",
            "NanoVMs.List_Deployments",
            "NanoVMs.SSH_Management",
            "NanoVMs.MCP_Image_Management",
            "NanoVMs.Create_Deployment",
            "NanoVMs.Delete_Deployment",
            "ThoughtSpot.license",
            "ThoughtSpot.upgrade",
            "SonarQube.List_Projects",
            "Azure.azmcp_appconfig_account_list"
        ],
        "query": "Can you show me all the current deployments and their statuses for my cloud VMs?",
        "response_time": 299.6940612792969,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "Campertunity.userProfile"
        ],
        "matching_tools": [
            "Campertunity.userProfile"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Campertunity.messaging",
            "Campertunity.searchCamps",
            "Campertunity.bookCamp",
            "Campertunity.listMyCamps",
            "Klaviyo.Profiles",
            "Campertunity.reviews",
            "HubSpot.Contact_Insights",
            "WaveSpeed.Whois",
            "GitHub.GetMe"
        ],
        "returned_tools": [
            "Campertunity.userProfile",
            "Campertunity.messaging",
            "Campertunity.searchCamps",
            "Campertunity.bookCamp",
            "Campertunity.listMyCamps",
            "Klaviyo.Profiles",
            "Campertunity.reviews",
            "HubSpot.Contact_Insights",
            "WaveSpeed.Whois",
            "GitHub.GetMe"
        ],
        "query": "How can I see all the campsites I've booked and update my contact info?",
        "response_time": 296.95606231689453,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "AllVoiceLab.Summarizer"
        ],
        "matching_tools": [
            "AllVoiceLab.Summarizer"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "AllVoiceLab.Speech_to_Text_STT",
            "AllVoiceLab.Text_to_Speech_TTS",
            "AllVoiceLab.QA",
            "AllVoiceLab.Voice_Translation",
            "TextIn.speech_recognition",
            "AllVoiceLab.Document_Analyzer",
            "UnifAI.SpeechRecognition",
            "DevRev.summarization",
            "Tako.PSTH_Peri_Stimulus_Time_Histogram"
        ],
        "returned_tools": [
            "AllVoiceLab.Summarizer",
            "AllVoiceLab.Speech_to_Text_STT",
            "AllVoiceLab.Text_to_Speech_TTS",
            "AllVoiceLab.QA",
            "AllVoiceLab.Voice_Translation",
            "TextIn.speech_recognition",
            "AllVoiceLab.Document_Analyzer",
            "UnifAI.SpeechRecognition",
            "DevRev.summarization",
            "Tako.PSTH_Peri_Stimulus_Time_Histogram"
        ],
        "query": "Can you give me a quick summary of this long research article on speech recognition advancements?",
        "response_time": 332.8394889831543,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.UpdateIssue"
        ],
        "matching_tools": [
            "GitHub.UpdateIssue"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.AddIssueComment",
            "GitHub.CreateIssue",
            "GitHub.GetIssueComments",
            "GitHub.SearchIssues",
            "GitHub.AssignCopilotToIssue",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.GetMe",
            "GitHub.GetNotificationDetails",
            "GitHub.PushFiles"
        ],
        "returned_tools": [
            "GitHub.UpdateIssue",
            "GitHub.AddIssueComment",
            "GitHub.CreateIssue",
            "GitHub.GetIssueComments",
            "GitHub.SearchIssues",
            "GitHub.AssignCopilotToIssue",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.GetMe",
            "GitHub.GetNotificationDetails",
            "GitHub.PushFiles"
        ],
        "query": "Can you change the title and add a bug label to the issue I just opened about the login error?",
        "response_time": 307.1281909942627,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.CreateAndSubmitPullRequestReview"
        ],
        "matching_tools": [],
        "missing_tools": [
            "GitHub.CreateAndSubmitPullRequestReview"
        ],
        "unexpected_tools": [
            "GitHub.GetPullRequestReviews",
            "GitHub.GetPullRequest",
            "GitHub.GetIssue",
            "GitHub.GetPullRequestStatus",
            "GitHub.SubmitPendingPullRequestReview",
            "GitHub.GetPullRequestComments",
            "GitHub.GetIssueComments",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.CreatePendingPullRequestReview",
            "GitHub.RequestCopilotReview"
        ],
        "returned_tools": [
            "GitHub.GetPullRequestReviews",
            "GitHub.GetPullRequest",
            "GitHub.GetIssue",
            "GitHub.GetPullRequestStatus",
            "GitHub.SubmitPendingPullRequestReview",
            "GitHub.GetPullRequestComments",
            "GitHub.GetIssueComments",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.CreatePendingPullRequestReview",
            "GitHub.RequestCopilotReview"
        ],
        "query": "Can you review this pull request and let me know if there are any issues or suggestions for improvement?",
        "response_time": 337.4173641204834,
        "match": false,
        "match_top_1": false,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.0,
        "recall_metric": 0.0,
        "judge_metric": 9.71
    },
    {
        "expected_tools": [
            "OpsLevel.code/ci"
        ],
        "matching_tools": [
            "OpsLevel.code/ci"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpsLevel.security/codeql",
            "OpsLevel.code/license",
            "OpsLevel.actions/github_actions",
            "OpsLevel.docs/readme",
            "OpsLevel.code/test",
            "OpsLevel.docs/contributing",
            "Twilio.config_management",
            "JFrog.iac_scan",
            "Hyperbrowser.code_editor"
        ],
        "returned_tools": [
            "OpsLevel.code/ci",
            "OpsLevel.security/codeql",
            "OpsLevel.code/license",
            "OpsLevel.actions/github_actions",
            "OpsLevel.docs/readme",
            "OpsLevel.code/test",
            "OpsLevel.docs/contributing",
            "Twilio.config_management",
            "JFrog.iac_scan",
            "Hyperbrowser.code_editor"
        ],
        "query": "Does this repo have any CI setup or config files?",
        "response_time": 288.32554817199707,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "OctoEverywhere.Printer"
        ],
        "matching_tools": [
            "OctoEverywhere.Printer"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OctoEverywhere.PrinterMainboard",
            "OctoEverywhere.Knowledge",
            "OctoEverywhere.Timelapse",
            "OctoEverywhere.GCodeTerminal",
            "OctoEverywhere.System",
            "OpenSearch.get_cluster_state",
            "ThoughtSpot.upgrade",
            "ThoughtSpot.license",
            "ThoughtSpot.admin"
        ],
        "returned_tools": [
            "OctoEverywhere.Printer",
            "OctoEverywhere.PrinterMainboard",
            "OctoEverywhere.Knowledge",
            "OctoEverywhere.Timelapse",
            "OctoEverywhere.GCodeTerminal",
            "OctoEverywhere.System",
            "OpenSearch.get_cluster_state",
            "ThoughtSpot.upgrade",
            "ThoughtSpot.license",
            "ThoughtSpot.admin"
        ],
        "query": "Why is my 3D print pausing halfway through and how can I check the printer's current status and temperature?",
        "response_time": 305.12547492980957,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Yunxin.Permission_-_Role_Management"
        ],
        "matching_tools": [
            "Yunxin.Permission_-_Role_Management"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Yunxin.User_Management",
            "Liveblocks.admin_set_user_roles",
            "Yunxin.Notification_-_Callback",
            "Yunxin.Media_Control",
            "Auth0.Policies",
            "Yunxin.Room_Management",
            "Auth0.Permissions",
            "Azure.azmcp_appconfig_kv_set",
            "Liveblocks.admin_get_user_roles"
        ],
        "returned_tools": [
            "Yunxin.Permission_-_Role_Management",
            "Yunxin.User_Management",
            "Liveblocks.admin_set_user_roles",
            "Yunxin.Notification_-_Callback",
            "Yunxin.Media_Control",
            "Auth0.Policies",
            "Yunxin.Room_Management",
            "Auth0.Permissions",
            "Azure.azmcp_appconfig_kv_set",
            "Liveblocks.admin_get_user_roles"
        ],
        "query": "How do I set up different admin and member permissions for chat rooms in my app?",
        "response_time": 328.3517360687256,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.29
    },
    {
        "expected_tools": [
            "GitHub.CreatePullRequest"
        ],
        "matching_tools": [],
        "missing_tools": [
            "GitHub.CreatePullRequest"
        ],
        "unexpected_tools": [
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.SubmitPendingPullRequestReview",
            "OpsLevel.docs/contributing",
            "GitHub.RequestCopilotReview",
            "GitHub.PushFiles",
            "GitHub.CreatePendingPullRequestReview",
            "Hyperbrowser.code_editor",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.MergePullRequest",
            "GitHub.GetCodeScanningAlert"
        ],
        "returned_tools": [
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.SubmitPendingPullRequestReview",
            "OpsLevel.docs/contributing",
            "GitHub.RequestCopilotReview",
            "GitHub.PushFiles",
            "GitHub.CreatePendingPullRequestReview",
            "Hyperbrowser.code_editor",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.MergePullRequest",
            "GitHub.GetCodeScanningAlert"
        ],
        "query": "Can you help me submit my code changes for review on the main project?",
        "response_time": 294.16465759277344,
        "match": false,
        "match_top_1": false,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.0,
        "recall_metric": 0.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.DeleteFile"
        ],
        "matching_tools": [
            "GitHub.DeleteFile"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_fs_delete_file",
            "GitHub.CreateOrUpdateFile",
            "Azure.azmcp_appconfig_kv_delete",
            "OpsLevel.code/ci",
            "OpsLevel.actions/github_actions",
            "GitHub.CreateIssue",
            "GitHub.ListIssues",
            "GitHub.GetFileContents",
            "GitHub.DeletePendingPullRequestReview"
        ],
        "returned_tools": [
            "GitHub.DeleteFile",
            "VSCode.vscode_fs_delete_file",
            "GitHub.CreateOrUpdateFile",
            "Azure.azmcp_appconfig_kv_delete",
            "OpsLevel.code/ci",
            "OpsLevel.actions/github_actions",
            "GitHub.CreateIssue",
            "GitHub.ListIssues",
            "GitHub.GetFileContents",
            "GitHub.DeletePendingPullRequestReview"
        ],
        "query": "How do I remove an outdated configuration file from my code repository?",
        "response_time": 284.4545841217041,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Shortcut.Comment"
        ],
        "matching_tools": [
            "Shortcut.Comment"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.AddIssueComment",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "Shortcut.Ask",
            "Shortcut.Create",
            "Shortcut.List",
            "DevRev.ticket_categorization",
            "HubSpot.Ticket_Management",
            "Shortcut.Summarize",
            "VSCode.vscode_editor_insert_text"
        ],
        "returned_tools": [
            "GitHub.AddIssueComment",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "Shortcut.Ask",
            "Shortcut.Create",
            "Shortcut.List",
            "DevRev.ticket_categorization",
            "Shortcut.Comment",
            "HubSpot.Ticket_Management",
            "Shortcut.Summarize",
            "VSCode.vscode_editor_insert_text"
        ],
        "query": "Can you add a note to the ticket about the latest bug report?",
        "response_time": 364.912748336792,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Campertunity.reviews"
        ],
        "matching_tools": [
            "Campertunity.reviews"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Campertunity.searchCamps",
            "Campertunity.messaging",
            "Campertunity.listMyCamps",
            "Campertunity.bookCamp",
            "Campertunity.userProfile",
            "GitHub.RequestCopilotReview",
            "SonarQube.List_Quality_Gates",
            "Hunter.Ping",
            "GitHub.GetTag"
        ],
        "returned_tools": [
            "Campertunity.reviews",
            "Campertunity.searchCamps",
            "Campertunity.messaging",
            "Campertunity.listMyCamps",
            "Campertunity.bookCamp",
            "Campertunity.userProfile",
            "GitHub.RequestCopilotReview",
            "SonarQube.List_Quality_Gates",
            "Hunter.Ping",
            "GitHub.GetTag"
        ],
        "query": "What do people think about the campsites near Vancouver on Campertunity? Are there any hosts with consistently good ratings?",
        "response_time": 467.64135360717773,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "Tianji.question"
        ],
        "matching_tools": [
            "Tianji.question"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Tianji.answer",
            "Tianji.vote",
            "Tianji.search",
            "Tianji.comment",
            "Tianji.notification",
            "UnifAI.Ask",
            "Logfire.ask_ollama_chat",
            "GitHub.SubmitPendingPullRequestReview",
            "OpsLevel.docs/contributing"
        ],
        "returned_tools": [
            "Tianji.question",
            "Tianji.answer",
            "Tianji.vote",
            "Tianji.search",
            "Tianji.comment",
            "Tianji.notification",
            "UnifAI.Ask",
            "Logfire.ask_ollama_chat",
            "GitHub.SubmitPendingPullRequestReview",
            "OpsLevel.docs/contributing"
        ],
        "query": "How do I submit a new question about machine learning algorithms on this platform?",
        "response_time": 306.81443214416504,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Logfire.list_python_packages"
        ],
        "matching_tools": [
            "Logfire.list_python_packages"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Logfire.search_python_docs",
            "Logfire.ask_openai_chat",
            "Logfire.ask_groq_llama3",
            "Logfire.get_function_doc",
            "Logfire.ask_ollama_chat",
            "Logfire.ask_chat_google",
            "CodeLogic.Dependency_Resolver",
            "OpenSearch.index_document",
            "NanoVMs.MCP_Image_Management"
        ],
        "returned_tools": [
            "Logfire.list_python_packages",
            "Logfire.search_python_docs",
            "Logfire.ask_openai_chat",
            "Logfire.ask_groq_llama3",
            "Logfire.get_function_doc",
            "Logfire.ask_ollama_chat",
            "Logfire.ask_chat_google",
            "CodeLogic.Dependency_Resolver",
            "OpenSearch.index_document",
            "NanoVMs.MCP_Image_Management"
        ],
        "query": "What Python libraries are currently installed in my environment?",
        "response_time": 295.4516410827637,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Zapier.Code_by_Zapier"
        ],
        "matching_tools": [
            "Zapier.Code_by_Zapier"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "klusterai.Metrics",
            "Zapier.Email_Parser",
            "Zapier.Schedule",
            "klusterai.Ordering",
            "Zapier.Webhooks",
            "TextIn.invoice_ocr",
            "klusterai.Grouping",
            "Hiveflow.Workflow_Engine",
            "HubSpot.Workflow_Insights"
        ],
        "returned_tools": [
            "Zapier.Code_by_Zapier",
            "klusterai.Metrics",
            "Zapier.Email_Parser",
            "Zapier.Schedule",
            "klusterai.Ordering",
            "Zapier.Webhooks",
            "TextIn.invoice_ocr",
            "klusterai.Grouping",
            "Hiveflow.Workflow_Engine",
            "HubSpot.Workflow_Insights"
        ],
        "query": "I have a list of sales data in a spreadsheet and need to calculate the average order value and flag any orders above $500. How can I automate this?",
        "response_time": 376.19614601135254,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 6.0
    },
    {
        "expected_tools": [
            "GitHub.CreateAndSubmitPullRequestReview"
        ],
        "matching_tools": [
            "GitHub.CreateAndSubmitPullRequestReview"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.SubmitPendingPullRequestReview",
            "GitHub.GetPullRequestReviews",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.GetPullRequestComments",
            "GitHub.CreatePendingPullRequestReview",
            "GitHub.RequestCopilotReview",
            "GitHub.GetPullRequestFiles",
            "GitHub.GetPullRequest",
            "GitHub.GetPullRequestStatus"
        ],
        "returned_tools": [
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.SubmitPendingPullRequestReview",
            "GitHub.GetPullRequestReviews",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.GetPullRequestComments",
            "GitHub.CreatePendingPullRequestReview",
            "GitHub.RequestCopilotReview",
            "GitHub.GetPullRequestFiles",
            "GitHub.GetPullRequest",
            "GitHub.GetPullRequestStatus"
        ],
        "query": "Can you help me review the changes in this pull request and submit feedback for improvements?",
        "response_time": 335.42585372924805,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 10.0
    },
    {
        "expected_tools": [
            "WaveSpeed.DNS_Lookup"
        ],
        "matching_tools": [
            "WaveSpeed.DNS_Lookup"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "WaveSpeed.Whois",
            "WaveSpeed.Ping",
            "WaveSpeed.GeoIP",
            "Hunter.IP_Lookup",
            "WaveSpeed.Traceroute",
            "WaveSpeed.Port_Scan",
            "Hunter.DNS_Lookup",
            "GitHub.GetMe",
            "GitHub.SearchUsers"
        ],
        "returned_tools": [
            "WaveSpeed.Whois",
            "WaveSpeed.DNS_Lookup",
            "WaveSpeed.Ping",
            "WaveSpeed.GeoIP",
            "Hunter.IP_Lookup",
            "WaveSpeed.Traceroute",
            "WaveSpeed.Port_Scan",
            "Hunter.DNS_Lookup",
            "GitHub.GetMe",
            "GitHub.SearchUsers"
        ],
        "query": "What is the IP address for github.com and who owns it?",
        "response_time": 414.0818119049072,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 10.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_servicebus_message_send"
        ],
        "matching_tools": [
            "Azure.azmcp_servicebus_message_send"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_servicebus_message_receive",
            "YepCode.rabbitmq",
            "Azure.azmcp_kusto_query",
            "Liveblocks.send_user_message",
            "Zapier.Email_Parser",
            "GitHub.RunWorkflow",
            "Azure.azmcp_cli_command_run",
            "VSCode.vscode_copilot_chat_send",
            "Zapier.Schedule"
        ],
        "returned_tools": [
            "Azure.azmcp_servicebus_message_send",
            "Azure.azmcp_servicebus_message_receive",
            "YepCode.rabbitmq",
            "Azure.azmcp_kusto_query",
            "Liveblocks.send_user_message",
            "Zapier.Email_Parser",
            "GitHub.RunWorkflow",
            "Azure.azmcp_cli_command_run",
            "VSCode.vscode_copilot_chat_send",
            "Zapier.Schedule"
        ],
        "query": "How can I trigger a workflow in my cloud app by sending a message to a queue?",
        "response_time": 295.5136299133301,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "ZIZAI Recruitment.settings"
        ],
        "matching_tools": [
            "ZIZAI Recruitment.settings"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "ZIZAI Recruitment.locker",
            "ZIZAI Recruitment.injector",
            "Hiveflow.Data_Connector",
            "ZIZAI Recruitment.task",
            "VSCode.vscode_settings_update",
            "ZIZAI Recruitment.context",
            "ZIZAI Recruitment.mapper",
            "Azure.azmcp_appconfig_kv_list",
            "ZIZAI Recruitment.validator"
        ],
        "returned_tools": [
            "ZIZAI Recruitment.settings",
            "ZIZAI Recruitment.locker",
            "ZIZAI Recruitment.injector",
            "Hiveflow.Data_Connector",
            "ZIZAI Recruitment.task",
            "VSCode.vscode_settings_update",
            "ZIZAI Recruitment.context",
            "ZIZAI Recruitment.mapper",
            "Azure.azmcp_appconfig_kv_list",
            "ZIZAI Recruitment.validator"
        ],
        "query": "How do I change the default configuration for connecting to external job boards in my recruitment platform?",
        "response_time": 327.17204093933105,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "LaunchDarkly.account"
        ],
        "matching_tools": [
            "LaunchDarkly.account"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "LaunchDarkly.feature_flag",
            "LaunchDarkly.user",
            "Azure.azmcp_appconfig_account_list",
            "LaunchDarkly.api_key",
            "LaunchDarkly.environment",
            "Sophtron.VerifyAccount",
            "LaunchDarkly.project",
            "Auth0.Entitlements",
            "ZIZAI Recruitment.settings"
        ],
        "returned_tools": [
            "LaunchDarkly.account",
            "LaunchDarkly.feature_flag",
            "LaunchDarkly.user",
            "Azure.azmcp_appconfig_account_list",
            "LaunchDarkly.api_key",
            "LaunchDarkly.environment",
            "Sophtron.VerifyAccount",
            "LaunchDarkly.project",
            "Auth0.Entitlements",
            "ZIZAI Recruitment.settings"
        ],
        "query": "How do I check what account settings I have for my feature flag management?",
        "response_time": 334.72585678100586,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "Shortcut.List"
        ],
        "matching_tools": [
            "Shortcut.List"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_copilot_chat_get_history",
            "Logfire.ask_openai_chat",
            "Riza.chat",
            "Shortcut.Summarize",
            "OctoEverywhere.Knowledge",
            "VSCode.vscode_copilot_chat_send",
            "Shortcut.Ask",
            "fetchSERP.Google_News",
            "Campertunity.messaging"
        ],
        "returned_tools": [
            "VSCode.vscode_copilot_chat_get_history",
            "Shortcut.List",
            "Logfire.ask_openai_chat",
            "Riza.chat",
            "Shortcut.Summarize",
            "OctoEverywhere.Knowledge",
            "VSCode.vscode_copilot_chat_send",
            "Shortcut.Ask",
            "fetchSERP.Google_News",
            "Campertunity.messaging"
        ],
        "query": "Can you show me the latest messages in my chat room?",
        "response_time": 307.7719211578369,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 6.43
    },
    {
        "expected_tools": [
            "Hyperbrowser.text_comparison"
        ],
        "matching_tools": [
            "Hyperbrowser.text_comparison"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hyperbrowser.web_browser",
            "Hyperbrowser.file_manager",
            "Hyperbrowser.bash",
            "Hyperbrowser.python",
            "Hyperbrowser.code_editor",
            "Auth0.Policies",
            "Hyperbolic.web_search",
            "Hyperbolic.site_search",
            "Tianji.search"
        ],
        "returned_tools": [
            "Hyperbrowser.text_comparison",
            "Hyperbrowser.web_browser",
            "Hyperbrowser.file_manager",
            "Hyperbrowser.bash",
            "Hyperbrowser.python",
            "Hyperbrowser.code_editor",
            "Auth0.Policies",
            "Hyperbolic.web_search",
            "Hyperbolic.site_search",
            "Tianji.search"
        ],
        "query": "How similar are the privacy policies of Facebook and Instagram?",
        "response_time": 291.90587997436523,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "fetchSERP.Google_Maps"
        ],
        "matching_tools": [
            "fetchSERP.Google_Maps"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "fetchSERP.Google_Search",
            "fetchSERP.Google_Shopping",
            "fetchSERP.Google_Images",
            "fetchSERP.Google_Videos",
            "fetchSERP.Google_Scholar",
            "fetchSERP.Google_News",
            "Hiveflow.Search",
            "HubSpot.CRM_Search",
            "OpenSearch.get_cluster_state"
        ],
        "returned_tools": [
            "fetchSERP.Google_Search",
            "fetchSERP.Google_Maps",
            "fetchSERP.Google_Shopping",
            "fetchSERP.Google_Images",
            "fetchSERP.Google_Videos",
            "fetchSERP.Google_Scholar",
            "fetchSERP.Google_News",
            "Hiveflow.Search",
            "HubSpot.CRM_Search",
            "OpenSearch.get_cluster_state"
        ],
        "query": "What are some highly rated coffee shops open now near the Empire State Building?",
        "response_time": 318.9828395843506,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.CreateRepository"
        ],
        "matching_tools": [
            "GitHub.CreateRepository"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.CreateBranch",
            "GitHub.CreateOrUpdateFile",
            "VSCode.vscode_git_create_branch",
            "VSCode.vscode_terminal_create",
            "GitHub.ForkRepository",
            "GitHub.CreatePullRequest",
            "GitHub.SearchCode",
            "Twilio.project_templates",
            "Hyperbrowser.code_editor"
        ],
        "returned_tools": [
            "GitHub.CreateRepository",
            "GitHub.CreateBranch",
            "GitHub.CreateOrUpdateFile",
            "VSCode.vscode_git_create_branch",
            "VSCode.vscode_terminal_create",
            "GitHub.ForkRepository",
            "GitHub.CreatePullRequest",
            "GitHub.SearchCode",
            "Twilio.project_templates",
            "Hyperbrowser.code_editor"
        ],
        "query": "I want to start a new project and need a place to store my code, can you help me set up a new repo for it?",
        "response_time": 297.8522777557373,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "NanoVMs.Delete_Deployment"
        ],
        "matching_tools": [
            "NanoVMs.Delete_Deployment"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "NanoVMs.MCP_Image_Management",
            "NanoVMs.Describe_Deployment",
            "NanoVMs.SSH_Management",
            "NanoVMs.Create_Deployment",
            "NanoVMs.List_Deployments",
            "Azure.azmcp_appconfig_kv_delete",
            "LaunchDarkly.environment",
            "VSCode.vscode_terminal_close",
            "VSCode.vscode_extension_uninstall"
        ],
        "returned_tools": [
            "NanoVMs.Delete_Deployment",
            "NanoVMs.MCP_Image_Management",
            "NanoVMs.Describe_Deployment",
            "NanoVMs.SSH_Management",
            "NanoVMs.Create_Deployment",
            "NanoVMs.List_Deployments",
            "Azure.azmcp_appconfig_kv_delete",
            "LaunchDarkly.environment",
            "VSCode.vscode_terminal_close",
            "VSCode.vscode_extension_uninstall"
        ],
        "query": "How do I remove an old VM deployment and make sure all its resources are cleaned up?",
        "response_time": 304.5389652252197,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.43
    },
    {
        "expected_tools": [
            "VSCode.vscode_terminal_run_command"
        ],
        "matching_tools": [
            "VSCode.vscode_terminal_run_command"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_terminal_create",
            "VSCode.vscode_terminal_list",
            "VSCode.vscode_git_commit",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_copilot_agent_execute",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_git_pull",
            "VSCode.vscode_editor_get_selection",
            "VSCode.vscode_git_create_branch"
        ],
        "returned_tools": [
            "VSCode.vscode_terminal_run_command",
            "VSCode.vscode_terminal_create",
            "VSCode.vscode_terminal_list",
            "VSCode.vscode_git_commit",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_copilot_agent_execute",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_git_pull",
            "VSCode.vscode_editor_get_selection",
            "VSCode.vscode_git_create_branch"
        ],
        "query": "How do I compile my C++ project from the terminal in VSCode?",
        "response_time": 346.30322456359863,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.57
    },
    {
        "expected_tools": [
            "CoinGecko.coin_market_cap"
        ],
        "matching_tools": [
            "CoinGecko.coin_market_cap"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "CoinGecko.coin_market_chart",
            "CoinGecko.exchange_info",
            "CoinGecko.coin_price",
            "CoinGecko.simple_coin_info",
            "CoinGecko.coin_historical_price",
            "Upstash.ZSet",
            "Liveblocks.get_room_info",
            "klusterai.Ordering",
            "Memgraph.Memgraph_Data_Retriever"
        ],
        "returned_tools": [
            "CoinGecko.coin_market_cap",
            "CoinGecko.coin_market_chart",
            "CoinGecko.exchange_info",
            "CoinGecko.coin_price",
            "CoinGecko.simple_coin_info",
            "CoinGecko.coin_historical_price",
            "Upstash.ZSet",
            "Liveblocks.get_room_info",
            "klusterai.Ordering",
            "Memgraph.Memgraph_Data_Retriever"
        ],
        "query": "What are the top 10 cryptocurrencies by market cap right now?",
        "response_time": 287.2178554534912,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.57
    },
    {
        "expected_tools": [
            "OpenSearch.index_document"
        ],
        "matching_tools": [
            "OpenSearch.index_document"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpenSearch.update_mapping",
            "OpenSearch.search",
            "OpenSearch.get_mapping",
            "OpenSearch.analyze_text",
            "OpenSearch.get_cluster_state",
            "OpenSearch.get_aliases",
            "Azure.azmcp_search_index_create",
            "DevRev.entity_extraction",
            "Hiveflow.Search"
        ],
        "returned_tools": [
            "OpenSearch.index_document",
            "OpenSearch.update_mapping",
            "OpenSearch.search",
            "OpenSearch.get_mapping",
            "OpenSearch.analyze_text",
            "OpenSearch.get_cluster_state",
            "OpenSearch.get_aliases",
            "Azure.azmcp_search_index_create",
            "DevRev.entity_extraction",
            "Hiveflow.Search"
        ],
        "query": "How can I add new product information to my search database for faster lookup?",
        "response_time": 376.15036964416504,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Klaviyo.Templates"
        ],
        "matching_tools": [
            "Klaviyo.Templates"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Klaviyo.Flows",
            "Klaviyo.Events",
            "Klaviyo.Lists_and_Segments",
            "Klaviyo.Profiles",
            "Klaviyo.Catalogs",
            "Zapier.Email_Parser",
            "Rember.choices",
            "HubSpot.Marketing_Email_Analytics",
            "YepCode.rabbitmq"
        ],
        "returned_tools": [
            "Klaviyo.Templates",
            "Klaviyo.Flows",
            "Klaviyo.Events",
            "Klaviyo.Lists_and_Segments",
            "Klaviyo.Profiles",
            "Klaviyo.Catalogs",
            "Zapier.Email_Parser",
            "Rember.choices",
            "HubSpot.Marketing_Email_Analytics",
            "YepCode.rabbitmq"
        ],
        "query": "How can I customize my email messages to look more professional for my marketing campaign?",
        "response_time": 47579.37264442444,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "OctoEverywhere.Knowledge"
        ],
        "matching_tools": [
            "OctoEverywhere.Knowledge"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OctoEverywhere.PrinterMainboard",
            "OctoEverywhere.Printer",
            "OctoEverywhere.System",
            "OctoEverywhere.Timelapse",
            "OctoEverywhere.GCodeTerminal",
            "TextIn.printer_paper_recognition",
            "WaveSpeed.Port_Scan",
            "ThoughtSpot.upgrade",
            "CodeLogic.Dependency_Resolver"
        ],
        "returned_tools": [
            "OctoEverywhere.PrinterMainboard",
            "OctoEverywhere.Printer",
            "OctoEverywhere.Knowledge",
            "OctoEverywhere.System",
            "OctoEverywhere.Timelapse",
            "OctoEverywhere.GCodeTerminal",
            "TextIn.printer_paper_recognition",
            "WaveSpeed.Port_Scan",
            "ThoughtSpot.upgrade",
            "CodeLogic.Dependency_Resolver"
        ],
        "query": "What are some common troubleshooting steps if my 3D printer stops mid-print?",
        "response_time": 278.41901779174805,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.EnableToolset"
        ],
        "matching_tools": [
            "GitHub.EnableToolset"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.ListAvailableToolsets",
            "GitHub.GetToolsetsTools",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.ListWorkflowRunArtifacts",
            "GitHub.GetWorkflowRun",
            "GitHub.RunWorkflow",
            "GitHub.ListWorkflowJobs",
            "GitHub.ListWorkflowRuns",
            "OpsLevel.actions/github_actions"
        ],
        "returned_tools": [
            "GitHub.ListAvailableToolsets",
            "GitHub.EnableToolset",
            "GitHub.GetToolsetsTools",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.ListWorkflowRunArtifacts",
            "GitHub.GetWorkflowRun",
            "GitHub.RunWorkflow",
            "GitHub.ListWorkflowJobs",
            "GitHub.ListWorkflowRuns",
            "OpsLevel.actions/github_actions"
        ],
        "query": "How do I activate additional developer tools for my project while it's running on GitHub Actions?",
        "response_time": 473.522424697876,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.86
    },
    {
        "expected_tools": [
            "Milvus.Data_Import_Export"
        ],
        "matching_tools": [
            "Milvus.Data_Import_Export"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Milvus.Partition_Management",
            "Milvus.Search_and_Query",
            "Milvus.Schema_Management",
            "Milvus.Index_Management",
            "Milvus.Collection_Management",
            "Memgraph.Import_Data_Tool",
            "Linear.Data_Loading",
            "fetchSERP.Google_Images",
            "Azure.azmcp_storage_blob_upload"
        ],
        "returned_tools": [
            "Milvus.Partition_Management",
            "Milvus.Search_and_Query",
            "Milvus.Data_Import_Export",
            "Milvus.Schema_Management",
            "Milvus.Index_Management",
            "Milvus.Collection_Management",
            "Memgraph.Import_Data_Tool",
            "Linear.Data_Loading",
            "fetchSERP.Google_Images",
            "Azure.azmcp_storage_blob_upload"
        ],
        "query": "How can I quickly move a large dataset of images into my vector database and check if the upload is working?",
        "response_time": 327.27789878845215,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Nutrient.NodeController"
        ],
        "matching_tools": [
            "Nutrient.NodeController"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Nutrient.Health_Checking_Tool",
            "OpenSearch.get_cluster_state",
            "Nutrient.DWS_MCP_Server",
            "ThoughtSpot.cluster",
            "Nutrient.REST_API",
            "Nutrient.GRPC_API",
            "ThoughtSpot.upgrade",
            "OpenSearch.index_document",
            "Nutrient.ResourceController"
        ],
        "returned_tools": [
            "Nutrient.Health_Checking_Tool",
            "Nutrient.NodeController",
            "OpenSearch.get_cluster_state",
            "Nutrient.DWS_MCP_Server",
            "ThoughtSpot.cluster",
            "Nutrient.REST_API",
            "Nutrient.GRPC_API",
            "ThoughtSpot.upgrade",
            "OpenSearch.index_document",
            "Nutrient.ResourceController"
        ],
        "query": "How can I check if all compute nodes in my cluster are healthy and update their configuration if needed?",
        "response_time": 3947.3812580108643,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "CodeLogic.Dataflow_Analyzer"
        ],
        "matching_tools": [
            "CodeLogic.Dataflow_Analyzer"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "CodeLogic.Scanner",
            "CodeLogic.Application_Modeler",
            "CodeLogic.Dependency_Resolver",
            "CodeLogic.Reporting_Engine",
            "CodeLogic.Graph_Generator",
            "YepCode.webhook",
            "Netdata.data_query",
            "OpenSearch.analyze_text",
            "klusterai.Profiling"
        ],
        "returned_tools": [
            "CodeLogic.Dataflow_Analyzer",
            "CodeLogic.Scanner",
            "CodeLogic.Application_Modeler",
            "CodeLogic.Dependency_Resolver",
            "CodeLogic.Reporting_Engine",
            "CodeLogic.Graph_Generator",
            "YepCode.webhook",
            "Netdata.data_query",
            "OpenSearch.analyze_text",
            "klusterai.Profiling"
        ],
        "query": "Can you help me understand how user input data travels through the backend of our application and where it might be exposed or modified?",
        "response_time": 390.1631832122803,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.29
    },
    {
        "expected_tools": [
            "Memgraph.Memgraph_Data_Retriever"
        ],
        "matching_tools": [
            "Memgraph.Memgraph_Data_Retriever"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Memgraph_Cypher_Generator",
            "Memgraph.Query_Runner",
            "Memgraph.Export_Data_Tool",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Procedures_Catalog",
            "Memgraph.Import_Data_Tool"
        ],
        "returned_tools": [
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Memgraph_Cypher_Generator",
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Query_Runner",
            "Memgraph.Export_Data_Tool",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Procedures_Catalog",
            "Memgraph.Import_Data_Tool"
        ],
        "query": "Show me how the connections between users in my social network have changed over the last year.",
        "response_time": 295.64499855041504,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "CoinGecko.exchange_info"
        ],
        "matching_tools": [
            "CoinGecko.exchange_info"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "CoinGecko.coin_price",
            "CoinGecko.coin_market_cap",
            "CoinGecko.simple_coin_info",
            "CoinGecko.coin_market_chart",
            "CoinGecko.coin_historical_price",
            "Memgraph.Import_Data_Tool",
            "Sophtron.GetHoldings",
            "Sophtron.GetAccounts",
            "Sophtron.GetCreditScore"
        ],
        "returned_tools": [
            "CoinGecko.exchange_info",
            "CoinGecko.coin_price",
            "CoinGecko.coin_market_cap",
            "CoinGecko.simple_coin_info",
            "CoinGecko.coin_market_chart",
            "CoinGecko.coin_historical_price",
            "Memgraph.Import_Data_Tool",
            "Sophtron.GetHoldings",
            "Sophtron.GetAccounts",
            "Sophtron.GetCreditScore"
        ],
        "query": "Which crypto exchange has the lowest trading fees and supports the most trading pairs for altcoins?",
        "response_time": 346.2555408477783,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "YepCode.rest"
        ],
        "matching_tools": [
            "YepCode.rest"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "YepCode.webhook",
            "YepCode.redis",
            "YepCode.mongodb",
            "YepCode.rabbitmq",
            "fetchSERP.Google_Maps",
            "Hyperbrowser.web_browser",
            "Zapier.Webhooks",
            "YepCode.smtp",
            "OpenSearch.get_cluster_state"
        ],
        "returned_tools": [
            "YepCode.webhook",
            "YepCode.redis",
            "YepCode.mongodb",
            "YepCode.rabbitmq",
            "YepCode.rest",
            "fetchSERP.Google_Maps",
            "Hyperbrowser.web_browser",
            "Zapier.Webhooks",
            "YepCode.smtp",
            "OpenSearch.get_cluster_state"
        ],
        "query": "How can I fetch the latest weather data from an external API and process it for my dashboard?",
        "response_time": 413.1052494049072,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "OpenSearch.get_mapping"
        ],
        "matching_tools": [
            "OpenSearch.get_mapping"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpenSearch.search",
            "OpenSearch.update_mapping",
            "OpenSearch.index_document",
            "OpenSearch.bulk",
            "OpenSearch.get_cluster_state",
            "OpenSearch.analyze_text",
            "Linear.Computed_Fields",
            "OpenSearch.get_aliases",
            "Hiveflow.Search"
        ],
        "returned_tools": [
            "OpenSearch.get_mapping",
            "OpenSearch.search",
            "OpenSearch.update_mapping",
            "OpenSearch.index_document",
            "OpenSearch.bulk",
            "OpenSearch.get_cluster_state",
            "OpenSearch.analyze_text",
            "Linear.Computed_Fields",
            "OpenSearch.get_aliases",
            "Hiveflow.Search"
        ],
        "query": "What fields and data types are stored in my ecommerce search index?",
        "response_time": 315.4323101043701,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "OpsLevel.code/license"
        ],
        "matching_tools": [
            "OpsLevel.code/license"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpsLevel.code/ci",
            "OpsLevel.security/codeql",
            "OpsLevel.actions/github_actions",
            "OpsLevel.docs/readme",
            "OpsLevel.code/test",
            "OpsLevel.docs/contributing",
            "JFrog.license_compliance",
            "OpenSearch.analyze_text",
            "OpenSearch.get_mapping"
        ],
        "returned_tools": [
            "OpsLevel.code/license",
            "OpsLevel.code/ci",
            "OpsLevel.security/codeql",
            "OpsLevel.actions/github_actions",
            "OpsLevel.docs/readme",
            "OpsLevel.code/test",
            "OpsLevel.docs/contributing",
            "JFrog.license_compliance",
            "OpenSearch.analyze_text",
            "OpenSearch.get_mapping"
        ],
        "query": "What kind of open source license is used in this repo? Is it compatible with commercial use?",
        "response_time": 7655.397653579712,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Memgraph.Memgraph_Cypher_Generator"
        ],
        "matching_tools": [
            "Memgraph.Memgraph_Cypher_Generator"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Memgraph.Procedures_Catalog",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Query_Runner",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Export_Data_Tool"
        ],
        "returned_tools": [
            "Memgraph.Procedures_Catalog",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Memgraph_Cypher_Generator",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Query_Runner",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Export_Data_Tool"
        ],
        "query": "Show me how the different users in my social network are connected and find the shortest path between two people.",
        "response_time": 327.69036293029785,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "OpenSearch.analyze_text"
        ],
        "matching_tools": [
            "OpenSearch.analyze_text"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpenSearch.search",
            "OpenSearch.index_document",
            "OpenSearch.update_mapping",
            "OpenSearch.bulk",
            "OpenSearch.get_mapping",
            "OpenSearch.get_cluster_state",
            "OpenSearch.delete_index",
            "Tianji.search",
            "fetchSERP.Google_Search"
        ],
        "returned_tools": [
            "OpenSearch.search",
            "OpenSearch.index_document",
            "OpenSearch.analyze_text",
            "OpenSearch.update_mapping",
            "OpenSearch.bulk",
            "OpenSearch.get_mapping",
            "OpenSearch.get_cluster_state",
            "OpenSearch.delete_index",
            "Tianji.search",
            "fetchSERP.Google_Search"
        ],
        "query": "Why is my search for 'quick brown fox' not returning the expected results in my document index?",
        "response_time": 314.0146732330322,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Netdata.netdata_info"
        ],
        "matching_tools": [
            "Netdata.netdata_info"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Netdata.netdata_stats",
            "Netdata.data_query",
            "Netdata.netdata_config",
            "Netdata.alarms_list",
            "Netdata.alarms_silence",
            "Netdata.system_info",
            "Memgraph.Export_Data_Tool",
            "Milvus.Data_Import_Export",
            "klusterai.Metrics"
        ],
        "returned_tools": [
            "Netdata.netdata_info",
            "Netdata.netdata_stats",
            "Netdata.data_query",
            "Netdata.netdata_config",
            "Netdata.alarms_list",
            "Netdata.alarms_silence",
            "Netdata.system_info",
            "Memgraph.Export_Data_Tool",
            "Milvus.Data_Import_Export",
            "klusterai.Metrics"
        ],
        "query": "What version of the monitoring agent is running on my server and does it support exporting metrics to external dashboards?",
        "response_time": 324.5861530303955,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Linear.API"
        ],
        "matching_tools": [],
        "missing_tools": [
            "Linear.API"
        ],
        "unexpected_tools": [
            "SonarQube.List_Issues",
            "SonarQube.Show_Issue_Details",
            "Linear.Actions",
            "OpenSearch.get_cluster_state",
            "Linear.Schemas",
            "GitHub.SearchIssues",
            "Shortcut.Ask",
            "GitHub.ListIssues",
            "GitHub.GetIssueComments",
            "Liveblocks.admin_get_user_roles"
        ],
        "returned_tools": [
            "SonarQube.List_Issues",
            "SonarQube.Show_Issue_Details",
            "Linear.Actions",
            "OpenSearch.get_cluster_state",
            "Linear.Schemas",
            "GitHub.SearchIssues",
            "Shortcut.Ask",
            "GitHub.ListIssues",
            "GitHub.GetIssueComments",
            "Liveblocks.admin_get_user_roles"
        ],
        "query": "Can you show me all the open issues assigned to me and their current status in my project workspace?",
        "response_time": 373.14343452453613,
        "match": false,
        "match_top_1": false,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.0,
        "recall_metric": 0.0,
        "judge_metric": 8.57
    },
    {
        "expected_tools": [
            "Rember.replace"
        ],
        "matching_tools": [
            "Rember.replace"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Rember.transform",
            "Rember.choices",
            "Zapier.Email_Parser",
            "Rember.extract",
            "Rember.compose",
            "Rember.rewrite",
            "Linear.Actions",
            "OpenSearch.index_document",
            "Klaviyo.Profiles"
        ],
        "returned_tools": [
            "Rember.replace",
            "Rember.transform",
            "Rember.choices",
            "Zapier.Email_Parser",
            "Rember.extract",
            "Rember.compose",
            "Rember.rewrite",
            "Linear.Actions",
            "OpenSearch.index_document",
            "Klaviyo.Profiles"
        ],
        "query": "How can I automatically update all instances of our old product name to the new one in our customer support emails?",
        "response_time": 506.5572261810303,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.43
    },
    {
        "expected_tools": [
            "Logfire.ask_groq_llama3"
        ],
        "matching_tools": [
            "Logfire.ask_groq_llama3"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Logfire.ask_openai_chat",
            "Logfire.list_python_packages",
            "Logfire.ask_chat_google",
            "Logfire.get_function_doc",
            "ThoughtSpot.upgrade",
            "Logfire.ask_ollama_chat",
            "Memgraph.Graph_Schema_Viewer",
            "Yunxin.Statistics_-_Monitoring",
            "Netdata.data_query"
        ],
        "returned_tools": [
            "Logfire.ask_groq_llama3",
            "Logfire.ask_openai_chat",
            "Logfire.list_python_packages",
            "Logfire.ask_chat_google",
            "Logfire.get_function_doc",
            "ThoughtSpot.upgrade",
            "Logfire.ask_ollama_chat",
            "Memgraph.Graph_Schema_Viewer",
            "Yunxin.Statistics_-_Monitoring",
            "Netdata.data_query"
        ],
        "query": "What are the main differences between the latest Llama-3 model and previous versions, and how does it impact performance in real-world applications?",
        "response_time": 312.8213882446289,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "JFrog.secrets_scan"
        ],
        "matching_tools": [
            "JFrog.secrets_scan"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "JFrog.iac_scan",
            "JFrog.dependency_check",
            "LaunchDarkly.api_key",
            "JFrog.container_scan",
            "GitHub.ListCodeScanningAlerts",
            "OpsLevel.code/license",
            "GitHub.ListSecretScanningAlerts",
            "JFrog.license_compliance",
            "JFrog.project_inspect"
        ],
        "returned_tools": [
            "JFrog.secrets_scan",
            "JFrog.iac_scan",
            "JFrog.dependency_check",
            "LaunchDarkly.api_key",
            "JFrog.container_scan",
            "GitHub.ListCodeScanningAlerts",
            "OpsLevel.code/license",
            "GitHub.ListSecretScanningAlerts",
            "JFrog.license_compliance",
            "JFrog.project_inspect"
        ],
        "query": "Can you check if there are any exposed credentials or API keys in my code repository?",
        "response_time": 377.63333320617676,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.57
    },
    {
        "expected_tools": [
            "Azure.azmcp_appconfig_kv_set"
        ],
        "matching_tools": [
            "Azure.azmcp_appconfig_kv_set"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_appconfig_kv_show",
            "Azure.azmcp_appconfig_account_list",
            "VSCode.vscode_settings_update",
            "Azure.azmcp_cli_command_run",
            "Nutrient.NodeController",
            "Twilio.config_management",
            "Azure.azmcp_appconfig_kv_lock",
            "Azure.azmcp_appconfig_kv_unlock"
        ],
        "returned_tools": [
            "Azure.azmcp_appconfig_kv_set",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_appconfig_kv_show",
            "Azure.azmcp_appconfig_account_list",
            "VSCode.vscode_settings_update",
            "Azure.azmcp_cli_command_run",
            "Nutrient.NodeController",
            "Twilio.config_management",
            "Azure.azmcp_appconfig_kv_lock",
            "Azure.azmcp_appconfig_kv_unlock"
        ],
        "query": "How do I update a configuration value for my cloud app without redeploying it?",
        "response_time": 327.8958797454834,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_workspace_list_folders"
        ],
        "matching_tools": [
            "VSCode.vscode_workspace_list_folders"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_workspace_open_folder",
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_workspace_close_folder",
            "VSCode.vscode_git_status",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_editor_insert_text",
            "VSCode.vscode_terminal_list",
            "VSCode.vscode_editor_get_selection"
        ],
        "returned_tools": [
            "VSCode.vscode_workspace_list_folders",
            "VSCode.vscode_workspace_open_folder",
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_workspace_close_folder",
            "VSCode.vscode_git_status",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_editor_insert_text",
            "VSCode.vscode_terminal_list",
            "VSCode.vscode_editor_get_selection"
        ],
        "query": "What folders do I have open in my current VSCode workspace?",
        "response_time": 1353.0864715576172,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 10.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_cosmos_database_container_item_query"
        ],
        "matching_tools": [],
        "missing_tools": [
            "Azure.azmcp_cosmos_database_container_item_query"
        ],
        "unexpected_tools": [
            "Liveblocks.admin_get_user_roles",
            "Campertunity.userProfile",
            "Azure.azmcp_search_index_query",
            "Azure.azmcp_kusto_query",
            "Klaviyo.Profiles",
            "LaunchDarkly.user",
            "Auth0.Identities",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_resourcegroup_list",
            "PlayCanvas.user"
        ],
        "returned_tools": [
            "Liveblocks.admin_get_user_roles",
            "Campertunity.userProfile",
            "Azure.azmcp_search_index_query",
            "Azure.azmcp_kusto_query",
            "Klaviyo.Profiles",
            "LaunchDarkly.user",
            "Auth0.Identities",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_resourcegroup_list",
            "PlayCanvas.user"
        ],
        "query": "Can you help me find all user profiles created in the last 30 days from our cloud database?",
        "response_time": 343.6925411224365,
        "match": false,
        "match_top_1": false,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.0,
        "recall_metric": 0.0,
        "judge_metric": 6.14
    },
    {
        "expected_tools": [
            "Memgraph.Visual_Query_Builder"
        ],
        "matching_tools": [
            "Memgraph.Visual_Query_Builder"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Memgraph.Graph_Visualizer",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Query_Runner",
            "Memgraph.Procedures_Catalog",
            "Memgraph.Memgraph_Cypher_Generator",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Export_Data_Tool"
        ],
        "returned_tools": [
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Query_Runner",
            "Memgraph.Procedures_Catalog",
            "Memgraph.Memgraph_Cypher_Generator",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Export_Data_Tool"
        ],
        "query": "How can I visually explore the connections between different actors and movies in a large film database without writing any code?",
        "response_time": 422.90687561035156,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.43
    },
    {
        "expected_tools": [
            "OctoEverywhere.Timelapse"
        ],
        "matching_tools": [
            "OctoEverywhere.Timelapse"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OctoEverywhere.Printer",
            "OctoEverywhere.GCodeTerminal",
            "OctoEverywhere.Knowledge",
            "OctoEverywhere.PrinterMainboard",
            "OctoEverywhere.System",
            "PlayCanvas.snapshot",
            "PlayCanvas.entity",
            "Azure.azmcp_appconfig_kv_show",
            "Yunxin.Recording_-_Playback"
        ],
        "returned_tools": [
            "OctoEverywhere.Timelapse",
            "OctoEverywhere.Printer",
            "OctoEverywhere.GCodeTerminal",
            "OctoEverywhere.Knowledge",
            "OctoEverywhere.PrinterMainboard",
            "OctoEverywhere.System",
            "PlayCanvas.snapshot",
            "PlayCanvas.entity",
            "Azure.azmcp_appconfig_kv_show",
            "Yunxin.Recording_-_Playback"
        ],
        "query": "Can you show me a video of my last 3D print job?",
        "response_time": 303.96366119384766,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "HubSpot.Marketing_Email_Analytics"
        ],
        "matching_tools": [
            "HubSpot.Marketing_Email_Analytics"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "HubSpot.Contact_Insights",
            "HubSpot.Workflow_Insights",
            "HubSpot.CRM_Search",
            "HubSpot.Deal_Pipeline_Overview",
            "HubSpot.Ticket_Management",
            "Tako.Raster",
            "OctoEverywhere.Knowledge",
            "Zapier.Email_Parser",
            "klusterai.Profiling"
        ],
        "returned_tools": [
            "HubSpot.Marketing_Email_Analytics",
            "HubSpot.Contact_Insights",
            "HubSpot.Workflow_Insights",
            "HubSpot.CRM_Search",
            "HubSpot.Deal_Pipeline_Overview",
            "HubSpot.Ticket_Management",
            "Tako.Raster",
            "OctoEverywhere.Knowledge",
            "Zapier.Email_Parser",
            "klusterai.Profiling"
        ],
        "query": "Can you show me which of our recent email campaigns had the best engagement and what factors contributed to it?",
        "response_time": 300.02498626708984,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Liveblocks.admin_set_user_roles"
        ],
        "matching_tools": [
            "Liveblocks.admin_set_user_roles"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Liveblocks.admin_remove_user_roles",
            "Liveblocks.admin_get_user_roles",
            "Liveblocks.user_kick",
            "Yunxin.Permission_-_Role_Management",
            "Liveblocks.get_user_presence",
            "Liveblocks.send_user_message",
            "Auth0.Policies",
            "Liveblocks.get_room_info",
            "Liveblocks.list_rooms"
        ],
        "returned_tools": [
            "Liveblocks.admin_set_user_roles",
            "Liveblocks.admin_remove_user_roles",
            "Liveblocks.admin_get_user_roles",
            "Liveblocks.user_kick",
            "Yunxin.Permission_-_Role_Management",
            "Liveblocks.get_user_presence",
            "Liveblocks.send_user_message",
            "Auth0.Policies",
            "Liveblocks.get_room_info",
            "Liveblocks.list_rooms"
        ],
        "query": "How do I change someone's permissions in a collaborative whiteboard room?",
        "response_time": 327.1951675415039,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "OpsLevel.security/codeql"
        ],
        "matching_tools": [
            "OpsLevel.security/codeql"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpsLevel.code/test",
            "GitHub.GetCodeScanningAlert",
            "OpsLevel.code/license",
            "GitHub.GetSecretScanningAlert",
            "OpsLevel.docs/readme",
            "OpsLevel.actions/github_actions",
            "OpsLevel.code/ci",
            "GitHub.ListCodeScanningAlerts",
            "OpsLevel.docs/contributing"
        ],
        "returned_tools": [
            "OpsLevel.security/codeql",
            "OpsLevel.code/test",
            "GitHub.GetCodeScanningAlert",
            "OpsLevel.code/license",
            "GitHub.GetSecretScanningAlert",
            "OpsLevel.docs/readme",
            "OpsLevel.actions/github_actions",
            "OpsLevel.code/ci",
            "GitHub.ListCodeScanningAlerts",
            "OpsLevel.docs/contributing"
        ],
        "query": "How can I check if my GitHub repo is set up for automated security scanning with static analysis tools?",
        "response_time": 315.52648544311523,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.RunWorkflow"
        ],
        "matching_tools": [
            "GitHub.RunWorkflow"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.ListAvailableToolsets",
            "OpsLevel.code/ci",
            "GitHub.CreatePullRequest",
            "GitHub.CreateRepository",
            "GitHub.MergePullRequest",
            "GitHub.GetWorkflowRun",
            "GitHub.EnableToolset",
            "GitHub.ListWorkflowRuns",
            "GitHub.AssignCopilotToIssue"
        ],
        "returned_tools": [
            "GitHub.RunWorkflow",
            "GitHub.ListAvailableToolsets",
            "OpsLevel.code/ci",
            "GitHub.CreatePullRequest",
            "GitHub.CreateRepository",
            "GitHub.MergePullRequest",
            "GitHub.GetWorkflowRun",
            "GitHub.EnableToolset",
            "GitHub.ListWorkflowRuns",
            "GitHub.AssignCopilotToIssue"
        ],
        "query": "How do I manually start a deployment pipeline for my project on GitHub?",
        "response_time": 306.8864345550537,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Cloudinary.mcp_logging"
        ],
        "matching_tools": [
            "Cloudinary.mcp_logging"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Cloudinary.mcp_proxy",
            "Cloudinary.mcp_upload",
            "Cloudinary.mcp_authentication",
            "Cloudinary.mcp_metadata",
            "Cloudinary.mcp_transformations",
            "Hunter.SSL_Check",
            "Octagon.ask_retrieval",
            "GitHub.GetCodeScanningAlert",
            "Twilio.toolbelt"
        ],
        "returned_tools": [
            "Cloudinary.mcp_logging",
            "Cloudinary.mcp_proxy",
            "Cloudinary.mcp_upload",
            "Cloudinary.mcp_authentication",
            "Cloudinary.mcp_metadata",
            "Cloudinary.mcp_transformations",
            "Hunter.SSL_Check",
            "Octagon.ask_retrieval",
            "GitHub.GetCodeScanningAlert",
            "Twilio.toolbelt"
        ],
        "query": "Why are some of my image uploads failing intermittently and how can I find more details about these errors?",
        "response_time": 330.2347660064697,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "Liveblocks.admin_get_user_roles"
        ],
        "matching_tools": [
            "Liveblocks.admin_get_user_roles"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Liveblocks.admin_set_user_roles",
            "Liveblocks.admin_remove_user_roles",
            "Liveblocks.get_user_presence",
            "Liveblocks.send_user_message",
            "Liveblocks.user_kick",
            "Auth0.Policies",
            "Auth0.Permissions",
            "Liveblocks.get_room_info",
            "Yunxin.Permission_-_Role_Management"
        ],
        "returned_tools": [
            "Liveblocks.admin_get_user_roles",
            "Liveblocks.admin_set_user_roles",
            "Liveblocks.admin_remove_user_roles",
            "Liveblocks.get_user_presence",
            "Liveblocks.send_user_message",
            "Liveblocks.user_kick",
            "Auth0.Policies",
            "Auth0.Permissions",
            "Liveblocks.get_room_info",
            "Yunxin.Permission_-_Role_Management"
        ],
        "query": "Can you tell me what permissions a specific user has in our collaborative whiteboard session?",
        "response_time": 34103.55734825134,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "OpenSearch.delete_document"
        ],
        "matching_tools": [
            "OpenSearch.delete_document"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpenSearch.delete_index",
            "OpenSearch.bulk",
            "OpenSearch.index_document",
            "OpenSearch.search",
            "OpenSearch.update_mapping",
            "OpenSearch.analyze_text",
            "Azure.azmcp_search_index_delete",
            "OpenSearch.get_mapping",
            "OpenSearch.get_cluster_state"
        ],
        "returned_tools": [
            "OpenSearch.delete_index",
            "OpenSearch.delete_document",
            "OpenSearch.bulk",
            "OpenSearch.index_document",
            "OpenSearch.search",
            "OpenSearch.update_mapping",
            "OpenSearch.analyze_text",
            "Azure.azmcp_search_index_delete",
            "OpenSearch.get_mapping",
            "OpenSearch.get_cluster_state"
        ],
        "query": "How do I remove an outdated product listing from my search database?",
        "response_time": 286.53740882873535,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "CodeLogic.Dependency_Resolver"
        ],
        "matching_tools": [
            "CodeLogic.Dependency_Resolver"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "CodeLogic.Scanner",
            "CodeLogic.Graph_Generator",
            "CodeLogic.Application_Modeler",
            "CodeLogic.Dataflow_Analyzer",
            "CodeLogic.Reporting_Engine",
            "Memgraph.Memgraph_Data_Retriever",
            "OpsLevel.code/license",
            "Nutrient.Health_Checking_Tool",
            "Liveblocks.list_rooms"
        ],
        "returned_tools": [
            "CodeLogic.Dependency_Resolver",
            "CodeLogic.Scanner",
            "CodeLogic.Graph_Generator",
            "CodeLogic.Application_Modeler",
            "CodeLogic.Dataflow_Analyzer",
            "CodeLogic.Reporting_Engine",
            "Memgraph.Memgraph_Data_Retriever",
            "OpsLevel.code/license",
            "Nutrient.Health_Checking_Tool",
            "Liveblocks.list_rooms"
        ],
        "query": "Can you show me all the libraries and services that the backend of our app depends on and how they are connected?",
        "response_time": 320.80888748168945,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_editor_get_selection"
        ],
        "matching_tools": [],
        "missing_tools": [
            "VSCode.vscode_editor_get_selection"
        ],
        "unexpected_tools": [
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_fs_write_file",
            "VSCode.vscode_editor_format_document",
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_editor_insert_text",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_git_diff",
            "VSCode.vscode_git_status",
            "VSCode.vscode_workspace_list_folders"
        ],
        "returned_tools": [
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_fs_write_file",
            "VSCode.vscode_editor_format_document",
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_editor_insert_text",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_git_diff",
            "VSCode.vscode_git_status",
            "VSCode.vscode_workspace_list_folders"
        ],
        "query": "What code do I currently have highlighted in my editor?",
        "response_time": 290.1430130004883,
        "match": false,
        "match_top_1": false,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.0,
        "recall_metric": 0.0,
        "judge_metric": 1.71
    },
    {
        "expected_tools": [
            "SonarQube.List_Projects"
        ],
        "matching_tools": [
            "SonarQube.List_Projects"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "SonarQube.Trigger_Project_Analysis",
            "SonarQube.Get_Project_Metrics",
            "SonarQube.Check_Quality_Gate",
            "SonarQube.List_Quality_Gates",
            "SonarQube.Show_Quality_Gate_Details",
            "SonarQube.Show_Issue_Details",
            "OpsLevel.code/license",
            "SonarQube.List_Issues",
            "GitHub.SearchCode"
        ],
        "returned_tools": [
            "SonarQube.List_Projects",
            "SonarQube.Trigger_Project_Analysis",
            "SonarQube.Get_Project_Metrics",
            "SonarQube.Check_Quality_Gate",
            "SonarQube.List_Quality_Gates",
            "SonarQube.Show_Quality_Gate_Details",
            "SonarQube.Show_Issue_Details",
            "OpsLevel.code/license",
            "SonarQube.List_Issues",
            "GitHub.SearchCode"
        ],
        "query": "What codebases are currently being tracked for code quality in our system?",
        "response_time": 293.4403419494629,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_git_status"
        ],
        "matching_tools": [
            "VSCode.vscode_git_status"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_git_log",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_git_commit",
            "Hyperbrowser.code_editor",
            "VSCode.vscode_git_diff",
            "VSCode.vscode_fs_write_file",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_git_pull"
        ],
        "returned_tools": [
            "VSCode.vscode_git_log",
            "VSCode.vscode_git_status",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_git_commit",
            "Hyperbrowser.code_editor",
            "VSCode.vscode_git_diff",
            "VSCode.vscode_fs_write_file",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_git_pull"
        ],
        "query": "What files have I changed in my project since my last commit?",
        "response_time": 284.41762924194336,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.71
    },
    {
        "expected_tools": [
            "VSCode.vscode_editor_insert_text"
        ],
        "matching_tools": [
            "VSCode.vscode_editor_insert_text"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_fs_write_file",
            "VSCode.vscode_editor_get_selection",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_debug_start",
            "VSCode.vscode_extension_list",
            "VSCode.vscode_git_commit",
            "VSCode.vscode_task_run",
            "VSCode.vscode_terminal_run_command"
        ],
        "returned_tools": [
            "VSCode.vscode_editor_insert_text",
            "VSCode.vscode_fs_write_file",
            "VSCode.vscode_editor_get_selection",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_debug_start",
            "VSCode.vscode_extension_list",
            "VSCode.vscode_git_commit",
            "VSCode.vscode_task_run",
            "VSCode.vscode_terminal_run_command"
        ],
        "query": "Can you help me add a print statement after this line in my Python file?",
        "response_time": 324.3365287780762,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.GetNotificationDetails"
        ],
        "matching_tools": [
            "GitHub.GetNotificationDetails"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetPullRequestStatus",
            "GitHub.GetPullRequestComments",
            "GitHub.GetPullRequest",
            "GitHub.ManageNotificationSubscription",
            "GitHub.SearchPullRequests",
            "GitHub.MarkAllNotificationsRead",
            "GitHub.GetPullRequestDiff",
            "GitHub.ListNotifications",
            "GitHub.GetPullRequestFiles"
        ],
        "returned_tools": [
            "GitHub.GetPullRequestStatus",
            "GitHub.GetNotificationDetails",
            "GitHub.GetPullRequestComments",
            "GitHub.GetPullRequest",
            "GitHub.ManageNotificationSubscription",
            "GitHub.SearchPullRequests",
            "GitHub.MarkAllNotificationsRead",
            "GitHub.GetPullRequestDiff",
            "GitHub.ListNotifications",
            "GitHub.GetPullRequestFiles"
        ],
        "query": "What was the last notification I received about a pull request on my repo?",
        "response_time": 35189.045429229736,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_keyvault_key_create"
        ],
        "matching_tools": [
            "Azure.azmcp_keyvault_key_create"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_appconfig_kv_set",
            "Azure.azmcp_appconfig_kv_lock",
            "Azure.azmcp_keyvault_key_list",
            "Azure.azmcp_cli_command_run",
            "Azure.azmcp_keyvault_key_get",
            "LaunchDarkly.api_key",
            "ThoughtSpot.license",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_subscription_list"
        ],
        "returned_tools": [
            "Azure.azmcp_keyvault_key_create",
            "Azure.azmcp_appconfig_kv_set",
            "Azure.azmcp_appconfig_kv_lock",
            "Azure.azmcp_keyvault_key_list",
            "Azure.azmcp_cli_command_run",
            "Azure.azmcp_keyvault_key_get",
            "LaunchDarkly.api_key",
            "ThoughtSpot.license",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_subscription_list"
        ],
        "query": "How do I generate a new encryption key for my cloud application securely?",
        "response_time": 390.3205394744873,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.GetPullRequest"
        ],
        "matching_tools": [
            "GitHub.GetPullRequest"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetCommit",
            "GitHub.SearchPullRequests",
            "GitHub.GetPullRequestStatus",
            "GitHub.ListPullRequests",
            "GitHub.GetPullRequestDiff",
            "GitHub.GetPullRequestReviews",
            "GitHub.GetCodeScanningAlert",
            "GitHub.MergePullRequest",
            "GitHub.UpdatePullRequest"
        ],
        "returned_tools": [
            "GitHub.GetPullRequest",
            "GitHub.GetCommit",
            "GitHub.SearchPullRequests",
            "GitHub.GetPullRequestStatus",
            "GitHub.ListPullRequests",
            "GitHub.GetPullRequestDiff",
            "GitHub.GetPullRequestReviews",
            "GitHub.GetCodeScanningAlert",
            "GitHub.MergePullRequest",
            "GitHub.UpdatePullRequest"
        ],
        "query": "Can you show me the details of pull request number 42 in this repository?",
        "response_time": 330.03687858581543,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.29
    },
    {
        "expected_tools": [
            "Globalping.trace"
        ],
        "matching_tools": [
            "Globalping.trace"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "WaveSpeed.Ping",
            "Globalping.dns",
            "Globalping.ping",
            "WaveSpeed.Traceroute",
            "Globalping.mtr",
            "Globalping.tcp",
            "Globalping.http",
            "Hunter.Ping",
            "Hunter.Traceroute"
        ],
        "returned_tools": [
            "WaveSpeed.Ping",
            "Globalping.dns",
            "Globalping.ping",
            "WaveSpeed.Traceroute",
            "Globalping.mtr",
            "Globalping.tcp",
            "Globalping.trace",
            "Globalping.http",
            "Hunter.Ping",
            "Hunter.Traceroute"
        ],
        "query": "Why is my connection to github.com so slow from Europe? Can you check the network path?",
        "response_time": 294.73876953125,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 10.0
    },
    {
        "expected_tools": [
            "GitHub.CreatePendingPullRequestReview"
        ],
        "matching_tools": [
            "GitHub.CreatePendingPullRequestReview"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.RequestCopilotReview",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.SubmitPendingPullRequestReview",
            "GitHub.GetPullRequestReviews",
            "GitHub.CreatePullRequest",
            "GitHub.GetPullRequestComments",
            "GitHub.GetPullRequest",
            "GitHub.GetIssueComments"
        ],
        "returned_tools": [
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.CreatePendingPullRequestReview",
            "GitHub.RequestCopilotReview",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.SubmitPendingPullRequestReview",
            "GitHub.GetPullRequestReviews",
            "GitHub.CreatePullRequest",
            "GitHub.GetPullRequestComments",
            "GitHub.GetPullRequest",
            "GitHub.GetIssueComments"
        ],
        "query": "Can you help me start a review for a pull request but not submit it yet? I want to leave some comments before finalizing.",
        "response_time": 456.04443550109863,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.57
    },
    {
        "expected_tools": [
            "LaunchDarkly.project"
        ],
        "matching_tools": [
            "LaunchDarkly.project"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "LaunchDarkly.feature_flag",
            "LaunchDarkly.environment",
            "Twilio.config_management",
            "LaunchDarkly.api_key",
            "LaunchDarkly.account",
            "LaunchDarkly.user",
            "ThoughtSpot.upgrade",
            "DevRev.ticket_categorization",
            "Riza.classification"
        ],
        "returned_tools": [
            "LaunchDarkly.feature_flag",
            "LaunchDarkly.environment",
            "Twilio.config_management",
            "LaunchDarkly.project",
            "LaunchDarkly.api_key",
            "LaunchDarkly.account",
            "LaunchDarkly.user",
            "ThoughtSpot.upgrade",
            "DevRev.ticket_categorization",
            "Riza.classification"
        ],
        "query": "How do I organize my feature flag rollout across different teams and environments?",
        "response_time": 299.1058826446533,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Hyperbolic.web_search"
        ],
        "matching_tools": [
            "Hyperbolic.web_search"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hyperbolic.terminal",
            "Hyperbolic.python",
            "ThoughtSpot.upgrade",
            "DevRev.priority_detection",
            "fetchSERP.Google_News",
            "PlayCanvas.snapshot",
            "ThoughtSpot.license",
            "Hyperbrowser.text_comparison",
            "Yunxin.Notification_-_Callback"
        ],
        "returned_tools": [
            "Hyperbolic.terminal",
            "Hyperbolic.python",
            "Hyperbolic.web_search",
            "ThoughtSpot.upgrade",
            "DevRev.priority_detection",
            "fetchSERP.Google_News",
            "PlayCanvas.snapshot",
            "ThoughtSpot.license",
            "Hyperbrowser.text_comparison",
            "Yunxin.Notification_-_Callback"
        ],
        "query": "What are the latest updates about the new features in Slack and how do they compare to Microsoft Teams?",
        "response_time": 343.994140625,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Liveblocks.get_user_presence"
        ],
        "matching_tools": [
            "Liveblocks.get_user_presence"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Liveblocks.list_rooms",
            "Liveblocks.admin_get_user_roles",
            "Liveblocks.get_room_info",
            "Liveblocks.send_user_message",
            "WaveSpeed.Port_Scan",
            "Liveblocks.admin_remove_user_roles",
            "Liveblocks.user_kick",
            "Yunxin.Room_Management",
            "OctoEverywhere.Knowledge"
        ],
        "returned_tools": [
            "Liveblocks.get_user_presence",
            "Liveblocks.list_rooms",
            "Liveblocks.admin_get_user_roles",
            "Liveblocks.get_room_info",
            "Liveblocks.send_user_message",
            "WaveSpeed.Port_Scan",
            "Liveblocks.admin_remove_user_roles",
            "Liveblocks.user_kick",
            "Yunxin.Room_Management",
            "OctoEverywhere.Knowledge"
        ],
        "query": "Can you tell me if my teammates are currently online in our shared workspace?",
        "response_time": 334.58471298217773,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.43
    },
    {
        "expected_tools": [
            "Notion.query_database"
        ],
        "matching_tools": [
            "Notion.query_database"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Liveblocks.admin_get_user_roles",
            "Notion.search_blocks",
            "Notion.search_users",
            "Octagon.ask_retrieval",
            "Notion.get_database",
            "Notion.search_databases",
            "Notion.get_block",
            "Notion.update_database",
            "CodeLogic.Dependency_Resolver"
        ],
        "returned_tools": [
            "Liveblocks.admin_get_user_roles",
            "Notion.search_blocks",
            "Notion.search_users",
            "Octagon.ask_retrieval",
            "Notion.get_database",
            "Notion.search_databases",
            "Notion.get_block",
            "Notion.query_database",
            "Notion.update_database",
            "CodeLogic.Dependency_Resolver"
        ],
        "query": "Can you help me find all the tasks I assigned to my team last month that are still marked as incomplete?",
        "response_time": 355.2367687225342,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "LaunchDarkly.feature_flag"
        ],
        "matching_tools": [
            "LaunchDarkly.feature_flag"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "ThoughtSpot.upgrade",
            "LaunchDarkly.environment",
            "LaunchDarkly.account",
            "LaunchDarkly.project",
            "LaunchDarkly.user",
            "ThoughtSpot.license",
            "LaunchDarkly.api_key",
            "ThoughtSpot.admin",
            "Twilio.project_templates"
        ],
        "returned_tools": [
            "LaunchDarkly.feature_flag",
            "ThoughtSpot.upgrade",
            "LaunchDarkly.environment",
            "LaunchDarkly.account",
            "LaunchDarkly.project",
            "LaunchDarkly.user",
            "ThoughtSpot.license",
            "LaunchDarkly.api_key",
            "ThoughtSpot.admin",
            "Twilio.project_templates"
        ],
        "query": "How can I check which new features are currently enabled for our users in production?",
        "response_time": 354.88176345825195,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.71
    },
    {
        "expected_tools": [
            "Upstash.String"
        ],
        "matching_tools": [
            "Upstash.String"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Upstash.Set",
            "Upstash.Keys",
            "Upstash.Hash",
            "Azure.azmcp_appconfig_kv_set",
            "Upstash.PubSub",
            "Linear.Actions",
            "VSCode.vscode_settings_update",
            "Upstash.List",
            "PlayCanvas.session"
        ],
        "returned_tools": [
            "Upstash.Set",
            "Upstash.Keys",
            "Upstash.Hash",
            "Azure.azmcp_appconfig_kv_set",
            "Upstash.PubSub",
            "Linear.Actions",
            "VSCode.vscode_settings_update",
            "Upstash.String",
            "Upstash.List",
            "PlayCanvas.session"
        ],
        "query": "how can I quickly update a user's session token in my backend?",
        "response_time": 312.0715618133545,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "SonarQube.List_Quality_Gates"
        ],
        "matching_tools": [
            "SonarQube.List_Quality_Gates"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "SonarQube.Check_Quality_Gate",
            "SonarQube.Show_Quality_Gate_Details",
            "SonarQube.Get_Project_Metrics",
            "SonarQube.Trigger_Project_Analysis",
            "SonarQube.List_Projects",
            "SonarQube.List_Issues",
            "JFrog.license_compliance",
            "SonarQube.Show_Issue_Details",
            "OpsLevel.code/license"
        ],
        "returned_tools": [
            "SonarQube.List_Quality_Gates",
            "SonarQube.Check_Quality_Gate",
            "SonarQube.Show_Quality_Gate_Details",
            "SonarQube.Get_Project_Metrics",
            "SonarQube.Trigger_Project_Analysis",
            "SonarQube.List_Projects",
            "SonarQube.List_Issues",
            "JFrog.license_compliance",
            "SonarQube.Show_Issue_Details",
            "OpsLevel.code/license"
        ],
        "query": "What are the different code quality gates I can use for my project in SonarQube?",
        "response_time": 288.5162830352783,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.57
    },
    {
        "expected_tools": [
            "Linear.Computed_Fields"
        ],
        "matching_tools": [
            "Linear.Computed_Fields"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Linear.Data_Loading",
            "klusterai.Metrics",
            "Linear.Actions",
            "Zapier.Schedule",
            "Linear.Schemas",
            "Zapier.Code_by_Zapier",
            "SonarQube.Get_Project_Metrics",
            "ZIZAI Recruitment.task",
            "Shortcut.Summarize"
        ],
        "returned_tools": [
            "Linear.Data_Loading",
            "Linear.Computed_Fields",
            "klusterai.Metrics",
            "Linear.Actions",
            "Zapier.Schedule",
            "Linear.Schemas",
            "Zapier.Code_by_Zapier",
            "SonarQube.Get_Project_Metrics",
            "ZIZAI Recruitment.task",
            "Shortcut.Summarize"
        ],
        "query": "How can I automatically calculate the total estimated time for all tasks in a project without manually updating each time field?",
        "response_time": 324.59068298339844,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "JFrog.secrets_scan"
        ],
        "matching_tools": [
            "JFrog.secrets_scan"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "JFrog.iac_scan",
            "GitHub.ListSecretScanningAlerts",
            "JFrog.dependency_check",
            "GitHub.ListCodeScanningAlerts",
            "JFrog.container_scan",
            "OpsLevel.security/codeql",
            "JFrog.license_compliance",
            "WaveSpeed.Port_Scan",
            "OpsLevel.code/license"
        ],
        "returned_tools": [
            "JFrog.secrets_scan",
            "JFrog.iac_scan",
            "GitHub.ListSecretScanningAlerts",
            "JFrog.dependency_check",
            "GitHub.ListCodeScanningAlerts",
            "JFrog.container_scan",
            "OpsLevel.security/codeql",
            "JFrog.license_compliance",
            "WaveSpeed.Port_Scan",
            "OpsLevel.code/license"
        ],
        "query": "Can you check if there are any exposed secrets or passwords in my code repository?",
        "response_time": 357.2573661804199,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_servicebus_message_send"
        ],
        "matching_tools": [
            "Azure.azmcp_servicebus_message_send"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_servicebus_message_receive",
            "Azure.azmcp_kusto_query",
            "Liveblocks.send_user_message",
            "Zapier.Email_Parser",
            "Azure.azmcp_cli_command_run",
            "Azure.azmcp_storage_blob_upload",
            "GitHub.RunWorkflow",
            "Azure.azmcp_servicebus_queue_list",
            "VSCode.vscode_copilot_chat_send"
        ],
        "returned_tools": [
            "Azure.azmcp_servicebus_message_send",
            "Azure.azmcp_servicebus_message_receive",
            "Azure.azmcp_kusto_query",
            "Liveblocks.send_user_message",
            "Zapier.Email_Parser",
            "Azure.azmcp_cli_command_run",
            "Azure.azmcp_storage_blob_upload",
            "GitHub.RunWorkflow",
            "Azure.azmcp_servicebus_queue_list",
            "VSCode.vscode_copilot_chat_send"
        ],
        "query": "How can I trigger a workflow in my cloud system by sending a message to a queue?",
        "response_time": 332.9195976257324,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Hunter.SSL_Check"
        ],
        "matching_tools": [
            "Hunter.SSL_Check"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hunter.Whois_Lookup",
            "OpsLevel.code/license",
            "Hunter.DNS_Lookup",
            "Hunter.Ping",
            "Globalping.http",
            "Hunter.Traceroute",
            "GitHub.GetMe",
            "WaveSpeed.Whois",
            "Hunter.IP_Lookup"
        ],
        "returned_tools": [
            "Hunter.SSL_Check",
            "Hunter.Whois_Lookup",
            "OpsLevel.code/license",
            "Hunter.DNS_Lookup",
            "Hunter.Ping",
            "Globalping.http",
            "Hunter.Traceroute",
            "GitHub.GetMe",
            "WaveSpeed.Whois",
            "Hunter.IP_Lookup"
        ],
        "query": "Is the SSL certificate for this website still valid or is it about to expire?",
        "response_time": 318.9859390258789,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.71
    },
    {
        "expected_tools": [
            "ThoughtSpot.upgrade"
        ],
        "matching_tools": [
            "ThoughtSpot.upgrade"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "ThoughtSpot.license",
            "ThoughtSpot.admin",
            "ThoughtSpot.analytics",
            "ThoughtSpot.cluster",
            "ThoughtSpot.backup",
            "ThoughtSpot.service",
            "WaveSpeed.Port_Scan",
            "Netdata.netdata_info",
            "OpenSearch.get_cluster_state"
        ],
        "returned_tools": [
            "ThoughtSpot.upgrade",
            "ThoughtSpot.license",
            "ThoughtSpot.admin",
            "ThoughtSpot.analytics",
            "ThoughtSpot.cluster",
            "ThoughtSpot.backup",
            "ThoughtSpot.service",
            "WaveSpeed.Port_Scan",
            "Netdata.netdata_info",
            "OpenSearch.get_cluster_state"
        ],
        "query": "How do I check if my analytics platform is running the latest version and update it if needed?",
        "response_time": 343.599796295166,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Riza.text_completion"
        ],
        "matching_tools": [
            "Riza.text_completion"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Riza.text_editing",
            "Riza.question_answering",
            "Riza.chat",
            "Tianji.answer",
            "Riza.classification",
            "LINE.Confirm",
            "OctoEverywhere.Knowledge",
            "Riza.summarization",
            "Zapier.Email_Parser"
        ],
        "returned_tools": [
            "Riza.text_editing",
            "Riza.question_answering",
            "Riza.chat",
            "Riza.text_completion",
            "Tianji.answer",
            "Riza.classification",
            "LINE.Confirm",
            "OctoEverywhere.Knowledge",
            "Riza.summarization",
            "Zapier.Email_Parser"
        ],
        "query": "Can you help me finish this email to my boss about requesting time off?",
        "response_time": 322.7396011352539,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Hyperbrowser.text_comparison"
        ],
        "matching_tools": [
            "Hyperbrowser.text_comparison"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hyperbrowser.web_browser",
            "Hyperbrowser.file_manager",
            "Hyperbrowser.bash",
            "Hyperbrowser.python",
            "Hyperbrowser.code_editor",
            "Auth0.Policies",
            "Hyperbolic.site_search",
            "Hyperbolic.web_search",
            "Tianji.search"
        ],
        "returned_tools": [
            "Hyperbrowser.text_comparison",
            "Hyperbrowser.web_browser",
            "Hyperbrowser.file_manager",
            "Hyperbrowser.bash",
            "Hyperbrowser.python",
            "Hyperbrowser.code_editor",
            "Auth0.Policies",
            "Hyperbolic.site_search",
            "Hyperbolic.web_search",
            "Tianji.search"
        ],
        "query": "How similar are the privacy policies of Instagram and Facebook?",
        "response_time": 293.78294944763184,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Campertunity.reviews"
        ],
        "matching_tools": [
            "Campertunity.reviews"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Campertunity.searchCamps",
            "Campertunity.listMyCamps",
            "Campertunity.messaging",
            "Campertunity.bookCamp",
            "Campertunity.userProfile",
            "DevRev.sentiment_analysis",
            "Hyperbolic.site_search",
            "SonarQube.Show_Issue_Details",
            "Liveblocks.get_room_info"
        ],
        "returned_tools": [
            "Campertunity.reviews",
            "Campertunity.searchCamps",
            "Campertunity.listMyCamps",
            "Campertunity.messaging",
            "Campertunity.bookCamp",
            "Campertunity.userProfile",
            "DevRev.sentiment_analysis",
            "Hyperbolic.site_search",
            "SonarQube.Show_Issue_Details",
            "Liveblocks.get_room_info"
        ],
        "query": "What do people think about the campsites near Banff? Are there any recent reviews or ratings for hosts in that area?",
        "response_time": 329.94580268859863,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.86
    },
    {
        "expected_tools": [
            "NanoVMs.Create_Deployment"
        ],
        "matching_tools": [
            "NanoVMs.Create_Deployment"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "NanoVMs.Describe_Deployment",
            "NanoVMs.SSH_Management",
            "NanoVMs.MCP_Image_Management",
            "NanoVMs.List_Deployments",
            "NanoVMs.Delete_Deployment",
            "Azure.azmcp_appconfig_kv_set",
            "VSCode.vscode_terminal_create",
            "ZIZAI Recruitment.settings",
            "LaunchDarkly.environment"
        ],
        "returned_tools": [
            "NanoVMs.Create_Deployment",
            "NanoVMs.Describe_Deployment",
            "NanoVMs.SSH_Management",
            "NanoVMs.MCP_Image_Management",
            "NanoVMs.List_Deployments",
            "NanoVMs.Delete_Deployment",
            "Azure.azmcp_appconfig_kv_set",
            "VSCode.vscode_terminal_create",
            "ZIZAI Recruitment.settings",
            "LaunchDarkly.environment"
        ],
        "query": "How do I set up a new secure VM environment for my microservices with custom configurations?",
        "response_time": 314.6224021911621,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Twilio.plugin_management"
        ],
        "matching_tools": [
            "Twilio.plugin_management"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Twilio.toolbelt",
            "Twilio.config_management",
            "Twilio.project_templates",
            "Twilio.access_management",
            "Klaviyo.Templates",
            "Twilio.reporting",
            "VSCode.vscode_extension_install",
            "CodeLogic.Dependency_Resolver",
            "Upstash.Set"
        ],
        "returned_tools": [
            "Twilio.plugin_management",
            "Twilio.toolbelt",
            "Twilio.config_management",
            "Twilio.project_templates",
            "Twilio.access_management",
            "Klaviyo.Templates",
            "Twilio.reporting",
            "VSCode.vscode_extension_install",
            "CodeLogic.Dependency_Resolver",
            "Upstash.Set"
        ],
        "query": "How do I add new features to my Twilio CLI for SMS automation?",
        "response_time": 356.8763732910156,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Twilio.reporting"
        ],
        "matching_tools": [
            "Twilio.reporting"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetIssue",
            "Twilio.config_management",
            "Twilio.toolbelt",
            "Twilio.plugin_management",
            "YepCode.rabbitmq",
            "Twilio.access_management",
            "GitHub.GetIssueComments",
            "Twilio.project_templates",
            "WaveSpeed.Ping"
        ],
        "returned_tools": [
            "Twilio.reporting",
            "GitHub.GetIssue",
            "Twilio.config_management",
            "Twilio.toolbelt",
            "Twilio.plugin_management",
            "YepCode.rabbitmq",
            "Twilio.access_management",
            "GitHub.GetIssueComments",
            "Twilio.project_templates",
            "WaveSpeed.Ping"
        ],
        "query": "How many SMS messages did we send last month and were there any delivery issues?",
        "response_time": 318.0699348449707,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.71
    },
    {
        "expected_tools": [
            "GitHub.SearchCode"
        ],
        "matching_tools": [
            "GitHub.SearchCode"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetMe",
            "JFrog.secrets_scan",
            "GitHub.ListAvailableToolsets",
            "GitHub.GetWorkflowRunLogs",
            "Hiveflow.User_-_Access_Management",
            "PlayCanvas.session",
            "Cloudinary.mcp_authentication",
            "GitHub.UpdatePullRequestBranch",
            "OpsLevel.security/codeql"
        ],
        "returned_tools": [
            "GitHub.GetMe",
            "JFrog.secrets_scan",
            "GitHub.SearchCode",
            "GitHub.ListAvailableToolsets",
            "GitHub.GetWorkflowRunLogs",
            "Hiveflow.User_-_Access_Management",
            "PlayCanvas.session",
            "Cloudinary.mcp_authentication",
            "GitHub.UpdatePullRequestBranch",
            "OpsLevel.security/codeql"
        ],
        "query": "Where in the codebase is the function that handles user authentication?",
        "response_time": 296.41079902648926,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.14
    },
    {
        "expected_tools": [
            "Hunter.Traceroute"
        ],
        "matching_tools": [
            "Hunter.Traceroute"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "WaveSpeed.Ping",
            "Hunter.Ping",
            "WaveSpeed.Traceroute",
            "Globalping.ping",
            "Hunter.DNS_Lookup",
            "Globalping.dns",
            "Hunter.SSL_Check",
            "Hunter.IP_Lookup",
            "Globalping.mtr"
        ],
        "returned_tools": [
            "WaveSpeed.Ping",
            "Hunter.Ping",
            "WaveSpeed.Traceroute",
            "Globalping.ping",
            "Hunter.DNS_Lookup",
            "Globalping.dns",
            "Hunter.SSL_Check",
            "Hunter.Traceroute",
            "Hunter.IP_Lookup",
            "Globalping.mtr"
        ],
        "query": "Why is my connection to github.com so slow from my office network?",
        "response_time": 345.78967094421387,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.14
    },
    {
        "expected_tools": [
            "Shortcut.Delete"
        ],
        "matching_tools": [
            "Shortcut.Delete"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Shortcut.Update",
            "Shortcut.Comment",
            "Shortcut.Summarize",
            "LaunchDarkly.project",
            "Shortcut.Create",
            "GitHub.GetIssueComments",
            "Shortcut.Ask",
            "LaunchDarkly.user",
            "VSCode.vscode_fs_delete_file"
        ],
        "returned_tools": [
            "Shortcut.Delete",
            "Shortcut.Update",
            "Shortcut.Comment",
            "Shortcut.Summarize",
            "LaunchDarkly.project",
            "Shortcut.Create",
            "GitHub.GetIssueComments",
            "Shortcut.Ask",
            "LaunchDarkly.user",
            "VSCode.vscode_fs_delete_file"
        ],
        "query": "Can you remove the old tasks and comments from my project board?",
        "response_time": 1357.0740222930908,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_settings_get"
        ],
        "matching_tools": [
            "VSCode.vscode_settings_get"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_settings_update",
            "ThoughtSpot.upgrade",
            "ThoughtSpot.license",
            "VSCode.vscode_extension_list",
            "VSCode.vscode_git_status",
            "VSCode.vscode_extension_install",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_terminal_list",
            "VSCode.vscode_git_log"
        ],
        "returned_tools": [
            "VSCode.vscode_settings_get",
            "VSCode.vscode_settings_update",
            "ThoughtSpot.upgrade",
            "ThoughtSpot.license",
            "VSCode.vscode_extension_list",
            "VSCode.vscode_git_status",
            "VSCode.vscode_extension_install",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_terminal_list",
            "VSCode.vscode_git_log"
        ],
        "query": "How do I check what my current VSCode theme is set to?",
        "response_time": 641.8428421020508,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_postgres_table_query"
        ],
        "matching_tools": [],
        "missing_tools": [
            "Azure.azmcp_postgres_table_query"
        ],
        "unexpected_tools": [
            "Azure.azmcp_search_index_query",
            "PlayCanvas.user",
            "Liveblocks.admin_get_user_roles",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_postgres_server_list",
            "Azure.azmcp_subscription_list",
            "Azure.azmcp_storage_account_list",
            "Auth0.Identities",
            "Azure.azmcp_resourcegroup_list"
        ],
        "returned_tools": [
            "Azure.azmcp_search_index_query",
            "PlayCanvas.user",
            "Liveblocks.admin_get_user_roles",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_postgres_server_list",
            "Azure.azmcp_subscription_list",
            "Azure.azmcp_storage_account_list",
            "Auth0.Identities",
            "Azure.azmcp_resourcegroup_list"
        ],
        "query": "Can you show me the latest user signups and their email domains from our database?",
        "response_time": 550.1306056976318,
        "match": false,
        "match_top_1": false,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.0,
        "recall_metric": 0.0,
        "judge_metric": 4.29
    },
    {
        "expected_tools": [
            "VSCode.vscode_git_commit"
        ],
        "matching_tools": [
            "VSCode.vscode_git_commit"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_git_push",
            "VSCode.vscode_copilot_chat_send",
            "VSCode.vscode_git_status",
            "VSCode.vscode_settings_update",
            "Hyperbrowser.code_editor",
            "VSCode.vscode_fs_write_file",
            "VSCode.vscode_editor_replace_selection",
            "VSCode.vscode_git_log",
            "VSCode.vscode_settings_get"
        ],
        "returned_tools": [
            "VSCode.vscode_git_commit",
            "VSCode.vscode_git_push",
            "VSCode.vscode_copilot_chat_send",
            "VSCode.vscode_git_status",
            "VSCode.vscode_settings_update",
            "Hyperbrowser.code_editor",
            "VSCode.vscode_fs_write_file",
            "VSCode.vscode_editor_replace_selection",
            "VSCode.vscode_git_log",
            "VSCode.vscode_settings_get"
        ],
        "query": "How do I save my latest code changes with a message in my project?",
        "response_time": 337.9170894622803,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_terminal_list"
        ],
        "matching_tools": [
            "VSCode.vscode_terminal_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_terminal_run_command",
            "VSCode.vscode_workspace_list_folders",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_terminal_close",
            "WaveSpeed.Port_Scan",
            "VSCode.vscode_terminal_create",
            "VSCode.vscode_workspace_open_folder",
            "VSCode.vscode_fs_read_file"
        ],
        "returned_tools": [
            "VSCode.vscode_terminal_list",
            "VSCode.vscode_terminal_run_command",
            "VSCode.vscode_workspace_list_folders",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_terminal_close",
            "WaveSpeed.Port_Scan",
            "VSCode.vscode_terminal_create",
            "VSCode.vscode_workspace_open_folder",
            "VSCode.vscode_fs_read_file"
        ],
        "query": "How can I see which terminals are currently open in my VSCode workspace?",
        "response_time": 454.80895042419434,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.86
    },
    {
        "expected_tools": [
            "SonarQube.Trigger_Project_Analysis"
        ],
        "matching_tools": [
            "SonarQube.Trigger_Project_Analysis"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "SonarQube.Show_Issue_Details",
            "SonarQube.List_Issues",
            "SonarQube.Show_Quality_Gate_Details",
            "SonarQube.Get_Project_Metrics",
            "SonarQube.Check_Quality_Gate",
            "SonarQube.List_Projects",
            "OpsLevel.code/test",
            "GitHub.ListCodeScanningAlerts",
            "GitHub.SearchIssues"
        ],
        "returned_tools": [
            "SonarQube.Trigger_Project_Analysis",
            "SonarQube.Show_Issue_Details",
            "SonarQube.List_Issues",
            "SonarQube.Show_Quality_Gate_Details",
            "SonarQube.Get_Project_Metrics",
            "SonarQube.Check_Quality_Gate",
            "SonarQube.List_Projects",
            "OpsLevel.code/test",
            "GitHub.ListCodeScanningAlerts",
            "GitHub.SearchIssues"
        ],
        "query": "Can you check if there are any new code quality issues in our main project after the last commit?",
        "response_time": 302.36363410949707,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "ThoughtSpot.admin"
        ],
        "matching_tools": [
            "ThoughtSpot.admin"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "ThoughtSpot.license",
            "ThoughtSpot.backup",
            "ThoughtSpot.service",
            "ThoughtSpot.upgrade",
            "WaveSpeed.Port_Scan",
            "ThoughtSpot.cluster",
            "ThoughtSpot.analytics",
            "ZIZAI Recruitment.settings",
            "LaunchDarkly.user"
        ],
        "returned_tools": [
            "ThoughtSpot.admin",
            "ThoughtSpot.license",
            "ThoughtSpot.backup",
            "ThoughtSpot.service",
            "ThoughtSpot.upgrade",
            "WaveSpeed.Port_Scan",
            "ThoughtSpot.cluster",
            "ThoughtSpot.analytics",
            "ZIZAI Recruitment.settings",
            "LaunchDarkly.user"
        ],
        "query": "How do I reset a user's password and check if the system is running normally?",
        "response_time": 308.4442615509033,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.29
    },
    {
        "expected_tools": [
            "Auth0.Entitlements"
        ],
        "matching_tools": [
            "Auth0.Entitlements"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Auth0.Policies",
            "Auth0.Resource_Registration",
            "Auth0.Permissions",
            "Auth0.Identities",
            "Liveblocks.admin_set_user_roles",
            "Yunxin.Permission_-_Role_Management",
            "Azure.azmcp_appconfig_kv_set",
            "Hiveflow.User_-_Access_Management",
            "Azure.azmcp_resourcegroup_list"
        ],
        "returned_tools": [
            "Auth0.Policies",
            "Auth0.Entitlements",
            "Auth0.Resource_Registration",
            "Auth0.Permissions",
            "Auth0.Identities",
            "Liveblocks.admin_set_user_roles",
            "Yunxin.Permission_-_Role_Management",
            "Azure.azmcp_appconfig_kv_set",
            "Hiveflow.User_-_Access_Management",
            "Azure.azmcp_resourcegroup_list"
        ],
        "query": "What resources can a user access in our system and how do I update their permissions?",
        "response_time": 313.97223472595215,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.86
    },
    {
        "expected_tools": [
            "AWS.Convert_AWS_Step_Functions_YAML_to_ASL_JSON"
        ],
        "matching_tools": [
            "AWS.Convert_AWS_Step_Functions_YAML_to_ASL_JSON"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "AWS.Convert_AWS_Step_Functions_Amazon_States_Language_(ASL)_to_YAML",
            "AWS.Convert_CDK_StepFunction_Constructs_to_MCP_YAML",
            "AWS.Local_Simulation_of_Step_Functions_Workflows",
            "AWS.Validate_State_Machine_Definitions",
            "AWS.Workflow_Coverage_and_Step_Analysis",
            "OpsLevel.code/ci",
            "GitHub.MergePullRequest",
            "Rember.transform",
            "Memgraph.Graph_Schema_Viewer"
        ],
        "returned_tools": [
            "AWS.Convert_AWS_Step_Functions_YAML_to_ASL_JSON",
            "AWS.Convert_AWS_Step_Functions_Amazon_States_Language_(ASL)_to_YAML",
            "AWS.Convert_CDK_StepFunction_Constructs_to_MCP_YAML",
            "AWS.Local_Simulation_of_Step_Functions_Workflows",
            "AWS.Validate_State_Machine_Definitions",
            "AWS.Workflow_Coverage_and_Step_Analysis",
            "OpsLevel.code/ci",
            "GitHub.MergePullRequest",
            "Rember.transform",
            "Memgraph.Graph_Schema_Viewer"
        ],
        "query": "I have a step function workflow written in YAML, how do I get it into the format AWS expects for deployment?",
        "response_time": 343.78981590270996,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.ListNotifications"
        ],
        "matching_tools": [
            "GitHub.ListNotifications"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetNotificationDetails",
            "GitHub.ManageNotificationSubscription",
            "GitHub.ManageRepositoryNotificationSubscription",
            "GitHub.MarkAllNotificationsRead",
            "GitHub.GetSecretScanningAlert",
            "GitHub.ListSecretScanningAlerts",
            "GitHub.GetCodeScanningAlert",
            "GitHub.ListCodeScanningAlerts",
            "GitHub.GetIssueComments"
        ],
        "returned_tools": [
            "GitHub.GetNotificationDetails",
            "GitHub.ManageNotificationSubscription",
            "GitHub.ListNotifications",
            "GitHub.ManageRepositoryNotificationSubscription",
            "GitHub.MarkAllNotificationsRead",
            "GitHub.GetSecretScanningAlert",
            "GitHub.ListSecretScanningAlerts",
            "GitHub.GetCodeScanningAlert",
            "GitHub.ListCodeScanningAlerts",
            "GitHub.GetIssueComments"
        ],
        "query": "What are my recent GitHub notifications? Anything important I missed?",
        "response_time": 307.51752853393555,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.GetPullRequestStatus"
        ],
        "matching_tools": [
            "GitHub.GetPullRequestStatus"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetPullRequest",
            "GitHub.MergePullRequest",
            "GitHub.SearchPullRequests",
            "GitHub.GetPullRequestDiff",
            "GitHub.SubmitPendingPullRequestReview",
            "GitHub.GetPullRequestComments",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.UpdatePullRequest",
            "GitHub.UpdatePullRequestBranch"
        ],
        "returned_tools": [
            "GitHub.GetPullRequestStatus",
            "GitHub.GetPullRequest",
            "GitHub.MergePullRequest",
            "GitHub.SearchPullRequests",
            "GitHub.GetPullRequestDiff",
            "GitHub.SubmitPendingPullRequestReview",
            "GitHub.GetPullRequestComments",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.UpdatePullRequest",
            "GitHub.UpdatePullRequestBranch"
        ],
        "query": "Can you check if my latest pull request is ready to be merged or if there are any conflicts?",
        "response_time": 305.85575103759766,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "LaunchDarkly.feature_flag"
        ],
        "matching_tools": [
            "LaunchDarkly.feature_flag"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "LaunchDarkly.account",
            "LaunchDarkly.environment",
            "LaunchDarkly.user",
            "LaunchDarkly.api_key",
            "PlayCanvas.session",
            "LaunchDarkly.project",
            "ThoughtSpot.upgrade",
            "ThoughtSpot.license",
            "Hiveflow.User_-_Access_Management"
        ],
        "returned_tools": [
            "LaunchDarkly.account",
            "LaunchDarkly.feature_flag",
            "LaunchDarkly.environment",
            "LaunchDarkly.user",
            "LaunchDarkly.api_key",
            "PlayCanvas.session",
            "LaunchDarkly.project",
            "ThoughtSpot.upgrade",
            "ThoughtSpot.license",
            "Hiveflow.User_-_Access_Management"
        ],
        "query": "How can I check which features are currently enabled for our production environment and turn off the new login flow if needed?",
        "response_time": 310.685396194458,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.43
    },
    {
        "expected_tools": [
            "PlayCanvas.branch"
        ],
        "matching_tools": [
            "PlayCanvas.branch"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "PlayCanvas.snapshot",
            "PlayCanvas.entity",
            "PlayCanvas.project",
            "PlayCanvas.asset",
            "SonarQube.Trigger_Project_Analysis",
            "Hyperbrowser.code_editor",
            "PlayCanvas.session",
            "VSCode.vscode_git_commit",
            "ThoughtSpot.upgrade"
        ],
        "returned_tools": [
            "PlayCanvas.snapshot",
            "PlayCanvas.entity",
            "PlayCanvas.project",
            "PlayCanvas.branch",
            "PlayCanvas.asset",
            "SonarQube.Trigger_Project_Analysis",
            "Hyperbrowser.code_editor",
            "PlayCanvas.session",
            "VSCode.vscode_git_commit",
            "ThoughtSpot.upgrade"
        ],
        "query": "How do I create a new version of my 3D scene to test some changes without affecting the main project?",
        "response_time": 327.4054527282715,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Hunter.Whois_Lookup"
        ],
        "matching_tools": [
            "Hunter.Whois_Lookup"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "WaveSpeed.Whois",
            "Hunter.IP_Lookup",
            "Hunter.DNS_Lookup",
            "Hunter.SSL_Check",
            "ThoughtSpot.license",
            "WaveSpeed.DNS_Lookup",
            "Hunter.Ping",
            "Hunter.Traceroute",
            "Netdata.system_info"
        ],
        "returned_tools": [
            "Hunter.Whois_Lookup",
            "WaveSpeed.Whois",
            "Hunter.IP_Lookup",
            "Hunter.DNS_Lookup",
            "Hunter.SSL_Check",
            "ThoughtSpot.license",
            "WaveSpeed.DNS_Lookup",
            "Hunter.Ping",
            "Hunter.Traceroute",
            "Netdata.system_info"
        ],
        "query": "Who owns the domain airbnb.com and when does it expire?",
        "response_time": 344.407320022583,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.71
    },
    {
        "expected_tools": [
            "Azure.azmcp_appconfig_kv_lock"
        ],
        "matching_tools": [
            "Azure.azmcp_appconfig_kv_lock"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_appconfig_kv_set",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_appconfig_kv_unlock",
            "Azure.azmcp_appconfig_kv_show",
            "Netdata.netdata_config",
            "Azure.azmcp_appconfig_kv_delete",
            "Azure.azmcp_cli_command_run",
            "VSCode.vscode_settings_update"
        ],
        "returned_tools": [
            "Azure.azmcp_appconfig_kv_lock",
            "Azure.azmcp_appconfig_kv_set",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_appconfig_kv_unlock",
            "Azure.azmcp_appconfig_kv_show",
            "Netdata.netdata_config",
            "Azure.azmcp_appconfig_kv_delete",
            "Azure.azmcp_cli_command_run",
            "VSCode.vscode_settings_update"
        ],
        "query": "How can I make sure a configuration setting in my cloud app can't be changed accidentally?",
        "response_time": 666.1128997802734,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "ZIZAI Recruitment.task"
        ],
        "matching_tools": [
            "ZIZAI Recruitment.task"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Zapier.Delay",
            "ZIZAI Recruitment.settings",
            "YepCode.smtp",
            "ZIZAI Recruitment.context",
            "Tianji.comment",
            "ZIZAI Recruitment.injector",
            "Twilio.toolbelt",
            "Klaviyo.Templates",
            "ZIZAI Recruitment.validator"
        ],
        "returned_tools": [
            "Zapier.Delay",
            "ZIZAI Recruitment.settings",
            "ZIZAI Recruitment.task",
            "YepCode.smtp",
            "ZIZAI Recruitment.context",
            "Tianji.comment",
            "ZIZAI Recruitment.injector",
            "Twilio.toolbelt",
            "Klaviyo.Templates",
            "ZIZAI Recruitment.validator"
        ],
        "query": "How can I automate sending follow-up emails to candidates after interviews and make sure it happens at specific times?",
        "response_time": 381.7780017852783,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "LaunchDarkly.environment"
        ],
        "matching_tools": [
            "LaunchDarkly.environment"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "LaunchDarkly.feature_flag",
            "LaunchDarkly.project",
            "Twilio.config_management",
            "LaunchDarkly.account",
            "LaunchDarkly.api_key",
            "LaunchDarkly.user",
            "NanoVMs.Describe_Deployment",
            "Twilio.project_templates",
            "OpsLevel.actions/github_actions"
        ],
        "returned_tools": [
            "LaunchDarkly.environment",
            "LaunchDarkly.feature_flag",
            "LaunchDarkly.project",
            "Twilio.config_management",
            "LaunchDarkly.account",
            "LaunchDarkly.api_key",
            "LaunchDarkly.user",
            "NanoVMs.Describe_Deployment",
            "Twilio.project_templates",
            "OpsLevel.actions/github_actions"
        ],
        "query": "How can I see all the environments set up for my project and check if staging is configured the same as production?",
        "response_time": 390.7351493835449,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "HubSpot.Deal_Pipeline_Overview"
        ],
        "matching_tools": [
            "HubSpot.Deal_Pipeline_Overview"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "HubSpot.CRM_Search",
            "HubSpot.Contact_Insights",
            "klusterai.Metrics",
            "HubSpot.Marketing_Email_Analytics",
            "HubSpot.Workflow_Insights",
            "klusterai.Profiling",
            "Shortcut.Summarize",
            "Zapier.Code_by_Zapier",
            "HubSpot.Ticket_Management"
        ],
        "returned_tools": [
            "HubSpot.Deal_Pipeline_Overview",
            "HubSpot.CRM_Search",
            "HubSpot.Contact_Insights",
            "klusterai.Metrics",
            "HubSpot.Marketing_Email_Analytics",
            "HubSpot.Workflow_Insights",
            "klusterai.Profiling",
            "Shortcut.Summarize",
            "Zapier.Code_by_Zapier",
            "HubSpot.Ticket_Management"
        ],
        "query": "How is our sales pipeline looking for this month and what revenue can we expect from current deals?",
        "response_time": 303.8220405578613,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "JFrog.project_inspect"
        ],
        "matching_tools": [
            "JFrog.project_inspect"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "JFrog.dependency_check",
            "JFrog.license_compliance",
            "JFrog.secrets_scan",
            "JFrog.iac_scan",
            "CodeLogic.Dependency_Resolver",
            "JFrog.container_scan",
            "Hyperbrowser.code_editor",
            "OpsLevel.code/ci",
            "NanoVMs.MCP_Image_Management"
        ],
        "returned_tools": [
            "JFrog.dependency_check",
            "JFrog.license_compliance",
            "JFrog.secrets_scan",
            "JFrog.iac_scan",
            "CodeLogic.Dependency_Resolver",
            "JFrog.container_scan",
            "JFrog.project_inspect",
            "Hyperbrowser.code_editor",
            "OpsLevel.code/ci",
            "NanoVMs.MCP_Image_Management"
        ],
        "query": "Can you tell me what dependencies are used in this project and if there are any outdated ones?",
        "response_time": 319.64731216430664,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_debug_start"
        ],
        "matching_tools": [
            "VSCode.vscode_debug_start"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_task_run",
            "VSCode.vscode_debug_stop",
            "Octagon.ask_code",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_editor_get_selection",
            "VSCode.vscode_settings_update",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_editor_insert_text",
            "VSCode.vscode_terminal_run_command"
        ],
        "returned_tools": [
            "VSCode.vscode_debug_start",
            "VSCode.vscode_task_run",
            "VSCode.vscode_debug_stop",
            "Octagon.ask_code",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_editor_get_selection",
            "VSCode.vscode_settings_update",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_editor_insert_text",
            "VSCode.vscode_terminal_run_command"
        ],
        "query": "I'm having trouble figuring out why my Python script isn't working as expected, can you help me debug it in my editor?",
        "response_time": 431.8668842315674,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.86
    },
    {
        "expected_tools": [
            "GitHub.RerunWorkflowRun"
        ],
        "matching_tools": [
            "GitHub.RerunWorkflowRun"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.RerunFailedJobs",
            "GitHub.RunWorkflow",
            "GitHub.GetWorkflowRun",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.ListAvailableToolsets",
            "GitHub.CancelWorkflowRun",
            "GitHub.ListWorkflowRuns",
            "GitHub.ListWorkflowRunArtifacts",
            "GitHub.ListWorkflowJobs"
        ],
        "returned_tools": [
            "GitHub.RerunFailedJobs",
            "GitHub.RerunWorkflowRun",
            "GitHub.RunWorkflow",
            "GitHub.GetWorkflowRun",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.ListAvailableToolsets",
            "GitHub.CancelWorkflowRun",
            "GitHub.ListWorkflowRuns",
            "GitHub.ListWorkflowRunArtifacts",
            "GitHub.ListWorkflowJobs"
        ],
        "query": "How do I trigger a failed GitHub Actions workflow to run again for my project?",
        "response_time": 391.50142669677734,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 10.0
    },
    {
        "expected_tools": [
            "LINE.Buttons"
        ],
        "matching_tools": [
            "LINE.Buttons"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "LINE.Confirm",
            "VSCode.vscode_copilot_chat_send",
            "Liveblocks.send_user_message",
            "Tianji.notification",
            "LINE.Image",
            "Tianji.question",
            "Riza.chat",
            "Logfire.ask_openai_chat",
            "LINE.Carousel"
        ],
        "returned_tools": [
            "LINE.Buttons",
            "LINE.Confirm",
            "VSCode.vscode_copilot_chat_send",
            "Liveblocks.send_user_message",
            "Tianji.notification",
            "LINE.Image",
            "Tianji.question",
            "Riza.chat",
            "Logfire.ask_openai_chat",
            "LINE.Carousel"
        ],
        "query": "How can I create an interactive message in a chat that lets users pick from several options, like visiting a website or sending a quick reply?",
        "response_time": 341.8600559234619,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Hyperbrowser.file_manager"
        ],
        "matching_tools": [
            "Hyperbrowser.file_manager"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hyperbrowser.web_browser",
            "Hyperbrowser.code_editor",
            "Hyperbrowser.python",
            "Hyperbrowser.bash",
            "Memgraph.Import_Data_Tool",
            "Milvus.Partition_Management",
            "Hyperbrowser.text_comparison",
            "VSCode.vscode_fs_list_directory",
            "Milvus.Data_Import_Export"
        ],
        "returned_tools": [
            "Hyperbrowser.file_manager",
            "Hyperbrowser.web_browser",
            "Hyperbrowser.code_editor",
            "Hyperbrowser.python",
            "Hyperbrowser.bash",
            "Memgraph.Import_Data_Tool",
            "Milvus.Partition_Management",
            "Hyperbrowser.text_comparison",
            "VSCode.vscode_fs_list_directory",
            "Milvus.Data_Import_Export"
        ],
        "query": "Can you help me organize and clean up my uploaded genomic data files?",
        "response_time": 289.34383392333984,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.CreatePullRequest"
        ],
        "matching_tools": [],
        "missing_tools": [
            "GitHub.CreatePullRequest"
        ],
        "unexpected_tools": [
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.SubmitPendingPullRequestReview",
            "GitHub.RequestCopilotReview",
            "OpsLevel.docs/contributing",
            "GitHub.PushFiles",
            "GitHub.CreatePendingPullRequestReview",
            "GitHub.CreateIssue",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.ListBranches",
            "GitHub.MergePullRequest"
        ],
        "returned_tools": [
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.SubmitPendingPullRequestReview",
            "GitHub.RequestCopilotReview",
            "OpsLevel.docs/contributing",
            "GitHub.PushFiles",
            "GitHub.CreatePendingPullRequestReview",
            "GitHub.CreateIssue",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.ListBranches",
            "GitHub.MergePullRequest"
        ],
        "query": "Can you help me submit my code changes for review on the main project repository?",
        "response_time": 338.6270999908447,
        "match": false,
        "match_top_1": false,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.0,
        "recall_metric": 0.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Nutrient.GRPC_API"
        ],
        "matching_tools": [
            "Nutrient.GRPC_API"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Nutrient.REST_API",
            "Nutrient.Health_Checking_Tool",
            "Nutrient.DWS_MCP_Server",
            "Cloudinary.mcp_logging",
            "LaunchDarkly.feature_flag",
            "Nutrient.NodeController",
            "OpenSearch.get_cluster_state",
            "Nutrient.ResourceController",
            "Linear.Actions"
        ],
        "returned_tools": [
            "Nutrient.GRPC_API",
            "Nutrient.REST_API",
            "Nutrient.Health_Checking_Tool",
            "Nutrient.DWS_MCP_Server",
            "Cloudinary.mcp_logging",
            "LaunchDarkly.feature_flag",
            "Nutrient.NodeController",
            "OpenSearch.get_cluster_state",
            "Nutrient.ResourceController",
            "Linear.Actions"
        ],
        "query": "How can I programmatically check the current operational status and recent events for all provisioned devices in my MCP environment?",
        "response_time": 294.89922523498535,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_monitor_query_metrics"
        ],
        "matching_tools": [
            "Azure.azmcp_monitor_query_metrics"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Netdata.netdata_stats",
            "Yunxin.Statistics_-_Monitoring",
            "NanoVMs.Describe_Deployment",
            "Nutrient.Health_Checking_Tool",
            "ThoughtSpot.upgrade",
            "Azure.azmcp_search_index_query",
            "OctoEverywhere.System",
            "Azure.azmcp_postgres_server_list",
            "Memgraph.Graph_Schema_Viewer"
        ],
        "returned_tools": [
            "Azure.azmcp_monitor_query_metrics",
            "Netdata.netdata_stats",
            "Yunxin.Statistics_-_Monitoring",
            "NanoVMs.Describe_Deployment",
            "Nutrient.Health_Checking_Tool",
            "ThoughtSpot.upgrade",
            "Azure.azmcp_search_index_query",
            "OctoEverywhere.System",
            "Azure.azmcp_postgres_server_list",
            "Memgraph.Graph_Schema_Viewer"
        ],
        "query": "How is the CPU and memory usage trending for our production VMs over the last 24 hours?",
        "response_time": 345.0465202331543,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Hyperbolic.site_search"
        ],
        "matching_tools": [
            "Hyperbolic.site_search"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hyperbolic.web_search",
            "Hyperbolic.book_search",
            "Hyperbolic.wikidata",
            "Hyperbolic.python",
            "Auth0.Policies",
            "GitHub.UpdateIssue",
            "Hyperbrowser.file_manager",
            "JFrog.secrets_scan",
            "fetchSERP.Google_News"
        ],
        "returned_tools": [
            "Hyperbolic.web_search",
            "Hyperbolic.book_search",
            "Hyperbolic.wikidata",
            "Hyperbolic.site_search",
            "Hyperbolic.python",
            "Auth0.Policies",
            "GitHub.UpdateIssue",
            "Hyperbrowser.file_manager",
            "JFrog.secrets_scan",
            "fetchSERP.Google_News"
        ],
        "query": "Can you help me find the latest privacy policy update on the Dropbox website?",
        "response_time": 320.67418098449707,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.43
    },
    {
        "expected_tools": [
            "Memgraph.Cypher_QA_Chain"
        ],
        "matching_tools": [
            "Memgraph.Cypher_QA_Chain"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Memgraph_Cypher_Generator",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Query_Runner",
            "Memgraph.Procedures_Catalog",
            "Memgraph.Import_Data_Tool",
            "Rember.choices"
        ],
        "returned_tools": [
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Memgraph_Cypher_Generator",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Query_Runner",
            "Memgraph.Procedures_Catalog",
            "Memgraph.Import_Data_Tool",
            "Rember.choices"
        ],
        "query": "How are the different characters in Stranger Things connected to each other across the seasons?",
        "response_time": 310.86063385009766,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.GetPullRequestDiff"
        ],
        "matching_tools": [
            "GitHub.GetPullRequestDiff"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetPullRequestFiles",
            "GitHub.UpdatePullRequest",
            "GitHub.SearchPullRequests",
            "GitHub.GetPullRequestStatus",
            "GitHub.ListPullRequests",
            "GitHub.GetPullRequest",
            "GitHub.UpdatePullRequestBranch",
            "GitHub.MergePullRequest",
            "GitHub.RequestCopilotReview"
        ],
        "returned_tools": [
            "GitHub.GetPullRequestFiles",
            "GitHub.UpdatePullRequest",
            "GitHub.SearchPullRequests",
            "GitHub.GetPullRequestStatus",
            "GitHub.ListPullRequests",
            "GitHub.GetPullRequest",
            "GitHub.UpdatePullRequestBranch",
            "GitHub.GetPullRequestDiff",
            "GitHub.MergePullRequest",
            "GitHub.RequestCopilotReview"
        ],
        "query": "What are the code changes in the latest pull request for this repository?",
        "response_time": 298.36153984069824,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Yunxin.Permission_-_Role_Management"
        ],
        "matching_tools": [
            "Yunxin.Permission_-_Role_Management"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Liveblocks.admin_set_user_roles",
            "Liveblocks.admin_remove_user_roles",
            "Yunxin.User_Management",
            "Yunxin.Media_Control",
            "Yunxin.Room_Management",
            "Yunxin.Notification_-_Callback",
            "Liveblocks.user_kick",
            "Auth0.Entitlements",
            "LaunchDarkly.user"
        ],
        "returned_tools": [
            "Yunxin.Permission_-_Role_Management",
            "Liveblocks.admin_set_user_roles",
            "Liveblocks.admin_remove_user_roles",
            "Yunxin.User_Management",
            "Yunxin.Media_Control",
            "Yunxin.Room_Management",
            "Yunxin.Notification_-_Callback",
            "Liveblocks.user_kick",
            "Auth0.Entitlements",
            "LaunchDarkly.user"
        ],
        "query": "How do I set up different access levels for users in my chat room so only moderators can remove messages?",
        "response_time": 329.0750980377197,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Cloudinary.mcp_upload"
        ],
        "matching_tools": [
            "Cloudinary.mcp_upload"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_storage_blob_upload",
            "Cloudinary.mcp_logging",
            "Cloudinary.mcp_proxy",
            "Cloudinary.mcp_metadata",
            "Hyperbrowser.file_manager",
            "Cloudinary.mcp_transformations",
            "fetchSERP.Google_Images",
            "Cloudinary.mcp_authentication",
            "Drata.Asset_Inventory"
        ],
        "returned_tools": [
            "Cloudinary.mcp_upload",
            "Azure.azmcp_storage_blob_upload",
            "Cloudinary.mcp_logging",
            "Cloudinary.mcp_proxy",
            "Cloudinary.mcp_metadata",
            "Hyperbrowser.file_manager",
            "Cloudinary.mcp_transformations",
            "fetchSERP.Google_Images",
            "Cloudinary.mcp_authentication",
            "Drata.Asset_Inventory"
        ],
        "query": "How do I upload a batch of product images to my cloud media storage for my online store?",
        "response_time": 307.6033592224121,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_search_index_delete"
        ],
        "matching_tools": [
            "Azure.azmcp_search_index_delete"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpenSearch.delete_index",
            "Azure.azmcp_appconfig_kv_delete",
            "Azure.azmcp_cosmos_database_container_item_delete",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_search_index_query",
            "Milvus.Index_Management",
            "Azure.azmcp_search_service_list",
            "OpenSearch.delete_document",
            "OpenSearch.update_mapping"
        ],
        "returned_tools": [
            "Azure.azmcp_search_index_delete",
            "OpenSearch.delete_index",
            "Azure.azmcp_appconfig_kv_delete",
            "Azure.azmcp_cosmos_database_container_item_delete",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_search_index_query",
            "Milvus.Index_Management",
            "Azure.azmcp_search_service_list",
            "OpenSearch.delete_document",
            "OpenSearch.update_mapping"
        ],
        "query": "How do I remove an outdated search index from my cloud search service?",
        "response_time": 300.9142875671387,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Notion.update_database"
        ],
        "matching_tools": [
            "Notion.update_database"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Linear.Actions",
            "Notion.create_database",
            "Memgraph.Graph_Schema_Viewer",
            "Hyperbrowser.code_editor",
            "ZIZAI Recruitment.settings",
            "DevRev.priority_detection",
            "Shortcut.Update",
            "Notion.search_blocks",
            "Notion.search_databases"
        ],
        "returned_tools": [
            "Notion.update_database",
            "Linear.Actions",
            "Notion.create_database",
            "Memgraph.Graph_Schema_Viewer",
            "Hyperbrowser.code_editor",
            "ZIZAI Recruitment.settings",
            "DevRev.priority_detection",
            "Shortcut.Update",
            "Notion.search_blocks",
            "Notion.search_databases"
        ],
        "query": "How can I change the properties and structure of my project management database in Notion to better track deadlines and priorities?",
        "response_time": 316.35355949401855,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_editor_replace_selection"
        ],
        "matching_tools": [
            "VSCode.vscode_editor_replace_selection"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_git_commit",
            "Rember.replace",
            "VSCode.vscode_settings_update",
            "Hyperbrowser.code_editor",
            "VSCode.vscode_editor_insert_text",
            "VSCode.vscode_editor_format_document",
            "VSCode.vscode_fs_write_file",
            "VSCode.vscode_git_diff",
            "VSCode.vscode_settings_get"
        ],
        "returned_tools": [
            "VSCode.vscode_editor_replace_selection",
            "VSCode.vscode_git_commit",
            "Rember.replace",
            "VSCode.vscode_settings_update",
            "Hyperbrowser.code_editor",
            "VSCode.vscode_editor_insert_text",
            "VSCode.vscode_editor_format_document",
            "VSCode.vscode_fs_write_file",
            "VSCode.vscode_git_diff",
            "VSCode.vscode_settings_get"
        ],
        "query": "How do I quickly change all instances of a variable name in my code to something else in VSCode?",
        "response_time": 296.57745361328125,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "Cloudinary.mcp_transformations"
        ],
        "matching_tools": [
            "Cloudinary.mcp_transformations"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Cloudinary.mcp_logging",
            "Cloudinary.mcp_proxy",
            "Cloudinary.mcp_upload",
            "Cloudinary.mcp_metadata",
            "fetchSERP.Google_Images",
            "Cloudinary.mcp_authentication",
            "NanoVMs.MCP_Image_Management",
            "DevRev.ticket_categorization",
            "TextIn.ocr"
        ],
        "returned_tools": [
            "Cloudinary.mcp_transformations",
            "Cloudinary.mcp_logging",
            "Cloudinary.mcp_proxy",
            "Cloudinary.mcp_upload",
            "Cloudinary.mcp_metadata",
            "fetchSERP.Google_Images",
            "Cloudinary.mcp_authentication",
            "NanoVMs.MCP_Image_Management",
            "DevRev.ticket_categorization",
            "TextIn.ocr"
        ],
        "query": "How can I automatically resize and optimize images for different devices on my website?",
        "response_time": 314.65721130371094,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "ZIZAI Recruitment.injector"
        ],
        "matching_tools": [
            "ZIZAI Recruitment.injector"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "ZIZAI Recruitment.settings",
            "ZIZAI Recruitment.task",
            "ZIZAI Recruitment.context",
            "ZIZAI Recruitment.locker",
            "ZIZAI Recruitment.mapper",
            "ZIZAI Recruitment.validator",
            "CodeLogic.Dependency_Resolver",
            "ThoughtSpot.service",
            "Hyperbrowser.code_editor"
        ],
        "returned_tools": [
            "ZIZAI Recruitment.injector",
            "ZIZAI Recruitment.settings",
            "ZIZAI Recruitment.task",
            "ZIZAI Recruitment.context",
            "ZIZAI Recruitment.locker",
            "ZIZAI Recruitment.mapper",
            "ZIZAI Recruitment.validator",
            "CodeLogic.Dependency_Resolver",
            "ThoughtSpot.service",
            "Hyperbrowser.code_editor"
        ],
        "query": "How do I manage dependencies and service lifecycles in a Python backend for a recruitment platform?",
        "response_time": 298.42209815979004,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "UnifAI.OCR"
        ],
        "matching_tools": [
            "UnifAI.OCR"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "TextIn.ocr",
            "TextIn.printer_paper_recognition",
            "UnifAI.ImageQuestionAnswering",
            "UnifAI.ImageDescription",
            "UnifAI.DocumentQA",
            "TextIn.formula_recognition",
            "UnifAI.SpeechRecognition",
            "UnifAI.Ask",
            "TextIn.id_ocr"
        ],
        "returned_tools": [
            "UnifAI.OCR",
            "TextIn.ocr",
            "TextIn.printer_paper_recognition",
            "UnifAI.ImageQuestionAnswering",
            "UnifAI.ImageDescription",
            "UnifAI.DocumentQA",
            "TextIn.formula_recognition",
            "UnifAI.SpeechRecognition",
            "UnifAI.Ask",
            "TextIn.id_ocr"
        ],
        "query": "Can you get the text from this photo of a printed document?",
        "response_time": 292.84071922302246,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.57
    },
    {
        "expected_tools": [
            "GitHub.GetCommit"
        ],
        "matching_tools": [
            "GitHub.GetCommit"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.ListCommits",
            "GitHub.GetPullRequestFiles",
            "GitHub.UpdatePullRequestBranch",
            "GitHub.GetFileContents",
            "GitHub.GetPullRequestDiff",
            "VSCode.vscode_git_status",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.PushFiles",
            "GitHub.MergePullRequest"
        ],
        "returned_tools": [
            "GitHub.GetCommit",
            "GitHub.ListCommits",
            "GitHub.GetPullRequestFiles",
            "GitHub.UpdatePullRequestBranch",
            "GitHub.GetFileContents",
            "GitHub.GetPullRequestDiff",
            "VSCode.vscode_git_status",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.PushFiles",
            "GitHub.MergePullRequest"
        ],
        "query": "Can you show me what changes were made in the latest commit to the main branch of the tensorflow repository?",
        "response_time": 313.89546394348145,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Riza.chat"
        ],
        "matching_tools": [
            "Riza.chat"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Riza.question_answering",
            "Tianji.comment",
            "Tianji.vote",
            "Riza.text_editing",
            "Tianji.answer",
            "Rember.choices",
            "Riza.text_completion",
            "GitHub.GetIssueComments",
            "AllVoiceLab.QA"
        ],
        "returned_tools": [
            "Riza.question_answering",
            "Tianji.comment",
            "Tianji.vote",
            "Riza.text_editing",
            "Riza.chat",
            "Tianji.answer",
            "Rember.choices",
            "Riza.text_completion",
            "GitHub.GetIssueComments",
            "AllVoiceLab.QA"
        ],
        "query": "Can you help me practice a job interview for a software engineering position and give me feedback on my answers?",
        "response_time": 317.84844398498535,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "fetchSERP.Google_Shopping"
        ],
        "matching_tools": [
            "fetchSERP.Google_Shopping"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "fetchSERP.Google_Search",
            "fetchSERP.Google_Images",
            "fetchSERP.Google_Videos",
            "fetchSERP.Google_Maps",
            "fetchSERP.Google_News",
            "fetchSERP.Google_Scholar",
            "CoinGecko.coin_price",
            "Hyperbrowser.web_browser",
            "Hyperbolic.web_search"
        ],
        "returned_tools": [
            "fetchSERP.Google_Shopping",
            "fetchSERP.Google_Search",
            "fetchSERP.Google_Images",
            "fetchSERP.Google_Videos",
            "fetchSERP.Google_Maps",
            "fetchSERP.Google_News",
            "fetchSERP.Google_Scholar",
            "CoinGecko.coin_price",
            "Hyperbrowser.web_browser",
            "Hyperbolic.web_search"
        ],
        "query": "What are the best prices for the latest iPhone online right now?",
        "response_time": 287.0180606842041,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.86
    },
    {
        "expected_tools": [
            "Azure.azmcp_subscription_list"
        ],
        "matching_tools": [
            "Azure.azmcp_subscription_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_postgres_server_list",
            "Azure.azmcp_resourcegroup_list",
            "Azure.azmcp_kusto_cluster_list",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_storage_account_list",
            "Azure.azmcp_cosmos_account_list",
            "ThoughtSpot.license",
            "Azure.azmcp_storage_container_list",
            "Azure.azmcp_cosmos_database_list"
        ],
        "returned_tools": [
            "Azure.azmcp_postgres_server_list",
            "Azure.azmcp_resourcegroup_list",
            "Azure.azmcp_subscription_list",
            "Azure.azmcp_kusto_cluster_list",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_storage_account_list",
            "Azure.azmcp_cosmos_account_list",
            "ThoughtSpot.license",
            "Azure.azmcp_storage_container_list",
            "Azure.azmcp_cosmos_database_list"
        ],
        "query": "What Azure subscriptions do I have access to in my account?",
        "response_time": 300.19330978393555,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.86
    },
    {
        "expected_tools": [
            "Riza.classification"
        ],
        "matching_tools": [
            "Riza.classification"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "DevRev.ticket_categorization",
            "Riza.chat",
            "Riza.text_editing",
            "Riza.summarization",
            "DevRev.sentiment_analysis",
            "Riza.text_completion",
            "Riza.question_answering",
            "Octagon.classify",
            "klusterai.Filters"
        ],
        "returned_tools": [
            "Riza.classification",
            "DevRev.ticket_categorization",
            "Riza.chat",
            "Riza.text_editing",
            "Riza.summarization",
            "DevRev.sentiment_analysis",
            "Riza.text_completion",
            "Riza.question_answering",
            "Octagon.classify",
            "klusterai.Filters"
        ],
        "query": "Can you help me organize customer feedback into categories like complaints, suggestions, and praise?",
        "response_time": 297.0304489135742,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Tako.PSTH_Peri_Stimulus_Time_Histogram"
        ],
        "matching_tools": [
            "Tako.PSTH_Peri_Stimulus_Time_Histogram"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Tako.Tuning",
            "Tako.Raster",
            "Tako.Behavior",
            "Tako.Cross_correlation",
            "Tako.Trajectory",
            "CodeLogic.Dataflow_Analyzer",
            "OpenSearch.index_document",
            "Zapier.Code_by_Zapier",
            "Memgraph.Query_Runner"
        ],
        "returned_tools": [
            "Tako.Tuning",
            "Tako.PSTH_Peri_Stimulus_Time_Histogram",
            "Tako.Raster",
            "Tako.Behavior",
            "Tako.Cross_correlation",
            "Tako.Trajectory",
            "CodeLogic.Dataflow_Analyzer",
            "OpenSearch.index_document",
            "Zapier.Code_by_Zapier",
            "Memgraph.Query_Runner"
        ],
        "query": "Can you show me how neural firing rates change around the time of a reward delivery in my experiment?",
        "response_time": 333.77861976623535,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_git_diff"
        ],
        "matching_tools": [
            "VSCode.vscode_git_diff"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_git_status",
            "VSCode.vscode_settings_update",
            "VSCode.vscode_git_commit",
            "VSCode.vscode_extension_list",
            "VSCode.vscode_git_branch_list",
            "VSCode.vscode_git_create_branch",
            "VSCode.vscode_git_log",
            "VSCode.vscode_editor_get_selection",
            "VSCode.vscode_editor_format_document"
        ],
        "returned_tools": [
            "VSCode.vscode_git_status",
            "VSCode.vscode_settings_update",
            "VSCode.vscode_git_diff",
            "VSCode.vscode_git_commit",
            "VSCode.vscode_extension_list",
            "VSCode.vscode_git_branch_list",
            "VSCode.vscode_git_create_branch",
            "VSCode.vscode_git_log",
            "VSCode.vscode_editor_get_selection",
            "VSCode.vscode_editor_format_document"
        ],
        "query": "What changed in the main branch since last week?",
        "response_time": 285.6471538543701,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_keyvault_key_get"
        ],
        "matching_tools": [
            "Azure.azmcp_keyvault_key_get"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_appconfig_kv_show",
            "Azure.azmcp_keyvault_key_list",
            "Azure.azmcp_appconfig_kv_lock",
            "Azure.azmcp_appconfig_kv_unlock",
            "Azure.azmcp_appconfig_kv_set",
            "Azure.azmcp_keyvault_key_create",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_cli_command_run"
        ],
        "returned_tools": [
            "Azure.azmcp_keyvault_key_get",
            "Azure.azmcp_appconfig_kv_show",
            "Azure.azmcp_keyvault_key_list",
            "Azure.azmcp_appconfig_kv_lock",
            "Azure.azmcp_appconfig_kv_unlock",
            "Azure.azmcp_appconfig_kv_set",
            "Azure.azmcp_keyvault_key_create",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_cli_command_run"
        ],
        "query": "How do I get the details of an encryption key used for securing my cloud database?",
        "response_time": 312.8676414489746,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.PushFiles"
        ],
        "matching_tools": [
            "GitHub.PushFiles"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.CreateOrUpdateFile",
            "VSCode.vscode_git_push",
            "GitHub.ListAvailableToolsets",
            "OpsLevel.docs/contributing",
            "VSCode.vscode_git_commit",
            "GitHub.ListCommits",
            "GitHub.RunWorkflow",
            "GitHub.UpdatePullRequestBranch",
            "GitHub.SearchCode"
        ],
        "returned_tools": [
            "GitHub.PushFiles",
            "GitHub.CreateOrUpdateFile",
            "VSCode.vscode_git_push",
            "GitHub.ListAvailableToolsets",
            "OpsLevel.docs/contributing",
            "VSCode.vscode_git_commit",
            "GitHub.ListCommits",
            "GitHub.RunWorkflow",
            "GitHub.UpdatePullRequestBranch",
            "GitHub.SearchCode"
        ],
        "query": "How do I upload my latest code changes to my GitHub repo from my computer?",
        "response_time": 339.6611213684082,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Netdata.alarms_silence"
        ],
        "matching_tools": [
            "Netdata.alarms_silence"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Netdata.alarms_unsilence",
            "Netdata.alarms_list",
            "Netdata.data_query",
            "Netdata.netdata_config",
            "Netdata.netdata_info",
            "Netdata.netdata_stats",
            "Netdata.log_tail",
            "Zapier.Delay",
            "VSCode.vscode_debug_stop"
        ],
        "returned_tools": [
            "Netdata.alarms_silence",
            "Netdata.alarms_unsilence",
            "Netdata.alarms_list",
            "Netdata.data_query",
            "Netdata.netdata_config",
            "Netdata.netdata_info",
            "Netdata.netdata_stats",
            "Netdata.log_tail",
            "Zapier.Delay",
            "VSCode.vscode_debug_stop"
        ],
        "query": "How can I stop getting alerts for certain metrics on my server for the next hour?",
        "response_time": 327.74901390075684,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.CancelWorkflowRun"
        ],
        "matching_tools": [
            "GitHub.CancelWorkflowRun"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.DismissNotification",
            "GitHub.DeleteWorkflowRunLogs",
            "Zapier.Delay",
            "OpsLevel.actions/github_actions",
            "GitHub.ListIssues",
            "GitHub.RerunFailedJobs",
            "GitHub.GetWorkflowRun",
            "GitHub.CreateIssue",
            "GitHub.ListWorkflowRuns"
        ],
        "returned_tools": [
            "GitHub.CancelWorkflowRun",
            "GitHub.DismissNotification",
            "GitHub.DeleteWorkflowRunLogs",
            "Zapier.Delay",
            "OpsLevel.actions/github_actions",
            "GitHub.ListIssues",
            "GitHub.RerunFailedJobs",
            "GitHub.GetWorkflowRun",
            "GitHub.CreateIssue",
            "GitHub.ListWorkflowRuns"
        ],
        "query": "How do I stop a workflow that's currently running in my repository?",
        "response_time": 301.2387752532959,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.57
    },
    {
        "expected_tools": [
            "Azure.azmcp_search_index_list"
        ],
        "matching_tools": [
            "Azure.azmcp_search_index_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_search_service_list",
            "Azure.azmcp_search_index_query",
            "Hiveflow.Search",
            "Azure.azmcp_search_index_create",
            "OpenSearch.search",
            "Azure.azmcp_postgres_database_list",
            "Azure.azmcp_postgres_server_list",
            "Azure.azmcp_search_index_delete",
            "Azure.azmcp_resourcegroup_list"
        ],
        "returned_tools": [
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_search_service_list",
            "Azure.azmcp_search_index_query",
            "Hiveflow.Search",
            "Azure.azmcp_search_index_create",
            "OpenSearch.search",
            "Azure.azmcp_postgres_database_list",
            "Azure.azmcp_postgres_server_list",
            "Azure.azmcp_search_index_delete",
            "Azure.azmcp_resourcegroup_list"
        ],
        "query": "What search indexes are currently available in my Azure search service?",
        "response_time": 307.0111274719238,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.43
    },
    {
        "expected_tools": [
            "TextIn.invoice_ocr"
        ],
        "matching_tools": [
            "TextIn.invoice_ocr"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "TextIn.ocr",
            "TextIn.table_recognition",
            "TextIn.printer_paper_recognition",
            "TextIn.id_ocr",
            "TextIn.speech_recognition",
            "TextIn.formula_recognition",
            "Tianji.search",
            "Hyperbrowser.web_browser",
            "Azure.azmcp_cosmos_database_container_item_query"
        ],
        "returned_tools": [
            "TextIn.invoice_ocr",
            "TextIn.ocr",
            "TextIn.table_recognition",
            "TextIn.printer_paper_recognition",
            "TextIn.id_ocr",
            "TextIn.speech_recognition",
            "TextIn.formula_recognition",
            "Tianji.search",
            "Hyperbrowser.web_browser",
            "Azure.azmcp_cosmos_database_container_item_query"
        ],
        "query": "Can you pull out all the line items and totals from this scanned invoice for my expense report?",
        "response_time": 391.9374942779541,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Yunxin.Notification_-_Callback"
        ],
        "matching_tools": [
            "Yunxin.Notification_-_Callback"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Yunxin.Permission_-_Role_Management",
            "Yunxin.Room_Management",
            "Yunxin.User_Management",
            "Tianji.notification",
            "Yunxin.Media_Control",
            "Yunxin.Statistics_-_Monitoring",
            "DevRev.ticket_categorization",
            "GitHub.ListNotifications",
            "Yunxin.Recording_-_Playback"
        ],
        "returned_tools": [
            "Yunxin.Notification_-_Callback",
            "Yunxin.Permission_-_Role_Management",
            "Yunxin.Room_Management",
            "Yunxin.User_Management",
            "Tianji.notification",
            "Yunxin.Media_Control",
            "Yunxin.Statistics_-_Monitoring",
            "DevRev.ticket_categorization",
            "GitHub.ListNotifications",
            "Yunxin.Recording_-_Playback"
        ],
        "query": "How can I automatically notify my backend when someone leaves a live chat room?",
        "response_time": 303.464412689209,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "YepCode.rest"
        ],
        "matching_tools": [
            "YepCode.rest"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "YepCode.webhook",
            "YepCode.rabbitmq",
            "fetchSERP.Google_Maps",
            "YepCode.smtp",
            "Hyperbrowser.web_browser",
            "OpenSearch.get_cluster_state",
            "Nutrient.REST_API",
            "WaveSpeed.GeoIP",
            "OpenSearch.index_document"
        ],
        "returned_tools": [
            "YepCode.webhook",
            "YepCode.rest",
            "YepCode.rabbitmq",
            "fetchSERP.Google_Maps",
            "YepCode.smtp",
            "Hyperbrowser.web_browser",
            "OpenSearch.get_cluster_state",
            "Nutrient.REST_API",
            "WaveSpeed.GeoIP",
            "OpenSearch.index_document"
        ],
        "query": "Can you help me pull the latest weather data from an external API and show me the temperature for my city?",
        "response_time": 982.7852249145508,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.14
    },
    {
        "expected_tools": [
            "PlayCanvas.branch"
        ],
        "matching_tools": [
            "PlayCanvas.branch"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "PlayCanvas.snapshot",
            "PlayCanvas.entity",
            "PlayCanvas.project",
            "PlayCanvas.asset",
            "Hyperbrowser.code_editor",
            "VSCode.vscode_git_commit",
            "VSCode.vscode_fs_read_file",
            "GitHub.CreateIssue",
            "PlayCanvas.session"
        ],
        "returned_tools": [
            "PlayCanvas.snapshot",
            "PlayCanvas.entity",
            "PlayCanvas.project",
            "PlayCanvas.asset",
            "PlayCanvas.branch",
            "Hyperbrowser.code_editor",
            "VSCode.vscode_git_commit",
            "VSCode.vscode_fs_read_file",
            "GitHub.CreateIssue",
            "PlayCanvas.session"
        ],
        "query": "How do I create a new version of my 3D scene to experiment with lighting changes without affecting the main project?",
        "response_time": 327.1956443786621,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.UpdatePullRequest"
        ],
        "matching_tools": [
            "GitHub.UpdatePullRequest"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.GetPullRequestFiles",
            "GitHub.CreatePullRequest",
            "GitHub.MergePullRequest",
            "GitHub.UpdatePullRequestBranch",
            "GitHub.GetPullRequestReviews",
            "GitHub.CreatePendingPullRequestReview",
            "GitHub.RequestCopilotReview"
        ],
        "returned_tools": [
            "GitHub.UpdatePullRequest",
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.GetPullRequestFiles",
            "GitHub.CreatePullRequest",
            "GitHub.MergePullRequest",
            "GitHub.UpdatePullRequestBranch",
            "GitHub.GetPullRequestReviews",
            "GitHub.CreatePendingPullRequestReview",
            "GitHub.RequestCopilotReview"
        ],
        "query": "Can you help me change the title and description of my open pull request to better reflect the latest changes I made?",
        "response_time": 296.91123962402344,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.57
    },
    {
        "expected_tools": [
            "Klaviyo.Events"
        ],
        "matching_tools": [
            "Klaviyo.Events"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Klaviyo.Templates",
            "Klaviyo.Profiles",
            "Klaviyo.Lists_and_Segments",
            "Klaviyo.Flows",
            "PlayCanvas.user",
            "Klaviyo.Catalogs",
            "klusterai.Profiling",
            "klusterai.Grouping",
            "GitHub.SearchUsers"
        ],
        "returned_tools": [
            "Klaviyo.Events",
            "Klaviyo.Templates",
            "Klaviyo.Profiles",
            "Klaviyo.Lists_and_Segments",
            "Klaviyo.Flows",
            "PlayCanvas.user",
            "Klaviyo.Catalogs",
            "klusterai.Profiling",
            "klusterai.Grouping",
            "GitHub.SearchUsers"
        ],
        "query": "Show me which users opened the last campaign email and then made a purchase within a week.",
        "response_time": 309.6635341644287,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 5.0
    },
    {
        "expected_tools": [
            "GitHub.SearchPullRequests"
        ],
        "matching_tools": [
            "GitHub.SearchPullRequests"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetPullRequest",
            "GitHub.ListPullRequests",
            "GitHub.GetPullRequestReviews",
            "GitHub.GetPullRequestComments",
            "GitHub.GetPullRequestFiles",
            "GitHub.MergePullRequest",
            "GitHub.GetPullRequestDiff",
            "GitHub.UpdatePullRequestBranch",
            "Shortcut.List"
        ],
        "returned_tools": [
            "GitHub.GetPullRequest",
            "GitHub.SearchPullRequests",
            "GitHub.ListPullRequests",
            "GitHub.GetPullRequestReviews",
            "GitHub.GetPullRequestComments",
            "GitHub.GetPullRequestFiles",
            "GitHub.MergePullRequest",
            "GitHub.GetPullRequestDiff",
            "GitHub.UpdatePullRequestBranch",
            "Shortcut.List"
        ],
        "query": "Can you show me all the recent pull requests related to bug fixes in our main repositories?",
        "response_time": 321.1359977722168,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.SearchRepositories"
        ],
        "matching_tools": [
            "GitHub.SearchRepositories"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.SearchCode",
            "GitHub.SearchPullRequests",
            "GitHub.SearchOrgs",
            "GitHub.ListAvailableToolsets",
            "GitHub.ForkRepository",
            "OpsLevel.code/ci",
            "GitHub.SearchIssues",
            "Logfire.ask_openai_chat",
            "GitHub.CreateRepository"
        ],
        "returned_tools": [
            "GitHub.SearchCode",
            "GitHub.SearchPullRequests",
            "GitHub.SearchRepositories",
            "GitHub.SearchOrgs",
            "GitHub.ListAvailableToolsets",
            "GitHub.ForkRepository",
            "OpsLevel.code/ci",
            "GitHub.SearchIssues",
            "Logfire.ask_openai_chat",
            "GitHub.CreateRepository"
        ],
        "query": "Can you help me find open source projects related to machine learning that are trending right now?",
        "response_time": 309.7343444824219,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "OctoEverywhere.System"
        ],
        "matching_tools": [
            "OctoEverywhere.System"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OctoEverywhere.PrinterMainboard",
            "OctoEverywhere.Printer",
            "OctoEverywhere.Knowledge",
            "WaveSpeed.Ping",
            "OctoEverywhere.GCodeTerminal",
            "OctoEverywhere.Timelapse",
            "GitHub.GetIssue",
            "WaveSpeed.Port_Scan",
            "WaveSpeed.Traceroute"
        ],
        "returned_tools": [
            "OctoEverywhere.PrinterMainboard",
            "OctoEverywhere.System",
            "OctoEverywhere.Printer",
            "OctoEverywhere.Knowledge",
            "WaveSpeed.Ping",
            "OctoEverywhere.GCodeTerminal",
            "OctoEverywhere.Timelapse",
            "GitHub.GetIssue",
            "WaveSpeed.Port_Scan",
            "WaveSpeed.Traceroute"
        ],
        "query": "Why is my 3D printer server running slow and how can I check if it's a hardware issue?",
        "response_time": 303.0257225036621,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Netdata.system_info"
        ],
        "matching_tools": [
            "Netdata.system_info"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Netdata.netdata_config",
            "Netdata.netdata_info",
            "Netdata.netdata_stats",
            "Netdata.data_query",
            "WaveSpeed.Ping",
            "Netdata.log_tail",
            "OpenSearch.get_cluster_state",
            "Netdata.alarms_silence",
            "Netdata.alarms_list"
        ],
        "returned_tools": [
            "Netdata.system_info",
            "Netdata.netdata_config",
            "Netdata.netdata_info",
            "Netdata.netdata_stats",
            "Netdata.data_query",
            "WaveSpeed.Ping",
            "Netdata.log_tail",
            "OpenSearch.get_cluster_state",
            "Netdata.alarms_silence",
            "Netdata.alarms_list"
        ],
        "query": "What is the hostname and current time of my server?",
        "response_time": 361.22679710388184,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_git_commit"
        ],
        "matching_tools": [
            "VSCode.vscode_git_commit"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_git_push",
            "VSCode.vscode_copilot_chat_send",
            "GitHub.PushFiles",
            "VSCode.vscode_git_pull",
            "VSCode.vscode_git_status",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_fs_write_file",
            "VSCode.vscode_git_log",
            "VSCode.vscode_settings_update"
        ],
        "returned_tools": [
            "VSCode.vscode_git_commit",
            "VSCode.vscode_git_push",
            "VSCode.vscode_copilot_chat_send",
            "GitHub.PushFiles",
            "VSCode.vscode_git_pull",
            "VSCode.vscode_git_status",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_fs_write_file",
            "VSCode.vscode_git_log",
            "VSCode.vscode_settings_update"
        ],
        "query": "How do I save my current changes in the project with a message before pushing to the repository?",
        "response_time": 314.2380714416504,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.14
    },
    {
        "expected_tools": [
            "Azure.azmcp_cli_command_run"
        ],
        "matching_tools": [],
        "missing_tools": [
            "Azure.azmcp_cli_command_run"
        ],
        "unexpected_tools": [
            "Azure.azmcp_subscription_list",
            "Azure.azmcp_kusto_cluster_list",
            "Azure.azmcp_appconfig_kv_list",
            "ThoughtSpot.license",
            "Azure.azmcp_resourcegroup_list",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_postgres_server_list",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_search_index_query",
            "Azure.azmcp_storage_account_list"
        ],
        "returned_tools": [
            "Azure.azmcp_subscription_list",
            "Azure.azmcp_kusto_cluster_list",
            "Azure.azmcp_appconfig_kv_list",
            "ThoughtSpot.license",
            "Azure.azmcp_resourcegroup_list",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_postgres_server_list",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_search_index_query",
            "Azure.azmcp_storage_account_list"
        ],
        "query": "How can I quickly list all running virtual machines in my Azure subscription and check their status?",
        "response_time": 320.5251693725586,
        "match": false,
        "match_top_1": false,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.0,
        "recall_metric": 0.0,
        "judge_metric": 1.71
    },
    {
        "expected_tools": [
            "JFrog.container_scan"
        ],
        "matching_tools": [
            "JFrog.container_scan"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "JFrog.iac_scan",
            "JFrog.secrets_scan",
            "JFrog.dependency_check",
            "JFrog.license_compliance",
            "WaveSpeed.Port_Scan",
            "SonarQube.List_Issues",
            "SonarQube.Show_Issue_Details",
            "GitHub.SearchIssues",
            "JFrog.project_inspect"
        ],
        "returned_tools": [
            "JFrog.iac_scan",
            "JFrog.secrets_scan",
            "JFrog.container_scan",
            "JFrog.dependency_check",
            "JFrog.license_compliance",
            "WaveSpeed.Port_Scan",
            "SonarQube.List_Issues",
            "SonarQube.Show_Issue_Details",
            "GitHub.SearchIssues",
            "JFrog.project_inspect"
        ],
        "query": "Can you check if there are any security issues in the Docker images used in my project?",
        "response_time": 2161.466121673584,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.71
    },
    {
        "expected_tools": [
            "VSCode.vscode_terminal_close"
        ],
        "matching_tools": [
            "VSCode.vscode_terminal_close"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_debug_stop",
            "VSCode.vscode_workspace_close_folder",
            "VSCode.vscode_fs_delete_file",
            "VSCode.vscode_terminal_run_command",
            "GitHub.CancelWorkflowRun",
            "VSCode.vscode_terminal_list",
            "VSCode.vscode_workspace_get_active_file",
            "Hyperbrowser.code_editor",
            "VSCode.vscode_settings_get"
        ],
        "returned_tools": [
            "VSCode.vscode_terminal_close",
            "VSCode.vscode_debug_stop",
            "VSCode.vscode_workspace_close_folder",
            "VSCode.vscode_fs_delete_file",
            "VSCode.vscode_terminal_run_command",
            "GitHub.CancelWorkflowRun",
            "VSCode.vscode_terminal_list",
            "VSCode.vscode_workspace_get_active_file",
            "Hyperbrowser.code_editor",
            "VSCode.vscode_settings_get"
        ],
        "query": "How do I close the terminal that's currently open in my code editor?",
        "response_time": 289.6404266357422,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_monitor_query_logs"
        ],
        "matching_tools": [],
        "missing_tools": [
            "Azure.azmcp_monitor_query_logs"
        ],
        "unexpected_tools": [
            "Azure.azmcp_monitor_query_metrics",
            "Azure.azmcp_appconfig_kv_show",
            "Azure.azmcp_search_index_query",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_search_service_list",
            "Azure.azmcp_keyvault_key_get",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_appconfig_kv_unlock",
            "Azure.azmcp_subscription_list"
        ],
        "returned_tools": [
            "Azure.azmcp_monitor_query_metrics",
            "Azure.azmcp_appconfig_kv_show",
            "Azure.azmcp_search_index_query",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_search_service_list",
            "Azure.azmcp_keyvault_key_get",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_appconfig_kv_unlock",
            "Azure.azmcp_subscription_list"
        ],
        "query": "How can I find out which virtual machines had the highest CPU usage last week in my Azure environment?",
        "response_time": 320.47295570373535,
        "match": false,
        "match_top_1": false,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.0,
        "recall_metric": 0.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_settings_update"
        ],
        "matching_tools": [
            "VSCode.vscode_settings_update"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_settings_get",
            "VSCode.vscode_editor_replace_selection",
            "VSCode.vscode_editor_format_document",
            "Hyperbrowser.code_editor",
            "VSCode.vscode_editor_insert_text",
            "VSCode.vscode_extension_install",
            "VSCode.vscode_extension_list",
            "VSCode.vscode_editor_get_selection",
            "VSCode.vscode_fs_write_file"
        ],
        "returned_tools": [
            "VSCode.vscode_settings_update",
            "VSCode.vscode_settings_get",
            "VSCode.vscode_editor_replace_selection",
            "VSCode.vscode_editor_format_document",
            "Hyperbrowser.code_editor",
            "VSCode.vscode_editor_insert_text",
            "VSCode.vscode_extension_install",
            "VSCode.vscode_extension_list",
            "VSCode.vscode_editor_get_selection",
            "VSCode.vscode_fs_write_file"
        ],
        "query": "How do I change the default font size in my code editor?",
        "response_time": 309.2608451843262,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "GitHub.ListCommits"
        ],
        "matching_tools": [
            "GitHub.ListCommits"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.SearchCode",
            "GitHub.GetCodeScanningAlert",
            "GitHub.SearchPullRequests",
            "GitHub.UpdatePullRequestBranch",
            "GitHub.PushFiles",
            "GitHub.GetFileContents",
            "GitHub.SearchOrgs",
            "GitHub.ListCodeScanningAlerts",
            "GitHub.MergePullRequest"
        ],
        "returned_tools": [
            "GitHub.SearchCode",
            "GitHub.ListCommits",
            "GitHub.GetCodeScanningAlert",
            "GitHub.SearchPullRequests",
            "GitHub.UpdatePullRequestBranch",
            "GitHub.PushFiles",
            "GitHub.GetFileContents",
            "GitHub.SearchOrgs",
            "GitHub.ListCodeScanningAlerts",
            "GitHub.MergePullRequest"
        ],
        "query": "Show me the latest code changes for the tensorflow repo on GitHub.",
        "response_time": 660.4390144348145,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.71
    },
    {
        "expected_tools": [
            "Globalping.ping"
        ],
        "matching_tools": [
            "Globalping.ping"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Globalping.mtr",
            "Globalping.dns",
            "Globalping.trace",
            "Globalping.tcp",
            "WaveSpeed.Traceroute",
            "WaveSpeed.Ping",
            "Globalping.http",
            "Hunter.Ping",
            "WaveSpeed.GeoIP"
        ],
        "returned_tools": [
            "Globalping.mtr",
            "Globalping.ping",
            "Globalping.dns",
            "Globalping.trace",
            "Globalping.tcp",
            "WaveSpeed.Traceroute",
            "WaveSpeed.Ping",
            "Globalping.http",
            "Hunter.Ping",
            "WaveSpeed.GeoIP"
        ],
        "query": "Is there any network latency or packet loss when connecting to servers in Europe from different countries?",
        "response_time": 299.38817024230957,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.86
    },
    {
        "expected_tools": [
            "Hyperbrowser.bash"
        ],
        "matching_tools": [
            "Hyperbrowser.bash"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hyperbrowser.file_manager",
            "Hyperbrowser.web_browser",
            "VSCode.vscode_fs_list_directory",
            "Hyperbrowser.code_editor",
            "VSCode.vscode_workspace_list_folders",
            "klusterai.Limit",
            "Hyperbrowser.text_comparison",
            "GitHub.ListWorkflowRuns",
            "Rember.list"
        ],
        "returned_tools": [
            "Hyperbrowser.file_manager",
            "Hyperbrowser.web_browser",
            "VSCode.vscode_fs_list_directory",
            "Hyperbrowser.bash",
            "Hyperbrowser.code_editor",
            "VSCode.vscode_workspace_list_folders",
            "klusterai.Limit",
            "Hyperbrowser.text_comparison",
            "GitHub.ListWorkflowRuns",
            "Rember.list"
        ],
        "query": "How can I list all files in a directory and count the number of lines in each file?",
        "response_time": 349.6255874633789,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "LINE.Profile"
        ],
        "matching_tools": [
            "LINE.Profile"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Klaviyo.Profiles",
            "LINE.Echo",
            "Liveblocks.send_user_message",
            "WaveSpeed.Whois",
            "Liveblocks.get_user_presence",
            "LINE.Confirm",
            "OctoEverywhere.Knowledge",
            "klusterai.Profiling",
            "Hyperbolic.terminal"
        ],
        "returned_tools": [
            "LINE.Profile",
            "Klaviyo.Profiles",
            "LINE.Echo",
            "Liveblocks.send_user_message",
            "WaveSpeed.Whois",
            "Liveblocks.get_user_presence",
            "LINE.Confirm",
            "OctoEverywhere.Knowledge",
            "klusterai.Profiling",
            "Hyperbolic.terminal"
        ],
        "query": "Who is messaging me on LINE? Can you show their profile details?",
        "response_time": 366.1022186279297,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "GitHub.SearchIssues"
        ],
        "matching_tools": [
            "GitHub.SearchIssues"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.ListCodeScanningAlerts",
            "SonarQube.List_Issues",
            "GitHub.ListSecretScanningAlerts",
            "JFrog.secrets_scan",
            "GitHub.AssignCopilotToIssue",
            "GitHub.CreateIssue",
            "GitHub.ListCommits",
            "GitHub.SearchCode",
            "GitHub.GetMe"
        ],
        "returned_tools": [
            "GitHub.ListCodeScanningAlerts",
            "SonarQube.List_Issues",
            "GitHub.SearchIssues",
            "GitHub.ListSecretScanningAlerts",
            "JFrog.secrets_scan",
            "GitHub.AssignCopilotToIssue",
            "GitHub.CreateIssue",
            "GitHub.ListCommits",
            "GitHub.SearchCode",
            "GitHub.GetMe"
        ],
        "query": "Can you find recent open bugs related to authentication failures in popular open source projects?",
        "response_time": 292.78564453125,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "ThoughtSpot.cluster"
        ],
        "matching_tools": [
            "ThoughtSpot.cluster"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Nutrient.Health_Checking_Tool",
            "OpenSearch.get_cluster_state",
            "ThoughtSpot.admin",
            "ThoughtSpot.upgrade",
            "Nutrient.NodeController",
            "ThoughtSpot.analytics",
            "ThoughtSpot.backup",
            "ThoughtSpot.license",
            "ThoughtSpot.service"
        ],
        "returned_tools": [
            "Nutrient.Health_Checking_Tool",
            "ThoughtSpot.cluster",
            "OpenSearch.get_cluster_state",
            "ThoughtSpot.admin",
            "ThoughtSpot.upgrade",
            "Nutrient.NodeController",
            "ThoughtSpot.analytics",
            "ThoughtSpot.backup",
            "ThoughtSpot.license",
            "ThoughtSpot.service"
        ],
        "query": "How can I check the health of all nodes in my analytics cluster and see if any need maintenance?",
        "response_time": 333.87279510498047,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Auth0.Audience_Listing"
        ],
        "matching_tools": [
            "Auth0.Audience_Listing"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Auth0.Entitlements",
            "Auth0.Permissions",
            "Auth0.Resource_Registration",
            "Auth0.Identities",
            "Azure.azmcp_resourcegroup_list",
            "GitHub.GetMe",
            "Auth0.Policies",
            "NanoVMs.MCP_Image_Management",
            "Cloudinary.mcp_authentication"
        ],
        "returned_tools": [
            "Auth0.Audience_Listing",
            "Auth0.Entitlements",
            "Auth0.Permissions",
            "Auth0.Resource_Registration",
            "Auth0.Identities",
            "Azure.azmcp_resourcegroup_list",
            "GitHub.GetMe",
            "Auth0.Policies",
            "NanoVMs.MCP_Image_Management",
            "Cloudinary.mcp_authentication"
        ],
        "query": "What are the available audiences I can use for my API tokens in my authentication setup?",
        "response_time": 316.24889373779297,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.71
    },
    {
        "expected_tools": [
            "GitHub.SearchCode"
        ],
        "matching_tools": [
            "GitHub.SearchCode"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetMe",
            "JFrog.secrets_scan",
            "GitHub.GetWorkflowRunLogs",
            "OpsLevel.security/codeql",
            "GitHub.UpdatePullRequestBranch",
            "GitHub.ForkRepository",
            "GitHub.GetFileContents",
            "Cloudinary.mcp_authentication",
            "GitHub.CreateRepository"
        ],
        "returned_tools": [
            "GitHub.SearchCode",
            "GitHub.GetMe",
            "JFrog.secrets_scan",
            "GitHub.GetWorkflowRunLogs",
            "OpsLevel.security/codeql",
            "GitHub.UpdatePullRequestBranch",
            "GitHub.ForkRepository",
            "GitHub.GetFileContents",
            "Cloudinary.mcp_authentication",
            "GitHub.CreateRepository"
        ],
        "query": "Where in the codebase is the user authentication logic implemented?",
        "response_time": 317.60597229003906,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "LaunchDarkly.user"
        ],
        "matching_tools": [
            "LaunchDarkly.user"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "PlayCanvas.user",
            "LaunchDarkly.project",
            "LaunchDarkly.account",
            "LaunchDarkly.environment",
            "PlayCanvas.snapshot",
            "LaunchDarkly.api_key",
            "PlayCanvas.project",
            "LaunchDarkly.feature_flag",
            "PlayCanvas.branch"
        ],
        "returned_tools": [
            "PlayCanvas.user",
            "LaunchDarkly.user",
            "LaunchDarkly.project",
            "LaunchDarkly.account",
            "LaunchDarkly.environment",
            "PlayCanvas.snapshot",
            "LaunchDarkly.api_key",
            "PlayCanvas.project",
            "LaunchDarkly.feature_flag",
            "PlayCanvas.branch"
        ],
        "query": "Can you find the PlayCanvas project collaborators for my workspace if I give you their email addresses?",
        "response_time": 346.5461730957031,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.86
    },
    {
        "expected_tools": [
            "GitHub.SubmitPendingPullRequestReview"
        ],
        "matching_tools": [
            "GitHub.SubmitPendingPullRequestReview"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.AddIssueComment",
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.RequestCopilotReview",
            "OpsLevel.docs/contributing",
            "GitHub.AssignCopilotToIssue",
            "GitHub.PushFiles",
            "GitHub.CreatePendingPullRequestReview",
            "GitHub.GetCodeScanningAlert"
        ],
        "returned_tools": [
            "GitHub.AddIssueComment",
            "GitHub.SubmitPendingPullRequestReview",
            "GitHub.CreateAndSubmitPullRequestReview",
            "GitHub.AddPullRequestReviewCommentToPendingReview",
            "GitHub.RequestCopilotReview",
            "OpsLevel.docs/contributing",
            "GitHub.AssignCopilotToIssue",
            "GitHub.PushFiles",
            "GitHub.CreatePendingPullRequestReview",
            "GitHub.GetCodeScanningAlert"
        ],
        "query": "I finished reviewing the code changes, how do I submit my feedback to the team?",
        "response_time": 314.96238708496094,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.SearchUsers"
        ],
        "matching_tools": [
            "GitHub.SearchUsers"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.SearchOrgs",
            "GitHub.SearchCode",
            "GitHub.CreateOrUpdateFile",
            "GitHub.ListCodeScanningAlerts",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.SearchPullRequests",
            "OpsLevel.code/ci",
            "GitHub.ListPullRequests",
            "GitHub.ForkRepository"
        ],
        "returned_tools": [
            "GitHub.SearchOrgs",
            "GitHub.SearchCode",
            "GitHub.SearchUsers",
            "GitHub.CreateOrUpdateFile",
            "GitHub.ListCodeScanningAlerts",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.SearchPullRequests",
            "OpsLevel.code/ci",
            "GitHub.ListPullRequests",
            "GitHub.ForkRepository"
        ],
        "query": "Who are some top contributors in the Python community on GitHub?",
        "response_time": 290.67373275756836,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "DevRev.translation"
        ],
        "matching_tools": [
            "DevRev.translation"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "DevRev.ticket_categorization",
            "DevRev.sentiment_analysis",
            "DevRev.summarization",
            "DevRev.priority_detection",
            "DevRev.entity_extraction",
            "AllVoiceLab.Voice_Translation",
            "HubSpot.Ticket_Management",
            "OctoEverywhere.Knowledge",
            "HubSpot.CRM_Search"
        ],
        "returned_tools": [
            "DevRev.translation",
            "DevRev.ticket_categorization",
            "DevRev.sentiment_analysis",
            "DevRev.summarization",
            "DevRev.priority_detection",
            "DevRev.entity_extraction",
            "AllVoiceLab.Voice_Translation",
            "HubSpot.Ticket_Management",
            "OctoEverywhere.Knowledge",
            "HubSpot.CRM_Search"
        ],
        "query": "Can you help me understand this customer support ticket written in Japanese?",
        "response_time": 300.3203868865967,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "AWS.Workflow_Coverage_and_Step_Analysis"
        ],
        "matching_tools": [
            "AWS.Workflow_Coverage_and_Step_Analysis"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "AWS.Validate_State_Machine_Definitions",
            "AWS.Local_Simulation_of_Step_Functions_Workflows",
            "AWS.Convert_AWS_Step_Functions_YAML_to_ASL_JSON",
            "AWS.Convert_CDK_StepFunction_Constructs_to_MCP_YAML",
            "AWS.Convert_AWS_Step_Functions_Amazon_States_Language_(ASL)_to_YAML",
            "OpsLevel.code/ci",
            "OpsLevel.code/test",
            "SonarQube.Trigger_Project_Analysis",
            "GitHub.RerunFailedJobs"
        ],
        "returned_tools": [
            "AWS.Workflow_Coverage_and_Step_Analysis",
            "AWS.Validate_State_Machine_Definitions",
            "AWS.Local_Simulation_of_Step_Functions_Workflows",
            "AWS.Convert_AWS_Step_Functions_YAML_to_ASL_JSON",
            "AWS.Convert_CDK_StepFunction_Constructs_to_MCP_YAML",
            "AWS.Convert_AWS_Step_Functions_Amazon_States_Language_(ASL)_to_YAML",
            "OpsLevel.code/ci",
            "OpsLevel.code/test",
            "SonarQube.Trigger_Project_Analysis",
            "GitHub.RerunFailedJobs"
        ],
        "query": "Can you check if there are any unused steps or dead paths in my AWS Step Functions workflow? I want to make sure all parts of my workflow are actually being used and see if there are any optimizations I can make.",
        "response_time": 331.94422721862793,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.86
    },
    {
        "expected_tools": [
            "CodeLogic.Dependency_Resolver"
        ],
        "matching_tools": [
            "CodeLogic.Dependency_Resolver"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "CodeLogic.Scanner",
            "CodeLogic.Graph_Generator",
            "CodeLogic.Application_Modeler",
            "CodeLogic.Dataflow_Analyzer",
            "CodeLogic.Reporting_Engine",
            "OpsLevel.code/ci",
            "OpsLevel.code/license",
            "Milvus.Partition_Management",
            "OpenSearch.get_cluster_state"
        ],
        "returned_tools": [
            "CodeLogic.Dependency_Resolver",
            "CodeLogic.Scanner",
            "CodeLogic.Graph_Generator",
            "CodeLogic.Application_Modeler",
            "CodeLogic.Dataflow_Analyzer",
            "CodeLogic.Reporting_Engine",
            "OpsLevel.code/ci",
            "OpsLevel.code/license",
            "Milvus.Partition_Management",
            "OpenSearch.get_cluster_state"
        ],
        "query": "Can you show me what libraries are connected to each other in my backend project and if there are any circular dependencies?",
        "response_time": 368.6525821685791,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "LaunchDarkly.project"
        ],
        "matching_tools": [
            "LaunchDarkly.project"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "LaunchDarkly.environment",
            "SonarQube.List_Projects",
            "PlayCanvas.project",
            "LaunchDarkly.account",
            "LaunchDarkly.api_key",
            "LaunchDarkly.feature_flag",
            "GitHub.CreateRepository",
            "LaunchDarkly.user",
            "ThoughtSpot.license"
        ],
        "returned_tools": [
            "LaunchDarkly.project",
            "LaunchDarkly.environment",
            "SonarQube.List_Projects",
            "PlayCanvas.project",
            "LaunchDarkly.account",
            "LaunchDarkly.api_key",
            "LaunchDarkly.feature_flag",
            "GitHub.CreateRepository",
            "LaunchDarkly.user",
            "ThoughtSpot.license"
        ],
        "query": "How can I find all my 3D game projects and clone one to start a new version?",
        "response_time": 326.3740539550781,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 4.0
    },
    {
        "expected_tools": [
            "CoinGecko.coin_price"
        ],
        "matching_tools": [
            "CoinGecko.coin_price"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "CoinGecko.exchange_info",
            "CoinGecko.coin_historical_price",
            "CoinGecko.coin_market_chart",
            "CoinGecko.coin_market_cap",
            "CoinGecko.simple_coin_info",
            "Nutrient.Health_Checking_Tool",
            "Hyperbrowser.text_comparison",
            "OpenSearch.get_mapping",
            "Hyperbrowser.web_browser"
        ],
        "returned_tools": [
            "CoinGecko.coin_price",
            "CoinGecko.exchange_info",
            "CoinGecko.coin_historical_price",
            "CoinGecko.coin_market_chart",
            "CoinGecko.coin_market_cap",
            "CoinGecko.simple_coin_info",
            "Nutrient.Health_Checking_Tool",
            "Hyperbrowser.text_comparison",
            "OpenSearch.get_mapping",
            "Hyperbrowser.web_browser"
        ],
        "query": "What's the current price of Solana in USD and how does it compare to last week?",
        "response_time": 7796.022176742554,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.29
    },
    {
        "expected_tools": [
            "LaunchDarkly.user"
        ],
        "matching_tools": [
            "LaunchDarkly.user"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "LaunchDarkly.account",
            "LaunchDarkly.environment",
            "LaunchDarkly.api_key",
            "LaunchDarkly.project",
            "LaunchDarkly.feature_flag",
            "GitHub.CreateRepository",
            "Hyperbrowser.code_editor",
            "Auth0.Entitlements",
            "Auth0.Policies"
        ],
        "returned_tools": [
            "LaunchDarkly.user",
            "LaunchDarkly.account",
            "LaunchDarkly.environment",
            "LaunchDarkly.api_key",
            "LaunchDarkly.project",
            "LaunchDarkly.feature_flag",
            "GitHub.CreateRepository",
            "Hyperbrowser.code_editor",
            "Auth0.Entitlements",
            "Auth0.Policies"
        ],
        "query": "How do I add a new developer to my project and make sure they only have read access?",
        "response_time": 371.7684745788574,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "SonarQube.List_Issues"
        ],
        "matching_tools": [
            "SonarQube.List_Issues"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "SonarQube.Get_Project_Metrics",
            "SonarQube.Show_Issue_Details",
            "SonarQube.Trigger_Project_Analysis",
            "GitHub.ListSecretScanningAlerts",
            "SonarQube.Show_Quality_Gate_Details",
            "SonarQube.List_Projects",
            "Netdata.alarms_list",
            "JFrog.dependency_check",
            "OpsLevel.security/codeql"
        ],
        "returned_tools": [
            "SonarQube.List_Issues",
            "SonarQube.Get_Project_Metrics",
            "SonarQube.Show_Issue_Details",
            "SonarQube.Trigger_Project_Analysis",
            "GitHub.ListSecretScanningAlerts",
            "SonarQube.Show_Quality_Gate_Details",
            "SonarQube.List_Projects",
            "Netdata.alarms_list",
            "JFrog.dependency_check",
            "OpsLevel.security/codeql"
        ],
        "query": "Can you show me all the critical bugs and vulnerabilities in our main project from the last month?",
        "response_time": 298.5684871673584,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "Azure.azmcp_appconfig_kv_unlock"
        ],
        "matching_tools": [
            "Azure.azmcp_appconfig_kv_unlock"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_appconfig_kv_set",
            "Azure.azmcp_appconfig_kv_show",
            "Azure.azmcp_appconfig_kv_lock",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_keyvault_key_get",
            "VSCode.vscode_settings_update",
            "Azure.azmcp_appconfig_kv_delete",
            "Azure.azmcp_keyvault_key_create"
        ],
        "returned_tools": [
            "Azure.azmcp_appconfig_kv_set",
            "Azure.azmcp_appconfig_kv_unlock",
            "Azure.azmcp_appconfig_kv_show",
            "Azure.azmcp_appconfig_kv_lock",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_keyvault_key_get",
            "VSCode.vscode_settings_update",
            "Azure.azmcp_appconfig_kv_delete",
            "Azure.azmcp_keyvault_key_create"
        ],
        "query": "I'm having trouble updating a configuration key in my cloud app, how can I make it editable again?",
        "response_time": 317.0619010925293,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Netdata.netdata_stats"
        ],
        "matching_tools": [
            "Netdata.netdata_stats"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Netdata.netdata_info",
            "Netdata.alarms_silence",
            "Netdata.netdata_config",
            "Netdata.data_query",
            "Netdata.system_info",
            "Netdata.log_tail",
            "OpenSearch.get_cluster_state",
            "Netdata.alarms_list",
            "Yunxin.Statistics_-_Monitoring"
        ],
        "returned_tools": [
            "Netdata.netdata_stats",
            "Netdata.netdata_info",
            "Netdata.alarms_silence",
            "Netdata.netdata_config",
            "Netdata.data_query",
            "Netdata.system_info",
            "Netdata.log_tail",
            "OpenSearch.get_cluster_state",
            "Netdata.alarms_list",
            "Yunxin.Statistics_-_Monitoring"
        ],
        "query": "Why is my monitoring dashboard sometimes slow and how can I check if the agent is using too much memory?",
        "response_time": 306.96558952331543,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Hyperbolic.book_search"
        ],
        "matching_tools": [
            "Hyperbolic.book_search"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Hyperbolic.wikidata",
            "Hyperbolic.python",
            "Hyperbolic.site_search",
            "Hyperbolic.web_search",
            "Hyperbolic.terminal",
            "Tako.PSTH_Peri_Stimulus_Time_Histogram",
            "Hyperbrowser.text_comparison",
            "SonarQube.Show_Issue_Details",
            "AllVoiceLab.QA"
        ],
        "returned_tools": [
            "Hyperbolic.book_search",
            "Hyperbolic.wikidata",
            "Hyperbolic.python",
            "Hyperbolic.site_search",
            "Hyperbolic.web_search",
            "Hyperbolic.terminal",
            "Tako.PSTH_Peri_Stimulus_Time_Histogram",
            "Hyperbrowser.text_comparison",
            "SonarQube.Show_Issue_Details",
            "AllVoiceLab.QA"
        ],
        "query": "Can you find passages about quantum mechanics in classic physics textbooks?",
        "response_time": 295.49193382263184,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.86
    },
    {
        "expected_tools": [
            "GitHub.GetFileContents"
        ],
        "matching_tools": [
            "GitHub.GetFileContents"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.SearchCode",
            "GitHub.MergePullRequest",
            "GitHub.UpdatePullRequestBranch",
            "Tako.PSTH_Peri_Stimulus_Time_Histogram",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.GetPullRequestDiff",
            "Logfire.search_python_docs",
            "Logfire.ask_openai_chat",
            "GitHub.PushFiles"
        ],
        "returned_tools": [
            "GitHub.SearchCode",
            "GitHub.GetFileContents",
            "GitHub.MergePullRequest",
            "GitHub.UpdatePullRequestBranch",
            "Tako.PSTH_Peri_Stimulus_Time_Histogram",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.GetPullRequestDiff",
            "Logfire.search_python_docs",
            "Logfire.ask_openai_chat",
            "GitHub.PushFiles"
        ],
        "query": "Can you show me the code in the main.py file from the latest version of the openai/openai-python repo?",
        "response_time": 370.039701461792,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.86
    },
    {
        "expected_tools": [
            "Milvus.Search_and_Query"
        ],
        "matching_tools": [
            "Milvus.Search_and_Query"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "fetchSERP.Google_Images",
            "Milvus.Collection_Management",
            "Milvus.Partition_Management",
            "Milvus.Schema_Management",
            "Milvus.Index_Management",
            "Milvus.Data_Import_Export",
            "OpenSearch.search",
            "Rember.choices",
            "OpenSearch.index_document"
        ],
        "returned_tools": [
            "Milvus.Search_and_Query",
            "fetchSERP.Google_Images",
            "Milvus.Collection_Management",
            "Milvus.Partition_Management",
            "Milvus.Schema_Management",
            "Milvus.Index_Management",
            "Milvus.Data_Import_Export",
            "OpenSearch.search",
            "Rember.choices",
            "OpenSearch.index_document"
        ],
        "query": "Find similar images to this one in my photo collection and filter by those taken in the last year.",
        "response_time": 331.20131492614746,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.29
    },
    {
        "expected_tools": [
            "GitHub.ListCodeScanningAlerts"
        ],
        "matching_tools": [
            "GitHub.ListCodeScanningAlerts"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.ListSecretScanningAlerts",
            "SonarQube.List_Issues",
            "OpsLevel.security/codeql",
            "GitHub.GetCodeScanningAlert",
            "JFrog.secrets_scan",
            "GitHub.GetIssueComments",
            "GitHub.ListIssues",
            "GitHub.SearchIssues",
            "GitHub.MarkAllNotificationsRead"
        ],
        "returned_tools": [
            "GitHub.ListSecretScanningAlerts",
            "GitHub.ListCodeScanningAlerts",
            "SonarQube.List_Issues",
            "OpsLevel.security/codeql",
            "GitHub.GetCodeScanningAlert",
            "JFrog.secrets_scan",
            "GitHub.GetIssueComments",
            "GitHub.ListIssues",
            "GitHub.SearchIssues",
            "GitHub.MarkAllNotificationsRead"
        ],
        "query": "Can you show me all the security issues found in my repository?",
        "response_time": 456.76255226135254,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "LaunchDarkly.api_key"
        ],
        "matching_tools": [
            "LaunchDarkly.api_key"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "LaunchDarkly.feature_flag",
            "LaunchDarkly.environment",
            "LaunchDarkly.account",
            "LaunchDarkly.project",
            "LaunchDarkly.user",
            "Upstash.Keys",
            "Linear.Actions",
            "Auth0.Resource_Registration",
            "Azure.azmcp_keyvault_key_list"
        ],
        "returned_tools": [
            "LaunchDarkly.api_key",
            "LaunchDarkly.feature_flag",
            "LaunchDarkly.environment",
            "LaunchDarkly.account",
            "LaunchDarkly.project",
            "LaunchDarkly.user",
            "Upstash.Keys",
            "Linear.Actions",
            "Auth0.Resource_Registration",
            "Azure.azmcp_keyvault_key_list"
        ],
        "query": "How do I create and manage API keys for my feature flag integrations?",
        "response_time": 330.51085472106934,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Upstash.Hash"
        ],
        "matching_tools": [
            "Upstash.Hash"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "PlayCanvas.user",
            "LINE.Profile",
            "Upstash.Set",
            "Upstash.String",
            "Upstash.List",
            "Notion.get_user",
            "Sophtron.GetAccounts",
            "Upstash.ZSet",
            "Campertunity.userProfile"
        ],
        "returned_tools": [
            "Upstash.Hash",
            "PlayCanvas.user",
            "LINE.Profile",
            "Upstash.Set",
            "Upstash.String",
            "Upstash.List",
            "Notion.get_user",
            "Sophtron.GetAccounts",
            "Upstash.ZSet",
            "Campertunity.userProfile"
        ],
        "query": "Can you get me the email and username for these user ids: 1001, 1002, 1003?",
        "response_time": 308.9714050292969,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "Globalping.tcp"
        ],
        "matching_tools": [
            "Globalping.tcp"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Globalping.dns",
            "Globalping.ping",
            "WaveSpeed.Ping",
            "Globalping.http",
            "WaveSpeed.Port_Scan",
            "Globalping.mtr",
            "WaveSpeed.GeoIP",
            "Globalping.trace",
            "OpsLevel.code/license"
        ],
        "returned_tools": [
            "Globalping.dns",
            "Globalping.tcp",
            "Globalping.ping",
            "WaveSpeed.Ping",
            "Globalping.http",
            "WaveSpeed.Port_Scan",
            "Globalping.mtr",
            "WaveSpeed.GeoIP",
            "Globalping.trace",
            "OpsLevel.code/license"
        ],
        "query": "Can you check if my website is reachable on port 443 from different countries?",
        "response_time": 284.8470211029053,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Rember.compose"
        ],
        "matching_tools": [
            "Rember.compose"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Rember.list",
            "Rember.choices",
            "Klaviyo.Events",
            "DevRev.summarization",
            "Octagon.summarize",
            "LINE.Confirm",
            "GitHub.GetJobLogs",
            "LINE.Carousel",
            "AllVoiceLab.Summarizer"
        ],
        "returned_tools": [
            "Rember.compose",
            "Rember.list",
            "Rember.choices",
            "Klaviyo.Events",
            "DevRev.summarization",
            "Octagon.summarize",
            "LINE.Confirm",
            "GitHub.GetJobLogs",
            "LINE.Carousel",
            "AllVoiceLab.Summarizer"
        ],
        "query": "Can you help me create a detailed email to my team summarizing our last three meetings and including the action items for each person?",
        "response_time": 350.16679763793945,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "Logfire.get_function_doc"
        ],
        "matching_tools": [
            "Logfire.get_function_doc"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Logfire.search_python_docs",
            "Logfire.list_python_packages",
            "Logfire.ask_groq_llama3",
            "Logfire.ask_chat_google",
            "Logfire.ask_openai_chat",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Export_Data_Tool",
            "Logfire.ask_ollama_chat",
            "Zapier.Data_Formatter"
        ],
        "returned_tools": [
            "Logfire.search_python_docs",
            "Logfire.list_python_packages",
            "Logfire.ask_groq_llama3",
            "Logfire.ask_chat_google",
            "Logfire.ask_openai_chat",
            "Logfire.get_function_doc",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Export_Data_Tool",
            "Logfire.ask_ollama_chat",
            "Zapier.Data_Formatter"
        ],
        "query": "What does the pandas.DataFrame.to_csv function do and what parameters can I use?",
        "response_time": 289.97278213500977,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "WaveSpeed.GeoIP"
        ],
        "matching_tools": [
            "WaveSpeed.GeoIP"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "WaveSpeed.DNS_Lookup",
            "WaveSpeed.Ping",
            "WaveSpeed.Whois",
            "WaveSpeed.Traceroute",
            "WaveSpeed.Port_Scan",
            "Hunter.DNS_Lookup",
            "Hunter.IP_Lookup",
            "Globalping.tcp",
            "Globalping.dns"
        ],
        "returned_tools": [
            "WaveSpeed.DNS_Lookup",
            "WaveSpeed.Ping",
            "WaveSpeed.Whois",
            "WaveSpeed.Traceroute",
            "WaveSpeed.Port_Scan",
            "WaveSpeed.GeoIP",
            "Hunter.DNS_Lookup",
            "Hunter.IP_Lookup",
            "Globalping.tcp",
            "Globalping.dns"
        ],
        "query": "Where is this user connecting from if their IP is 203.0.113.45?",
        "response_time": 272.2892761230469,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 10.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_storage_blob_download"
        ],
        "matching_tools": [
            "Azure.azmcp_storage_blob_download"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_storage_blob_upload",
            "Azure.azmcp_storage_account_list",
            "Azure.azmcp_storage_blob_list",
            "Azure.azmcp_storage_container_list",
            "ThoughtSpot.backup",
            "Azure.azmcp_appconfig_kv_show",
            "LaunchDarkly.account",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_keyvault_key_get"
        ],
        "returned_tools": [
            "Azure.azmcp_storage_blob_download",
            "Azure.azmcp_storage_blob_upload",
            "Azure.azmcp_storage_account_list",
            "Azure.azmcp_storage_blob_list",
            "Azure.azmcp_storage_container_list",
            "ThoughtSpot.backup",
            "Azure.azmcp_appconfig_kv_show",
            "LaunchDarkly.account",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_keyvault_key_get"
        ],
        "query": "How can I get the latest backup file from my Azure storage account?",
        "response_time": 2815.03963470459,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.MarkAllNotificationsRead"
        ],
        "matching_tools": [
            "GitHub.MarkAllNotificationsRead"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.ManageNotificationSubscription",
            "GitHub.DismissNotification",
            "GitHub.GetNotificationDetails",
            "GitHub.ManageRepositoryNotificationSubscription",
            "GitHub.GetCodeScanningAlert",
            "GitHub.DeletePendingPullRequestReview",
            "GitHub.ListCodeScanningAlerts",
            "GitHub.ListAvailableToolsets",
            "GitHub.ListNotifications"
        ],
        "returned_tools": [
            "GitHub.ManageNotificationSubscription",
            "GitHub.DismissNotification",
            "GitHub.GetNotificationDetails",
            "GitHub.ManageRepositoryNotificationSubscription",
            "GitHub.MarkAllNotificationsRead",
            "GitHub.GetCodeScanningAlert",
            "GitHub.DeletePendingPullRequestReview",
            "GitHub.ListCodeScanningAlerts",
            "GitHub.ListAvailableToolsets",
            "GitHub.ListNotifications"
        ],
        "query": "How do I quickly clear all my unread notifications on my code hosting platform?",
        "response_time": 299.58295822143555,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.86
    },
    {
        "expected_tools": [
            "Netdata.alarms_list"
        ],
        "matching_tools": [
            "Netdata.alarms_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Netdata.data_query",
            "Netdata.log_tail",
            "Netdata.netdata_stats",
            "Netdata.netdata_config",
            "Netdata.alarms_unsilence",
            "Netdata.alarms_silence",
            "Netdata.netdata_info",
            "Netdata.system_info",
            "OpenSearch.get_cluster_state"
        ],
        "returned_tools": [
            "Netdata.alarms_list",
            "Netdata.data_query",
            "Netdata.log_tail",
            "Netdata.netdata_stats",
            "Netdata.netdata_config",
            "Netdata.alarms_unsilence",
            "Netdata.alarms_silence",
            "Netdata.netdata_info",
            "Netdata.system_info",
            "OpenSearch.get_cluster_state"
        ],
        "query": "Can you show me all the current and past alerts from my server monitoring dashboard?",
        "response_time": 377.2459030151367,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "TextIn.formula_recognition"
        ],
        "matching_tools": [
            "TextIn.formula_recognition"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "TextIn.ocr",
            "TextIn.table_recognition",
            "Octagon.ask_calculator",
            "TextIn.id_ocr",
            "TextIn.speech_recognition",
            "TextIn.printer_paper_recognition",
            "TextIn.invoice_ocr",
            "Hyperbrowser.web_browser",
            "Linear.Computed_Fields"
        ],
        "returned_tools": [
            "TextIn.formula_recognition",
            "TextIn.ocr",
            "TextIn.table_recognition",
            "Octagon.ask_calculator",
            "TextIn.id_ocr",
            "TextIn.speech_recognition",
            "TextIn.printer_paper_recognition",
            "TextIn.invoice_ocr",
            "Hyperbrowser.web_browser",
            "Linear.Computed_Fields"
        ],
        "query": "Can you pull out all the math equations from this scanned homework page?",
        "response_time": 282.1941375732422,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "UnifAI.Ask"
        ],
        "matching_tools": [
            "UnifAI.Ask"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "UnifAI.ImageDescription",
            "UnifAI.SpeechRecognition",
            "UnifAI.OCR",
            "AllVoiceLab.Summarizer",
            "UnifAI.DocumentQA",
            "DevRev.summarization",
            "UnifAI.ImageQuestionAnswering",
            "Octagon.summarize",
            "Riza.summarization"
        ],
        "returned_tools": [
            "UnifAI.ImageDescription",
            "UnifAI.SpeechRecognition",
            "UnifAI.OCR",
            "AllVoiceLab.Summarizer",
            "UnifAI.Ask",
            "UnifAI.DocumentQA",
            "DevRev.summarization",
            "UnifAI.ImageQuestionAnswering",
            "Octagon.summarize",
            "Riza.summarization"
        ],
        "query": "Can you help me summarize the main points from this article I just pasted?",
        "response_time": 309.33141708374023,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Notion.search_blocks"
        ],
        "matching_tools": [
            "Notion.search_blocks"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Notion.search_databases",
            "Notion.get_database",
            "Octagon.ask_retrieval",
            "Notion.search_users",
            "HubSpot.Deal_Pipeline_Overview",
            "OctoEverywhere.Knowledge",
            "Notion.query_database",
            "GitHub.GetToolsetsTools",
            "Notion.update_database"
        ],
        "returned_tools": [
            "Notion.search_blocks",
            "Notion.search_databases",
            "Notion.get_database",
            "Octagon.ask_retrieval",
            "Notion.search_users",
            "HubSpot.Deal_Pipeline_Overview",
            "OctoEverywhere.Knowledge",
            "Notion.query_database",
            "GitHub.GetToolsetsTools",
            "Notion.update_database"
        ],
        "query": "Can you find all the meeting notes where we discussed quarterly goals?",
        "response_time": 279.94537353515625,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.57
    },
    {
        "expected_tools": [
            "GitHub.DeleteWorkflowRunLogs"
        ],
        "matching_tools": [
            "GitHub.DeleteWorkflowRunLogs"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.CancelWorkflowRun",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.DeleteFile",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.CreateIssue",
            "GitHub.RerunWorkflowRun",
            "OpsLevel.actions/github_actions",
            "GitHub.GetWorkflowRun",
            "GitHub.ListWorkflowRuns"
        ],
        "returned_tools": [
            "GitHub.DeleteWorkflowRunLogs",
            "GitHub.CancelWorkflowRun",
            "GitHub.GetWorkflowRunLogs",
            "GitHub.DeleteFile",
            "GitHub.DownloadWorkflowRunArtifact",
            "GitHub.CreateIssue",
            "GitHub.RerunWorkflowRun",
            "OpsLevel.actions/github_actions",
            "GitHub.GetWorkflowRun",
            "GitHub.ListWorkflowRuns"
        ],
        "query": "How do I remove old workflow logs from my repository to free up space?",
        "response_time": 348.2186794281006,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.14
    },
    {
        "expected_tools": [
            "AWS.Convert_CDK_StepFunction_Constructs_to_MCP_YAML"
        ],
        "matching_tools": [
            "AWS.Convert_CDK_StepFunction_Constructs_to_MCP_YAML"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "AWS.Convert_AWS_Step_Functions_Amazon_States_Language_(ASL)_to_YAML",
            "AWS.Convert_AWS_Step_Functions_YAML_to_ASL_JSON",
            "AWS.Local_Simulation_of_Step_Functions_Workflows",
            "AWS.Validate_State_Machine_Definitions",
            "AWS.Workflow_Coverage_and_Step_Analysis",
            "Hiveflow.Workflow_Engine",
            "CodeLogic.Scanner",
            "VSCode.vscode_git_commit",
            "GitHub.ListTags"
        ],
        "returned_tools": [
            "AWS.Convert_CDK_StepFunction_Constructs_to_MCP_YAML",
            "AWS.Convert_AWS_Step_Functions_Amazon_States_Language_(ASL)_to_YAML",
            "AWS.Convert_AWS_Step_Functions_YAML_to_ASL_JSON",
            "AWS.Local_Simulation_of_Step_Functions_Workflows",
            "AWS.Validate_State_Machine_Definitions",
            "AWS.Workflow_Coverage_and_Step_Analysis",
            "Hiveflow.Workflow_Engine",
            "CodeLogic.Scanner",
            "VSCode.vscode_git_commit",
            "GitHub.ListTags"
        ],
        "query": "I have a CDK stack with several Step Functions, how can I migrate these workflows to a YAML-based system?",
        "response_time": 760.5488300323486,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "HubSpot.Contact_Insights"
        ],
        "matching_tools": [
            "HubSpot.Contact_Insights"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "HubSpot.CRM_Search",
            "HubSpot.Workflow_Insights",
            "HubSpot.Deal_Pipeline_Overview",
            "HubSpot.Ticket_Management",
            "HubSpot.Marketing_Email_Analytics",
            "OctoEverywhere.Knowledge",
            "Klaviyo.Events",
            "Shortcut.List",
            "Notion.get_user"
        ],
        "returned_tools": [
            "HubSpot.CRM_Search",
            "HubSpot.Contact_Insights",
            "HubSpot.Workflow_Insights",
            "HubSpot.Deal_Pipeline_Overview",
            "HubSpot.Ticket_Management",
            "HubSpot.Marketing_Email_Analytics",
            "OctoEverywhere.Knowledge",
            "Klaviyo.Events",
            "Shortcut.List",
            "Notion.get_user"
        ],
        "query": "Can you show me everything we know about our main point of contact at Acme Corp, including their recent activity and any open deals?",
        "response_time": 344.06423568725586,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.86
    },
    {
        "expected_tools": [
            "Linear.Schemas"
        ],
        "matching_tools": [
            "Linear.Schemas"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Linear.Audit_Logs",
            "Linear.Actions",
            "Linear.API",
            "OpenSearch.get_mapping",
            "Linear.Data_Loading",
            "Memgraph.Graph_Schema_Viewer",
            "CodeLogic.Dataflow_Analyzer",
            "klusterai.Metrics",
            "klusterai.Profiling"
        ],
        "returned_tools": [
            "Linear.Schemas",
            "Linear.Audit_Logs",
            "Linear.Actions",
            "Linear.API",
            "OpenSearch.get_mapping",
            "Linear.Data_Loading",
            "Memgraph.Graph_Schema_Viewer",
            "CodeLogic.Dataflow_Analyzer",
            "klusterai.Metrics",
            "klusterai.Profiling"
        ],
        "query": "Can you show me how the data is structured for tracking issues and projects in our workflow system?",
        "response_time": 315.6085014343262,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "SonarQube.Get_Project_Metrics"
        ],
        "matching_tools": [
            "SonarQube.Get_Project_Metrics"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "SonarQube.List_Issues",
            "SonarQube.Show_Issue_Details",
            "SonarQube.Trigger_Project_Analysis",
            "SonarQube.Show_Quality_Gate_Details",
            "SonarQube.Check_Quality_Gate",
            "SonarQube.List_Projects",
            "OpenSearch.get_cluster_state",
            "GitHub.SearchIssues",
            "GitHub.ListIssues"
        ],
        "returned_tools": [
            "SonarQube.List_Issues",
            "SonarQube.Get_Project_Metrics",
            "SonarQube.Show_Issue_Details",
            "SonarQube.Trigger_Project_Analysis",
            "SonarQube.Show_Quality_Gate_Details",
            "SonarQube.Check_Quality_Gate",
            "SonarQube.List_Projects",
            "OpenSearch.get_cluster_state",
            "GitHub.SearchIssues",
            "GitHub.ListIssues"
        ],
        "query": "Can you tell me how healthy the codebase is for our main project? I want to know about bugs, code coverage, and any major issues.",
        "response_time": 302.7946949005127,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "AWS.Validate_State_Machine_Definitions"
        ],
        "matching_tools": [
            "AWS.Validate_State_Machine_Definitions"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "AWS.Local_Simulation_of_Step_Functions_Workflows",
            "GitHub.GetIssue",
            "AWS.Convert_AWS_Step_Functions_YAML_to_ASL_JSON",
            "AWS.Workflow_Coverage_and_Step_Analysis",
            "GitHub.GetIssueComments",
            "AWS.Convert_AWS_Step_Functions_Amazon_States_Language_(ASL)_to_YAML",
            "AWS.Convert_CDK_StepFunction_Constructs_to_MCP_YAML",
            "GitHub.ListIssues",
            "GitHub.SearchIssues"
        ],
        "returned_tools": [
            "AWS.Validate_State_Machine_Definitions",
            "AWS.Local_Simulation_of_Step_Functions_Workflows",
            "GitHub.GetIssue",
            "AWS.Convert_AWS_Step_Functions_YAML_to_ASL_JSON",
            "AWS.Workflow_Coverage_and_Step_Analysis",
            "GitHub.GetIssueComments",
            "AWS.Convert_AWS_Step_Functions_Amazon_States_Language_(ASL)_to_YAML",
            "AWS.Convert_CDK_StepFunction_Constructs_to_MCP_YAML",
            "GitHub.ListIssues",
            "GitHub.SearchIssues"
        ],
        "query": "I have a step functions workflow in JSON, can you check if there are any issues before I deploy it?",
        "response_time": 287.07289695739746,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.43
    },
    {
        "expected_tools": [
            "Drata.Asset_Inventory"
        ],
        "matching_tools": [
            "Drata.Asset_Inventory"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Drata.Access_Reviews",
            "Drata.Continuous_Control_Monitoring",
            "Drata.Evidence_Collection",
            "Drata.Vendor_Risk_Management",
            "Twilio.config_management",
            "Drata.Policy_Management",
            "NanoVMs.List_Deployments",
            "VSCode.vscode_workspace_list_folders",
            "Azure.azmcp_resourcegroup_list"
        ],
        "returned_tools": [
            "Drata.Asset_Inventory",
            "Drata.Access_Reviews",
            "Drata.Continuous_Control_Monitoring",
            "Drata.Evidence_Collection",
            "Drata.Vendor_Risk_Management",
            "Twilio.config_management",
            "Drata.Policy_Management",
            "NanoVMs.List_Deployments",
            "VSCode.vscode_workspace_list_folders",
            "Azure.azmcp_resourcegroup_list"
        ],
        "query": "Can you show me all the devices and software currently in use across our company, including cloud and on-prem assets?",
        "response_time": 349.41625595092773,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.0
    },
    {
        "expected_tools": [
            "Memgraph.Export_Data_Tool"
        ],
        "matching_tools": [
            "Memgraph.Export_Data_Tool"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Query_Runner",
            "Memgraph.Memgraph_Cypher_Generator",
            "Memgraph.Procedures_Catalog"
        ],
        "returned_tools": [
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Export_Data_Tool",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Query_Runner",
            "Memgraph.Memgraph_Cypher_Generator",
            "Memgraph.Procedures_Catalog"
        ],
        "query": "How can I get all my graph data out of the database so I can analyze it in another tool?",
        "response_time": 326.5864849090576,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.57
    },
    {
        "expected_tools": [
            "GitHub.ListSecretScanningAlerts"
        ],
        "matching_tools": [
            "GitHub.ListSecretScanningAlerts"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.GetSecretScanningAlert",
            "JFrog.secrets_scan",
            "GitHub.ListCodeScanningAlerts",
            "OpsLevel.security/codeql",
            "GitHub.GetMe",
            "WaveSpeed.Port_Scan",
            "GitHub.GetFileContents",
            "GitHub.SearchPullRequests",
            "GitHub.SearchIssues"
        ],
        "returned_tools": [
            "GitHub.GetSecretScanningAlert",
            "GitHub.ListSecretScanningAlerts",
            "JFrog.secrets_scan",
            "GitHub.ListCodeScanningAlerts",
            "OpsLevel.security/codeql",
            "GitHub.GetMe",
            "WaveSpeed.Port_Scan",
            "GitHub.GetFileContents",
            "GitHub.SearchPullRequests",
            "GitHub.SearchIssues"
        ],
        "query": "Can you show me if there are any exposed secrets or credentials in my repo?",
        "response_time": 297.6686954498291,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "OpenSearch.get_aliases"
        ],
        "matching_tools": [
            "OpenSearch.get_aliases"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpenSearch.get_cluster_state",
            "OpenSearch.index_document",
            "OpenSearch.search",
            "OpenSearch.update_mapping",
            "OpenSearch.get_mapping",
            "OpenSearch.bulk",
            "OpenSearch.analyze_text",
            "OpenSearch.delete_index",
            "Hiveflow.Search"
        ],
        "returned_tools": [
            "OpenSearch.get_aliases",
            "OpenSearch.get_cluster_state",
            "OpenSearch.index_document",
            "OpenSearch.search",
            "OpenSearch.update_mapping",
            "OpenSearch.get_mapping",
            "OpenSearch.bulk",
            "OpenSearch.analyze_text",
            "OpenSearch.delete_index",
            "Hiveflow.Search"
        ],
        "query": "How can I see all the index aliases set up in my search cluster?",
        "response_time": 30713.20343017578,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.71
    },
    {
        "expected_tools": [
            "Sophtron.VerifyAccount"
        ],
        "matching_tools": [
            "Sophtron.VerifyAccount"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Sophtron.GetAccounts",
            "Sophtron.GetTransactions",
            "LaunchDarkly.account",
            "Sophtron.GetStatements",
            "ThoughtSpot.license",
            "Sophtron.GetCreditScore",
            "Sophtron.GetHoldings",
            "Sophtron.InitiateTransfer",
            "Auth0.Permissions"
        ],
        "returned_tools": [
            "Sophtron.VerifyAccount",
            "Sophtron.GetAccounts",
            "Sophtron.GetTransactions",
            "LaunchDarkly.account",
            "Sophtron.GetStatements",
            "ThoughtSpot.license",
            "Sophtron.GetCreditScore",
            "Sophtron.GetHoldings",
            "Sophtron.InitiateTransfer",
            "Auth0.Permissions"
        ],
        "query": "How can I check if my bank account is verified for linking to a new financial app?",
        "response_time": 350.02756118774414,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Rember.choices"
        ],
        "matching_tools": [
            "Rember.choices"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Rember.replace",
            "Rember.compose",
            "Rember.list",
            "Rember.rewrite",
            "Hyperbrowser.text_comparison",
            "Memgraph.Procedures_Catalog",
            "Memgraph.Graph_Schema_Viewer",
            "Netdata.netdata_stats",
            "Riza.classification"
        ],
        "returned_tools": [
            "Rember.choices",
            "Rember.replace",
            "Rember.compose",
            "Rember.list",
            "Rember.rewrite",
            "Hyperbrowser.text_comparison",
            "Memgraph.Procedures_Catalog",
            "Memgraph.Graph_Schema_Viewer",
            "Netdata.netdata_stats",
            "Riza.classification"
        ],
        "query": "What are the main differences between the various types of memory in computers? Can you list them as options?",
        "response_time": 304.7595024108887,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 5.14
    },
    {
        "expected_tools": [
            "CodeLogic.Reporting_Engine"
        ],
        "matching_tools": [
            "CodeLogic.Reporting_Engine"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "CodeLogic.Graph_Generator",
            "CodeLogic.Dependency_Resolver",
            "CodeLogic.Scanner",
            "SonarQube.Show_Issue_Details",
            "CodeLogic.Application_Modeler",
            "CodeLogic.Dataflow_Analyzer",
            "SonarQube.Get_Project_Metrics",
            "GitHub.GetCodeScanningAlert",
            "SonarQube.Trigger_Project_Analysis"
        ],
        "returned_tools": [
            "CodeLogic.Graph_Generator",
            "CodeLogic.Reporting_Engine",
            "CodeLogic.Dependency_Resolver",
            "CodeLogic.Scanner",
            "SonarQube.Show_Issue_Details",
            "CodeLogic.Application_Modeler",
            "CodeLogic.Dataflow_Analyzer",
            "SonarQube.Get_Project_Metrics",
            "GitHub.GetCodeScanningAlert",
            "SonarQube.Trigger_Project_Analysis"
        ],
        "query": "Can you show me a detailed report of the code dependencies and changes in my last few builds for compliance?",
        "response_time": 331.6166400909424,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_servicebus_queue_list"
        ],
        "matching_tools": [
            "Azure.azmcp_servicebus_queue_list"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_servicebus_message_receive",
            "Azure.azmcp_servicebus_namespace_list",
            "Azure.azmcp_servicebus_message_send",
            "Azure.azmcp_appconfig_kv_set",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_search_index_query",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_kusto_query"
        ],
        "returned_tools": [
            "Azure.azmcp_servicebus_queue_list",
            "Azure.azmcp_servicebus_message_receive",
            "Azure.azmcp_servicebus_namespace_list",
            "Azure.azmcp_servicebus_message_send",
            "Azure.azmcp_appconfig_kv_set",
            "Azure.azmcp_search_index_list",
            "Azure.azmcp_search_index_query",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_appconfig_account_list",
            "Azure.azmcp_kusto_query"
        ],
        "query": "How can I see all the message queues set up in my Azure Service Bus namespace?",
        "response_time": 305.0053119659424,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.GetToolsetsTools"
        ],
        "matching_tools": [
            "GitHub.GetToolsetsTools"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "GitHub.ListAvailableToolsets",
            "GitHub.ListCodeScanningAlerts",
            "GitHub.SearchCode",
            "GitHub.ListWorkflowRuns",
            "OpsLevel.code/ci",
            "GitHub.ListTags",
            "GitHub.GetCommit",
            "GitHub.ListSecretScanningAlerts",
            "GitHub.ForkRepository"
        ],
        "returned_tools": [
            "GitHub.GetToolsetsTools",
            "GitHub.ListAvailableToolsets",
            "GitHub.ListCodeScanningAlerts",
            "GitHub.SearchCode",
            "GitHub.ListWorkflowRuns",
            "OpsLevel.code/ci",
            "GitHub.ListTags",
            "GitHub.GetCommit",
            "GitHub.ListSecretScanningAlerts",
            "GitHub.ForkRepository"
        ],
        "query": "What are all the available developer tools grouped by category in this organization?",
        "response_time": 301.1343479156494,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.14
    },
    {
        "expected_tools": [
            "Netdata.alarms_unsilence"
        ],
        "matching_tools": [
            "Netdata.alarms_unsilence"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Netdata.alarms_silence",
            "Netdata.alarms_list",
            "Netdata.netdata_config",
            "Netdata.data_query",
            "Netdata.netdata_info",
            "Netdata.log_tail",
            "Netdata.netdata_stats",
            "Azure.azmcp_appconfig_kv_unlock",
            "Netdata.system_info"
        ],
        "returned_tools": [
            "Netdata.alarms_unsilence",
            "Netdata.alarms_silence",
            "Netdata.alarms_list",
            "Netdata.netdata_config",
            "Netdata.data_query",
            "Netdata.netdata_info",
            "Netdata.log_tail",
            "Netdata.netdata_stats",
            "Azure.azmcp_appconfig_kv_unlock",
            "Netdata.system_info"
        ],
        "query": "How do I quickly re-enable alerts for all previously silenced warnings on my monitoring dashboard?",
        "response_time": 288.65599632263184,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "NanoVMs.Describe_Deployment"
        ],
        "matching_tools": [
            "NanoVMs.Describe_Deployment"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "NanoVMs.Create_Deployment",
            "NanoVMs.List_Deployments",
            "NanoVMs.MCP_Image_Management",
            "NanoVMs.SSH_Management",
            "NanoVMs.Delete_Deployment",
            "GitHub.GetTag",
            "Auth0.Entitlements",
            "Netdata.netdata_info",
            "Azure.azmcp_appconfig_account_list"
        ],
        "returned_tools": [
            "NanoVMs.Describe_Deployment",
            "NanoVMs.Create_Deployment",
            "NanoVMs.List_Deployments",
            "NanoVMs.MCP_Image_Management",
            "NanoVMs.SSH_Management",
            "NanoVMs.Delete_Deployment",
            "GitHub.GetTag",
            "Auth0.Entitlements",
            "Netdata.netdata_info",
            "Azure.azmcp_appconfig_account_list"
        ],
        "query": "Can you tell me all the details about my latest deployment, like how it's configured and what resources it's using?",
        "response_time": 294.62361335754395,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.86
    },
    {
        "expected_tools": [
            "Twilio.toolbelt"
        ],
        "matching_tools": [
            "Twilio.toolbelt"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Twilio.access_management",
            "Twilio.reporting",
            "Twilio.config_management",
            "Twilio.plugin_management",
            "LaunchDarkly.account",
            "Zapier.Email_Parser",
            "Auth0.Audience_Listing",
            "Twilio.project_templates",
            "Upstash.Set"
        ],
        "returned_tools": [
            "Twilio.toolbelt",
            "Twilio.access_management",
            "Twilio.reporting",
            "Twilio.config_management",
            "Twilio.plugin_management",
            "LaunchDarkly.account",
            "Zapier.Email_Parser",
            "Auth0.Audience_Listing",
            "Twilio.project_templates",
            "Upstash.Set"
        ],
        "query": "How can I quickly get a list of all phone numbers and their capabilities in my Twilio account?",
        "response_time": 1040.4925346374512,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.29
    },
    {
        "expected_tools": [
            "Liveblocks.send_user_message"
        ],
        "matching_tools": [
            "Liveblocks.send_user_message"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Tianji.notification",
            "Liveblocks.admin_get_user_roles",
            "Liveblocks.admin_set_user_roles",
            "Liveblocks.get_user_presence",
            "Liveblocks.get_room_info",
            "Yunxin.Notification_-_Callback",
            "Upstash.PubSub",
            "Liveblocks.list_rooms",
            "Tianji.comment"
        ],
        "returned_tools": [
            "Liveblocks.send_user_message",
            "Tianji.notification",
            "Liveblocks.admin_get_user_roles",
            "Liveblocks.admin_set_user_roles",
            "Liveblocks.get_user_presence",
            "Liveblocks.get_room_info",
            "Yunxin.Notification_-_Callback",
            "Upstash.PubSub",
            "Liveblocks.list_rooms",
            "Tianji.comment"
        ],
        "query": "How can I notify a collaborator in real time when a document is updated?",
        "response_time": 299.9918460845947,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "ThoughtSpot.admin"
        ],
        "matching_tools": [
            "ThoughtSpot.admin"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "ThoughtSpot.license",
            "ThoughtSpot.analytics",
            "ThoughtSpot.upgrade",
            "LaunchDarkly.account",
            "ThoughtSpot.backup",
            "Sophtron.VerifyAccount",
            "Hiveflow.User_-_Access_Management",
            "ThoughtSpot.service",
            "LaunchDarkly.user"
        ],
        "returned_tools": [
            "ThoughtSpot.admin",
            "ThoughtSpot.license",
            "ThoughtSpot.analytics",
            "ThoughtSpot.upgrade",
            "LaunchDarkly.account",
            "ThoughtSpot.backup",
            "Sophtron.VerifyAccount",
            "Hiveflow.User_-_Access_Management",
            "ThoughtSpot.service",
            "LaunchDarkly.user"
        ],
        "query": "How do I reset a user's password and check if their account is active in our analytics platform?",
        "response_time": 321.9103813171387,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Drata.Vendor_Risk_Management"
        ],
        "matching_tools": [
            "Drata.Vendor_Risk_Management"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Drata.Access_Reviews",
            "Drata.Evidence_Collection",
            "Drata.Continuous_Control_Monitoring",
            "Drata.Policy_Management",
            "Drata.Asset_Inventory",
            "CodeLogic.Scanner",
            "JFrog.iac_scan",
            "JFrog.secrets_scan",
            "JFrog.license_compliance"
        ],
        "returned_tools": [
            "Drata.Vendor_Risk_Management",
            "Drata.Access_Reviews",
            "Drata.Evidence_Collection",
            "Drata.Continuous_Control_Monitoring",
            "Drata.Policy_Management",
            "Drata.Asset_Inventory",
            "CodeLogic.Scanner",
            "JFrog.iac_scan",
            "JFrog.secrets_scan",
            "JFrog.license_compliance"
        ],
        "query": "Can you help me figure out which of our third-party vendors might pose the highest compliance risk and how to automate their risk assessments?",
        "response_time": 310.2283477783203,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.43
    },
    {
        "expected_tools": [
            "Memgraph.Import_Data_Tool"
        ],
        "matching_tools": [
            "Memgraph.Import_Data_Tool"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Export_Data_Tool",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Query_Runner",
            "Memgraph.Memgraph_Cypher_Generator",
            "Memgraph.Procedures_Catalog"
        ],
        "returned_tools": [
            "Memgraph.Import_Data_Tool",
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Export_Data_Tool",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Query_Runner",
            "Memgraph.Memgraph_Cypher_Generator",
            "Memgraph.Procedures_Catalog"
        ],
        "query": "I have a bunch of CSV files with user connections, how do I get them into my graph database for analysis?",
        "response_time": 332.2720527648926,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "LaunchDarkly.user"
        ],
        "matching_tools": [
            "LaunchDarkly.user"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "LaunchDarkly.account",
            "LaunchDarkly.environment",
            "LaunchDarkly.project",
            "LaunchDarkly.api_key",
            "LaunchDarkly.feature_flag",
            "Auth0.Entitlements",
            "Auth0.Policies",
            "GitHub.AssignCopilotToIssue",
            "Upstash.Set"
        ],
        "returned_tools": [
            "LaunchDarkly.user",
            "LaunchDarkly.account",
            "LaunchDarkly.environment",
            "LaunchDarkly.project",
            "LaunchDarkly.api_key",
            "LaunchDarkly.feature_flag",
            "Auth0.Entitlements",
            "Auth0.Policies",
            "GitHub.AssignCopilotToIssue",
            "Upstash.Set"
        ],
        "query": "How do I add a new team member to my project and make sure they only have read access?",
        "response_time": 361.85479164123535,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 6.43
    },
    {
        "expected_tools": [
            "Twilio.plugin_management"
        ],
        "matching_tools": [
            "Twilio.plugin_management"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Twilio.toolbelt",
            "Twilio.config_management",
            "Twilio.project_templates",
            "Twilio.access_management",
            "Klaviyo.Templates",
            "Twilio.reporting",
            "VSCode.vscode_extension_install",
            "CodeLogic.Dependency_Resolver",
            "Upstash.Set"
        ],
        "returned_tools": [
            "Twilio.plugin_management",
            "Twilio.toolbelt",
            "Twilio.config_management",
            "Twilio.project_templates",
            "Twilio.access_management",
            "Klaviyo.Templates",
            "Twilio.reporting",
            "VSCode.vscode_extension_install",
            "CodeLogic.Dependency_Resolver",
            "Upstash.Set"
        ],
        "query": "How do I add new features to my Twilio CLI for SMS automation?",
        "response_time": 364.591121673584,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Memgraph.Query_Runner"
        ],
        "matching_tools": [
            "Memgraph.Query_Runner"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Memgraph.Procedures_Catalog",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Memgraph_Cypher_Generator",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Export_Data_Tool"
        ],
        "returned_tools": [
            "Memgraph.Procedures_Catalog",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Memgraph_Cypher_Generator",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Query_Runner",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Export_Data_Tool"
        ],
        "query": "How can I find the shortest path between two users in my social network data?",
        "response_time": 294.65270042419434,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.43
    },
    {
        "expected_tools": [
            "Yunxin.Room_Management"
        ],
        "matching_tools": [
            "Yunxin.Room_Management"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Yunxin.Statistics_-_Monitoring",
            "Yunxin.Permission_-_Role_Management",
            "Yunxin.Media_Control",
            "Yunxin.User_Management",
            "Yunxin.Notification_-_Callback",
            "Liveblocks.get_user_presence",
            "Liveblocks.list_rooms",
            "Netdata.alarms_list",
            "Liveblocks.get_room_info"
        ],
        "returned_tools": [
            "Yunxin.Room_Management",
            "Yunxin.Statistics_-_Monitoring",
            "Yunxin.Permission_-_Role_Management",
            "Yunxin.Media_Control",
            "Yunxin.User_Management",
            "Yunxin.Notification_-_Callback",
            "Liveblocks.get_user_presence",
            "Liveblocks.list_rooms",
            "Netdata.alarms_list",
            "Liveblocks.get_room_info"
        ],
        "query": "How do I check if a virtual meeting room is still active and who is currently in it?",
        "response_time": 309.0319633483887,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Tako.Trajectory"
        ],
        "matching_tools": [
            "Tako.Trajectory"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Tako.Behavior",
            "Tako.Raster",
            "Tako.PSTH_Peri_Stimulus_Time_Histogram",
            "CodeLogic.Dataflow_Analyzer",
            "Tako.Cross_correlation",
            "Tako.Tuning",
            "Memgraph.Graph_Visualizer",
            "OctoEverywhere.Timelapse",
            "OpenSearch.get_cluster_state"
        ],
        "returned_tools": [
            "Tako.Trajectory",
            "Tako.Behavior",
            "Tako.Raster",
            "Tako.PSTH_Peri_Stimulus_Time_Histogram",
            "CodeLogic.Dataflow_Analyzer",
            "Tako.Cross_correlation",
            "Tako.Tuning",
            "Memgraph.Graph_Visualizer",
            "OctoEverywhere.Timelapse",
            "OpenSearch.get_cluster_state"
        ],
        "query": "Can you show me how the animal moved during the experiment session? I want to see the path and maybe a heatmap of where it spent the most time.",
        "response_time": 300.1227378845215,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "ThoughtSpot.backup"
        ],
        "matching_tools": [
            "ThoughtSpot.backup"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "ThoughtSpot.admin",
            "ThoughtSpot.analytics",
            "ThoughtSpot.license",
            "ThoughtSpot.upgrade",
            "ThoughtSpot.cluster",
            "ThoughtSpot.service",
            "SonarQube.Trigger_Project_Analysis",
            "OpenSearch.get_cluster_state",
            "Milvus.Partition_Management"
        ],
        "returned_tools": [
            "ThoughtSpot.backup",
            "ThoughtSpot.admin",
            "ThoughtSpot.analytics",
            "ThoughtSpot.license",
            "ThoughtSpot.upgrade",
            "ThoughtSpot.cluster",
            "ThoughtSpot.service",
            "SonarQube.Trigger_Project_Analysis",
            "OpenSearch.get_cluster_state",
            "Milvus.Partition_Management"
        ],
        "query": "How can I recover my analytics dashboard after accidental deletion?",
        "response_time": 292.041540145874,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.43
    },
    {
        "expected_tools": [
            "Memgraph.Procedures_Catalog"
        ],
        "matching_tools": [
            "Memgraph.Procedures_Catalog"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Memgraph_Cypher_Generator",
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Query_Runner",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Export_Data_Tool"
        ],
        "returned_tools": [
            "Memgraph.Procedures_Catalog",
            "Memgraph.Cypher_QA_Chain",
            "Memgraph.Graph_Visualizer",
            "Memgraph.Memgraph_Data_Retriever",
            "Memgraph.Memgraph_Cypher_Generator",
            "Memgraph.Visual_Query_Builder",
            "Memgraph.Graph_Schema_Viewer",
            "Memgraph.Query_Runner",
            "Memgraph.Import_Data_Tool",
            "Memgraph.Export_Data_Tool"
        ],
        "query": "What graph algorithms can I use to analyze connections in my data and how do I run them?",
        "response_time": 392.4257755279541,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "Shortcut.Summarize"
        ],
        "matching_tools": [
            "Shortcut.Summarize"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "SonarQube.Show_Issue_Details",
            "Shortcut.Update",
            "Shortcut.Create",
            "SonarQube.Trigger_Project_Analysis",
            "Shortcut.Ask",
            "DevRev.summarization",
            "Nutrient.DWS_MCP_Server",
            "LaunchDarkly.project",
            "Memgraph.Query_Runner"
        ],
        "returned_tools": [
            "Shortcut.Summarize",
            "SonarQube.Show_Issue_Details",
            "Shortcut.Update",
            "Shortcut.Create",
            "SonarQube.Trigger_Project_Analysis",
            "Shortcut.Ask",
            "DevRev.summarization",
            "Nutrient.DWS_MCP_Server",
            "LaunchDarkly.project",
            "Memgraph.Query_Runner"
        ],
        "query": "Can you give me a summary of what changed in our main project this week?",
        "response_time": 327.15439796447754,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "OpsLevel.code/test"
        ],
        "matching_tools": [
            "OpsLevel.code/test"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "OpsLevel.security/codeql",
            "OpsLevel.code/ci",
            "OpsLevel.code/license",
            "OpsLevel.actions/github_actions",
            "OpsLevel.docs/readme",
            "OpsLevel.docs/contributing",
            "CodeLogic.Scanner",
            "AWS.Local_Simulation_of_Step_Functions_Workflows",
            "SonarQube.Check_Quality_Gate"
        ],
        "returned_tools": [
            "OpsLevel.code/test",
            "OpsLevel.security/codeql",
            "OpsLevel.code/ci",
            "OpsLevel.code/license",
            "OpsLevel.actions/github_actions",
            "OpsLevel.docs/readme",
            "OpsLevel.docs/contributing",
            "CodeLogic.Scanner",
            "AWS.Local_Simulation_of_Step_Functions_Workflows",
            "SonarQube.Check_Quality_Gate"
        ],
        "query": "Does this codebase have any automated tests set up or do I need to add them?",
        "response_time": 316.24555587768555,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Milvus.Partition_Management"
        ],
        "matching_tools": [
            "Milvus.Partition_Management"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Milvus.Collection_Management",
            "Milvus.Schema_Management",
            "Milvus.Index_Management",
            "Milvus.Search_and_Query",
            "Milvus.Data_Import_Export",
            "klusterai.Grouping",
            "Klaviyo.Profiles",
            "OpenSearch.index_document",
            "LaunchDarkly.user"
        ],
        "returned_tools": [
            "Milvus.Collection_Management",
            "Milvus.Partition_Management",
            "Milvus.Schema_Management",
            "Milvus.Index_Management",
            "Milvus.Search_and_Query",
            "Milvus.Data_Import_Export",
            "klusterai.Grouping",
            "Klaviyo.Profiles",
            "OpenSearch.index_document",
            "LaunchDarkly.user"
        ],
        "query": "How can I organize and manage different user groups' data in my large vector database for faster search?",
        "response_time": 326.27344131469727,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "klusterai.Ordering"
        ],
        "matching_tools": [
            "klusterai.Ordering"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "klusterai.Grouping",
            "klusterai.Filters",
            "klusterai.Profiling",
            "klusterai.Joins",
            "klusterai.Metrics",
            "Sophtron.GetTransactions",
            "klusterai.Limit",
            "Klaviyo.Events",
            "Upstash.ZSet"
        ],
        "returned_tools": [
            "klusterai.Ordering",
            "klusterai.Grouping",
            "klusterai.Filters",
            "klusterai.Profiling",
            "klusterai.Joins",
            "klusterai.Metrics",
            "Sophtron.GetTransactions",
            "klusterai.Limit",
            "Klaviyo.Events",
            "Upstash.ZSet"
        ],
        "query": "Can you show me the latest sales transactions sorted by amount?",
        "response_time": 409.65819358825684,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "VSCode.vscode_workspace_close_folder"
        ],
        "matching_tools": [
            "VSCode.vscode_workspace_close_folder"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "VSCode.vscode_fs_delete_file",
            "VSCode.vscode_workspace_open_folder",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_workspace_list_folders",
            "Hyperbrowser.code_editor",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_editor_get_selection",
            "VSCode.vscode_editor_replace_selection"
        ],
        "returned_tools": [
            "VSCode.vscode_workspace_close_folder",
            "VSCode.vscode_fs_delete_file",
            "VSCode.vscode_workspace_open_folder",
            "VSCode.vscode_workspace_get_active_file",
            "VSCode.vscode_fs_list_directory",
            "VSCode.vscode_workspace_list_folders",
            "Hyperbrowser.code_editor",
            "VSCode.vscode_fs_read_file",
            "VSCode.vscode_editor_get_selection",
            "VSCode.vscode_editor_replace_selection"
        ],
        "query": "How do I remove a folder from my current workspace in my code editor?",
        "response_time": 463.72222900390625,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.57
    },
    {
        "expected_tools": [
            "Campertunity.listMyCamps"
        ],
        "matching_tools": [
            "Campertunity.listMyCamps"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Campertunity.messaging",
            "Campertunity.userProfile",
            "Campertunity.reviews",
            "Campertunity.bookCamp",
            "Campertunity.searchCamps",
            "Twilio.project_templates",
            "Azure.azmcp_subscription_list",
            "Zapier.Code_by_Zapier",
            "Zapier.Webhooks"
        ],
        "returned_tools": [
            "Campertunity.listMyCamps",
            "Campertunity.messaging",
            "Campertunity.userProfile",
            "Campertunity.reviews",
            "Campertunity.bookCamp",
            "Campertunity.searchCamps",
            "Twilio.project_templates",
            "Azure.azmcp_subscription_list",
            "Zapier.Code_by_Zapier",
            "Zapier.Webhooks"
        ],
        "query": "How do I put my campsite up for rent and show people when it's available?",
        "response_time": 301.4554977416992,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Globalping.mtr"
        ],
        "matching_tools": [
            "Globalping.mtr"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Globalping.dns",
            "WaveSpeed.Ping",
            "Globalping.ping",
            "WaveSpeed.Traceroute",
            "Globalping.http",
            "Globalping.tcp",
            "Globalping.trace",
            "Hunter.Ping",
            "WaveSpeed.GeoIP"
        ],
        "returned_tools": [
            "Globalping.dns",
            "WaveSpeed.Ping",
            "Globalping.ping",
            "WaveSpeed.Traceroute",
            "Globalping.http",
            "Globalping.mtr",
            "Globalping.tcp",
            "Globalping.trace",
            "Hunter.Ping",
            "WaveSpeed.GeoIP"
        ],
        "query": "Why is my connection to github.com so slow from my location?",
        "response_time": 278.84435653686523,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 10.0
    },
    {
        "expected_tools": [
            "Auth0.Policies"
        ],
        "matching_tools": [
            "Auth0.Policies"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Auth0.Entitlements",
            "Auth0.Permissions",
            "Auth0.Identities",
            "Liveblocks.admin_get_user_roles",
            "Auth0.Resource_Registration",
            "Auth0.Audience_Listing",
            "Drata.Access_Reviews",
            "LaunchDarkly.user",
            "Yunxin.Permission_-_Role_Management"
        ],
        "returned_tools": [
            "Auth0.Policies",
            "Auth0.Entitlements",
            "Auth0.Permissions",
            "Auth0.Identities",
            "Liveblocks.admin_get_user_roles",
            "Auth0.Resource_Registration",
            "Auth0.Audience_Listing",
            "Drata.Access_Reviews",
            "LaunchDarkly.user",
            "Yunxin.Permission_-_Role_Management"
        ],
        "query": "How can I see which users have access to specific resources in my system and update their permissions?",
        "response_time": 297.0731258392334,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "GitHub.GetIssue"
        ],
        "matching_tools": [
            "GitHub.GetIssue"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "SonarQube.Show_Issue_Details",
            "GitHub.GetIssueComments",
            "GitHub.SearchIssues",
            "GitHub.GetCommit",
            "GitHub.UpdateIssue",
            "GitHub.ListIssues",
            "GitHub.GetCodeScanningAlert",
            "GitHub.AssignCopilotToIssue",
            "GitHub.GetPullRequest"
        ],
        "returned_tools": [
            "GitHub.GetIssue",
            "SonarQube.Show_Issue_Details",
            "GitHub.GetIssueComments",
            "GitHub.SearchIssues",
            "GitHub.GetCommit",
            "GitHub.UpdateIssue",
            "GitHub.ListIssues",
            "GitHub.GetCodeScanningAlert",
            "GitHub.AssignCopilotToIssue",
            "GitHub.GetPullRequest"
        ],
        "query": "Can you show me the details of issue number 4521 in the tensorflow repository?",
        "response_time": 313.2154941558838,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.71
    },
    {
        "expected_tools": [
            "klusterai.Grouping"
        ],
        "matching_tools": [
            "klusterai.Grouping"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "klusterai.Filters",
            "klusterai.Metrics",
            "klusterai.Ordering",
            "klusterai.Profiling",
            "klusterai.Joins",
            "PlayCanvas.user",
            "Auth0.Audience_Listing",
            "Liveblocks.admin_get_user_roles",
            "GitHub.SearchUsers"
        ],
        "returned_tools": [
            "klusterai.Grouping",
            "klusterai.Filters",
            "klusterai.Metrics",
            "klusterai.Ordering",
            "klusterai.Profiling",
            "klusterai.Joins",
            "PlayCanvas.user",
            "Auth0.Audience_Listing",
            "Liveblocks.admin_get_user_roles",
            "GitHub.SearchUsers"
        ],
        "query": "Can you show me the number of active users by country for the last quarter?",
        "response_time": 403.69462966918945,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 7.57
    },
    {
        "expected_tools": [
            "DevRev.sentiment_analysis"
        ],
        "matching_tools": [
            "DevRev.sentiment_analysis"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "DevRev.priority_detection",
            "DevRev.ticket_categorization",
            "HubSpot.Ticket_Management",
            "HubSpot.Contact_Insights",
            "DevRev.translation",
            "DevRev.summarization",
            "OctoEverywhere.Knowledge",
            "DevRev.entity_extraction",
            "SonarQube.Trigger_Project_Analysis"
        ],
        "returned_tools": [
            "DevRev.sentiment_analysis",
            "DevRev.priority_detection",
            "DevRev.ticket_categorization",
            "HubSpot.Ticket_Management",
            "HubSpot.Contact_Insights",
            "DevRev.translation",
            "DevRev.summarization",
            "OctoEverywhere.Knowledge",
            "DevRev.entity_extraction",
            "SonarQube.Trigger_Project_Analysis"
        ],
        "query": "Can you tell me if our latest customer support tickets are mostly positive or negative?",
        "response_time": 283.72859954833984,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.0
    },
    {
        "expected_tools": [
            "Azure.azmcp_servicebus_message_receive"
        ],
        "matching_tools": [
            "Azure.azmcp_servicebus_message_receive"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "Azure.azmcp_appconfig_kv_show",
            "Azure.azmcp_search_index_query",
            "Azure.azmcp_monitor_query_metrics",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_servicebus_queue_list",
            "Azure.azmcp_servicebus_message_send",
            "Azure.azmcp_postgres_database_list",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_monitor_query_logs"
        ],
        "returned_tools": [
            "Azure.azmcp_servicebus_message_receive",
            "Azure.azmcp_appconfig_kv_show",
            "Azure.azmcp_search_index_query",
            "Azure.azmcp_monitor_query_metrics",
            "Azure.azmcp_kusto_query",
            "Azure.azmcp_servicebus_queue_list",
            "Azure.azmcp_servicebus_message_send",
            "Azure.azmcp_postgres_database_list",
            "Azure.azmcp_appconfig_kv_list",
            "Azure.azmcp_monitor_query_logs"
        ],
        "query": "Can you show me the latest messages waiting in my Azure queue for processing orders?",
        "response_time": 302.5665283203125,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 8.14
    },
    {
        "expected_tools": [
            "UnifAI.Ask"
        ],
        "matching_tools": [
            "UnifAI.Ask"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "UnifAI.ImageDescription",
            "UnifAI.SpeechRecognition",
            "UnifAI.OCR",
            "DevRev.summarization",
            "UnifAI.DocumentQA",
            "AllVoiceLab.Summarizer",
            "UnifAI.ImageQuestionAnswering",
            "klusterai.Metrics",
            "Riza.summarization"
        ],
        "returned_tools": [
            "UnifAI.ImageDescription",
            "UnifAI.SpeechRecognition",
            "UnifAI.Ask",
            "UnifAI.OCR",
            "DevRev.summarization",
            "UnifAI.DocumentQA",
            "AllVoiceLab.Summarizer",
            "UnifAI.ImageQuestionAnswering",
            "klusterai.Metrics",
            "Riza.summarization"
        ],
        "query": "Can you help me summarize the main points from this article I just read?",
        "response_time": 290.79127311706543,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    },
    {
        "expected_tools": [
            "SonarQube.Check_Quality_Gate"
        ],
        "matching_tools": [
            "SonarQube.Check_Quality_Gate"
        ],
        "missing_tools": [],
        "unexpected_tools": [
            "SonarQube.Trigger_Project_Analysis",
            "SonarQube.Show_Issue_Details",
            "AWS.Validate_State_Machine_Definitions",
            "SonarQube.List_Issues",
            "SonarQube.Show_Quality_Gate_Details",
            "SonarQube.List_Quality_Gates",
            "ThoughtSpot.upgrade",
            "SonarQube.Get_Project_Metrics",
            "OpsLevel.docs/readme"
        ],
        "returned_tools": [
            "SonarQube.Trigger_Project_Analysis",
            "SonarQube.Show_Issue_Details",
            "SonarQube.Check_Quality_Gate",
            "AWS.Validate_State_Machine_Definitions",
            "SonarQube.List_Issues",
            "SonarQube.Show_Quality_Gate_Details",
            "SonarQube.List_Quality_Gates",
            "ThoughtSpot.upgrade",
            "SonarQube.Get_Project_Metrics",
            "OpsLevel.docs/readme"
        ],
        "query": "Did my latest code changes pass all the quality checks before deployment?",
        "response_time": 316.47515296936035,
        "match": true,
        "match_top_1": true,
        "match_top_3": false,
        "match_top_5": false,
        "match_top_10": false,
        "precision_metric": 0.1,
        "recall_metric": 1.0,
        "judge_metric": 9.0
    }
]